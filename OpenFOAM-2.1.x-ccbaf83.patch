 .gitignore                                         |   1 +
 Allwmake                                           |  15 +-
 applications/Allwmake                              |  12 +-
 ...ctionDisplacementCorrectionFvPatchVectorField.C |   6 +-
 .../mesh/generation/extrude2DMesh/Make/options     |   1 -
 .../mesh/generation/snappyHexMesh/Make/options     |   1 -
 .../miscellaneous/foamDebugSwitches/Make/options   |   2 -
 .../dataConversion/foamToEnsight/Make/options      |   1 -
 .../surfaceFeatureExtract/surfaceFeatureExtract.C  |   4 +-
 bin/paraFoam                                       |   7 +
 etc/bashrc                                         |  23 +-
 etc/config/paraview-osx.sh                         |  15 +
 etc/config/scotch.sh                               |   9 +-
 etc/config/settings.sh                             |  38 ++-
 src/Allwmake                                       |  12 +-
 src/OSspecific/POSIX/POSIX.C                       |  23 ++
 src/OSspecific/POSIX/clockTime/clockTime.H         |   3 +
 src/OSspecific/POSIX/fileStat.C                    |   2 +
 src/OSspecific/POSIX/printStack.C                  | 323 ++++++++++-----------
 src/OSspecific/POSIX/signals/sigFpe.C              |  89 +++++-
 src/OSspecific/POSIX/signals/sigFpe.H              |  20 +-
 .../db/dynamicLibrary/dynamicCode/dynamicCode.C    |   4 +
 src/OpenFOAM/fields/Fields/Field/Field.C           |   4 +-
 .../meshes/meshShapes/cellShape/cellShapeIO.C      |   2 +-
 src/OpenFOAM/meshes/polyMesh/polyMesh.C            |   8 +-
 src/OpenFOAM/primitives/Scalar/doubleFloat.H       |   9 +
 src/conversion/ensight/part/ensightPartCells.C     |   2 +-
 src/conversion/ensight/part/ensightPartIO.C        |   2 +-
 src/edgeMesh/edgeMesh.C                            |   4 +-
 .../cylindricalInletVelocityFvPatchVectorField.C   |   2 +-
 .../gradSchemes/fourthGrad/fourthGrad.C            |   2 +-
 .../leastSquaresGrad/leastSquaresVectors.C         |   4 +-
 .../limitedSchemes/LimitedScheme/LimitedScheme.C   |   2 +-
 .../schemes/linearUpwind/linearUpwind.C            |   2 +-
 .../schemes/skewCorrected/skewCorrectionVectors.C  |   2 +-
 .../surfaceInterpolation/surfaceInterpolation.C    |   2 +-
 src/fvAgglomerationMethods/Allwmake                |  15 +-
 .../MGridGenGamgAgglomeration/Make/options         |  10 +
 src/parallel/decompose/Allwmake                    |   6 +-
 src/parallel/decompose/metisDecomp/Make/options    |  10 +
 src/parallel/decompose/ptscotchDecomp/Make/options |  10 +-
 src/parallel/decompose/scotchDecomp/Make/options   |   8 +-
 .../fieldValues/faceSource/faceSourceTemplates.C   |   6 +-
 .../regionSizeDistribution.C                       |   2 +-
 .../thermoBaffleModels/noThermo/noThermo.C         |   2 +-
 src/sampling/cuttingPlane/cuttingPlane.C           |   6 +-
 .../sampledSurface/sampledPatch/sampledPatch.C     |   2 +-
 .../sampledSurfaces/sampledSurfacesTemplates.C     |   2 +-
 src/surfMesh/MeshedSurface/MeshedSurface.C         |  20 +-
 src/surfMesh/MeshedSurface/MeshedSurface.H         |   2 +-
 .../MeshedSurfaceIOAllocator.C                     |   8 +-
 .../UnsortedMeshedSurface/UnsortedMeshedSurface.C  |   6 +-
 src/surfMesh/surfMesh/surfMesh.C                   |   2 +-
 .../chemistryReaders/chemkinReader/chemkinReader.C |   9 +
 src/triSurface/triSurface/interfaces/AC3D/readAC.C |   6 +-
 .../RAS/SpalartAllmaras/SpalartAllmaras.H          |   2 +-
 wmake/Makefile                                     |   4 +
 wmake/rules/darwin64Clang/c                        |  16 +
 wmake/rules/darwin64Clang/c++                      |  31 ++
 wmake/rules/darwin64Clang/c++Debug                 |   2 +
 wmake/rules/darwin64Clang/c++Opt                   |   3 +
 wmake/rules/darwin64Clang/c++Prof                  |   2 +
 wmake/rules/darwin64Clang/cDebug                   |   2 +
 wmake/rules/darwin64Clang/cOpt                     |   2 +
 wmake/rules/darwin64Clang/cProf                    |   2 +
 wmake/rules/darwin64Clang/general                  |   8 +
 66 files changed, 586 insertions(+), 278 deletions(-)

diff --git a/.gitignore b/.gitignore
index 7c8bce0..039c370 100644
--- a/.gitignore
+++ b/.gitignore
@@ -42,6 +42,7 @@ linuxming*/
 SiCortex*Gcc*/
 solaris*Gcc*/
 SunOS*Gcc*/
+darwin*Clang*/
 platforms/
 
 # reinstate wmake/rules that might look like build folders
diff --git a/Allwmake b/Allwmake
index 16edfd1..3e17cfc 100755
--- a/Allwmake
+++ b/Allwmake
@@ -8,11 +8,13 @@ wmakeCheckPwd "$WM_PROJECT_DIR" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 # wmake is required for subsequent targets
 ( cd wmake/src && make )
@@ -22,7 +24,8 @@ if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
     $WM_THIRD_PARTY_DIR/Allwmake
 else
-    echo "no ThirdParty sources found - skipping"
+	[ "$(uname -s)" != "Darwin" ] \
+		&& echo "no ThirdParty sources found - skipping"
 fi
 
 # build OpenFOAM libraries and applications
diff --git a/applications/Allwmake b/applications/Allwmake
index 00bc326..6d45c88 100755
--- a/applications/Allwmake
+++ b/applications/Allwmake
@@ -8,11 +8,13 @@ wmakeCheckPwd "$WM_PROJECT_DIR/applications" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 set -x
 
diff --git a/applications/solvers/stressAnalysis/solidEquilibriumDisplacementFoam/tractionDisplacementCorrection/tractionDisplacementCorrectionFvPatchVectorField.C b/applications/solvers/stressAnalysis/solidEquilibriumDisplacementFoam/tractionDisplacementCorrection/tractionDisplacementCorrectionFvPatchVectorField.C
index 47a2005..c716d1c 100644
--- a/applications/solvers/stressAnalysis/solidEquilibriumDisplacementFoam/tractionDisplacementCorrection/tractionDisplacementCorrectionFvPatchVectorField.C
+++ b/applications/solvers/stressAnalysis/solidEquilibriumDisplacementFoam/tractionDisplacementCorrection/tractionDisplacementCorrectionFvPatchVectorField.C
@@ -159,9 +159,9 @@ void tractionDisplacementCorrectionFvPatchVectorField::updateCoeffs()
     const fvPatchField<scalar>& nu =
         patch().lookupPatchField<volScalarField, scalar>("nu");
 
-    scalarField E = rhoE/rho;
-    scalarField mu = E/(2.0*(1.0 + nu));
-    scalarField lambda = nu*E/((1.0 + nu)*(1.0 - 2.0*nu));
+    scalarField E(rhoE/rho);
+    scalarField mu(E/(2.0*(1.0 + nu)));
+    scalarField lambda(nu*E/((1.0 + nu)*(1.0 - 2.0*nu)));
 
     Switch planeStress(mechanicalProperties.lookup("planeStress"));
 
diff --git a/applications/utilities/mesh/generation/extrude2DMesh/Make/options b/applications/utilities/mesh/generation/extrude2DMesh/Make/options
index ef62d4a..4acbc2c 100644
--- a/applications/utilities/mesh/generation/extrude2DMesh/Make/options
+++ b/applications/utilities/mesh/generation/extrude2DMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
     -I$(LIB_SRC)/finiteVolume/lnInclude
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
index b7fd6d3..ce0ea6a 100644
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
index ca4f079..efe8125 100644
--- a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
+++ b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
@@ -42,10 +42,8 @@ EXE_LIBS = \
     -lmeshTools \
     -lmolecularMeasurements \
     -lmolecule \
-/*    -lmultiphaseInterFoam  */ \
     -lODE \
     -lOpenFOAM \
-/*    -lphaseModel  */ \
     -lpotential \
     -lradiationModels \
     -lrandomProcesses \
diff --git a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
index 5d00838..0a407ef 100644
--- a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
+++ b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/lagrangian/basic/lnInclude
diff --git a/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C b/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
index 412c2a9..e125df2 100644
--- a/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
+++ b/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
@@ -632,8 +632,8 @@ int main(int argc, char *argv[])
 
     // Info<< "span " << span << endl;
 
-    pointField start = searchSurf.faceCentres() - span*normals;
-    pointField end = searchSurf.faceCentres() + span*normals;
+    pointField start(searchSurf.faceCentres() - span*normals);
+    pointField end(searchSurf.faceCentres() + span*normals);
     const pointField& faceCentres = searchSurf.faceCentres();
 
     List<List<pointIndexHit> > allHitInfo;
diff --git a/bin/paraFoam b/bin/paraFoam
index e6465f0..ecb9fb1 100755
--- a/bin/paraFoam
+++ b/bin/paraFoam
@@ -72,6 +72,13 @@ extension=OpenFOAM
 
 requirePV=1
 
+
+if [ "$(uname -s)" == "Darwin"]
+	extension=foam
+
+	requirePV=0
+fi
+
 # parse options
 while [ "$#" -gt 0 ]
 do
diff --git a/etc/bashrc b/etc/bashrc
index 3c5981b..95c0de9 100644
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -115,7 +115,8 @@ export WM_PROJECT_DIR=$WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION
 
 # Location of third-party software
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
+[ "$(uname -s)" != "Darwin" ] \
+	&& export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
 
 # Location of site-specific templates etc
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -197,11 +198,18 @@ cleaned=`$foamClean "$PATH" "$foamOldDirs"` && PATH="$cleaned"
 cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
     && LD_LIBRARY_PATH="$cleaned"
 
+#- Clean DYLD_LIBRARY_PATH on OS X
+cleaned=`$foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs"` \
+    && DYLD_LIBRARY_PATH="$cleaned"
+
 #- Clean MANPATH
 cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
 
 export PATH LD_LIBRARY_PATH MANPATH
 
+[ "$(uname -s)" == "Darwin" ] \
+	&& export DYLD_LIBRARY_PATH
+
 
 # Source project setup files
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -211,8 +219,12 @@ _foamSource $WM_PROJECT_DIR/etc/config/aliases.sh
 
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/ensight.sh`
+if [ "$(uname -s)" == "Darwin" ]; then
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview-osx.sh`
+else
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/ensight.sh`
+fi
 
 
 # Clean environment paths again. Only remove duplicates
@@ -223,11 +235,16 @@ cleaned=`$foamClean "$PATH"` && PATH="$cleaned"
 #- Clean LD_LIBRARY_PATH
 cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
 
+#- Clean DYLD_LIBRARY_PATH on OS X
+cleaned=`$foamClean "$DYLD_LIBRARY_PATH"` && DYLD_LIBRARY_PATH="$cleaned"
+
 #- Clean MANPATH (trailing ':' to find system pages)
 cleaned=`$foamClean "$MANPATH"`: && MANPATH="$cleaned"
 
 export PATH LD_LIBRARY_PATH MANPATH
 
+[ "$(uname -s)" == "Darwin" ] && export DYLD_LIBRARY_PATH
+
 #- Clean LD_PRELOAD
 if [ -n "$LD_PRELOAD" ]
 then
diff --git a/etc/config/paraview-osx.sh b/etc/config/paraview-osx.sh
new file mode 100644
index 0000000..8a45da2
--- /dev/null
+++ b/etc/config/paraview-osx.sh
@@ -0,0 +1,15 @@
+if [ -d "/Applications/paraview.app" ]; then
+	[ "$FOAM_VERBOSE" -a "$PS1" ] && echo "Using /Applications/paraview.app"
+
+	paraview () {
+		"/Applications/paraview.app/Contents/MacOS/paraview" "$@"
+	}
+
+	export -f paraview
+else
+	echo
+	echo "Please download binary Paraview release from"
+	echo "http://paraview.org and install it in /Applications"
+	echo "folder."
+	echo
+fi
diff --git a/etc/config/scotch.sh b/etc/config/scotch.sh
index df1dce8..adaa1c0 100644
--- a/etc/config/scotch.sh
+++ b/etc/config/scotch.sh
@@ -33,7 +33,12 @@
 #     during the wmake process
 #------------------------------------------------------------------------------
 
-export SCOTCH_VERSION=scotch_5.1.11
-export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$SCOTCH_VERSION
+if [ "$(uname -s)" == "Darwin" ]; then
+	export SCOTCH_VERSION="scotch_$(basename $(readlink /usr/local/opt/scotch))"
+	export SCOTCH_ARCH_PATH=/usr/local/opt/scotch
+else
+	export SCOTCH_VERSION=scotch_5.1.11
+	export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$SCOTCH_VERSION
+fi
 
 # -----------------------------------------------------------------------------
diff --git a/etc/config/settings.sh b/etc/config/settings.sh
index 44e23c6..d05fd8e 100644
--- a/etc/config/settings.sh
+++ b/etc/config/settings.sh
@@ -46,6 +46,8 @@ _foamAddLib()
     while [ $# -ge 1 ]
     do
         export LD_LIBRARY_PATH=$1:$LD_LIBRARY_PATH
+		[ "$(uname -s)" == "Darwin" ] \
+			&& export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
         shift
     done
 }
@@ -141,6 +143,12 @@ SunOS)
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+	WM_ARCH=darwin64
+	WM_CC=clang
+	WM_CXX=clang++
+	;;
+
 *)    # an unsupported operating system
     cat <<USAGE
 
@@ -167,7 +175,8 @@ export FOAM_APPBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/bin
 export FOAM_LIBBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/lib
 
 # external (ThirdParty) libraries
-export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
+[ "$(uname -s )" != "Darwin" ] \
+	&& export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
 
 # shared site executables/libraries
 # similar naming convention as ~OpenFOAM expansion
@@ -203,7 +212,11 @@ export PATH=$WM_PROJECT_DIR/bin:$PATH
 
 _foamAddPath $FOAM_USER_APPBIN:$FOAM_SITE_APPBIN:$FOAM_APPBIN
 # Make sure to pick up dummy versions of external libraries last
-_foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+if [ "$(uname -s)" != "Darwin" ]; then
+	_foamAddLib $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+else
+	_foamAddLib $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_LIBBIN/dummy
+fi
 
 # Compiler settings
 # ~~~~~~~~~~~~~~~~~
@@ -356,11 +369,21 @@ fi
 # boost and CGAL
 # ~~~~~~~~~~~~~~
 
-boost_version=boost_1_45_0
-cgal_version=CGAL-3.8
+if [ "$(uname -s)" == "Darwin" ]; then
+	boost_version="boost-$(basename $(readlink /usr/local/opt/boost))"
+	cgal_version="CGAL-$(basename $(readlink /usr/local/opt/cgal))"
 
-export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
-export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+	export BOOST_ARCH_PATH=/usr/local/opt/boost
+	export CGAL_ARCH_PATH=/usr/local/opt/cgal
+	export GMP_ARCH_PATH=/usr/local/opt/gmp
+	export MPFR_ARCH_PATH=/usr/local/opt/mpfr
+else
+	boost_version=boost_1_45_0
+	cgal_version=CGAL-3.8
+
+	export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
+	export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+fi
 
 # enabled if CGAL is available
 if [ "$FOAM_VERBOSE" -a "$PS1" ]
@@ -572,7 +595,8 @@ esac
 # dummy MPI already added to LD_LIBRARY_PATH and has no external libraries
 if [ "$FOAM_MPI" != dummy ]
 then
-    _foamAddLib $FOAM_LIBBIN/$FOAM_MPI:$FOAM_EXT_LIBBIN/$FOAM_MPI
+    _foamAddLib $FOAM_LIBBIN/$FOAM_MPI
+	[ "$(uname -s)" != "Darwin" ] && _foamAddLib $FOAM_EXT_LIBBIN/$FOAM_MPI
 fi
 
 
diff --git a/src/Allwmake b/src/Allwmake
index aa17b41..007ffbb 100755
--- a/src/Allwmake
+++ b/src/Allwmake
@@ -9,11 +9,13 @@ wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 set -x
 
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
index 3429031..0bf21c9 100644
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,11 @@ Description
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <mach-o/dyld.h>
+#else
 #include <link.h>
+#endif
 
 #include <netinet/in.h>
 
@@ -1256,6 +1260,24 @@ bool Foam::dlSymFound(void* handle, const std::string& symbol)
 }
 
 
+#if defined(darwin64)
+Foam::fileNameList Foam::dlLoaded()
+{
+    DynamicList<fileName> libs;
+    for(uint32_t cnt = 0; cnt < _dyld_image_count(); ++cnt)
+    {
+        libs.append(_dyld_get_image_name(cnt));
+    }
+    
+    if (POSIX::debug)
+    {
+        std::cout
+            << "dlLoaded()"
+            << " : determined loaded libraries :" << libs.size() << std::endl;
+    }
+    return libs;
+}
+#else
 static int collectLibsCallback
 (
     struct dl_phdr_info *info,
@@ -1282,6 +1304,7 @@ Foam::fileNameList Foam::dlLoaded()
     }
     return libs;
 }
+#endif
 
 
 void Foam::osRandomSeed(const label seed)
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
index 8708ba9..65f046c 100644
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@ SourceFiles
 #define clockTime_H
 
 #include <sys/types.h>
+#if defined(darwin64)
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/fileStat.C b/src/OSspecific/POSIX/fileStat.C
index bf04835..8a3c796 100644
--- a/src/OSspecific/POSIX/fileStat.C
+++ b/src/OSspecific/POSIX/fileStat.C
@@ -29,7 +29,9 @@ License
 
 #include <signal.h>
 #include <unistd.h>
+#if ! defined(darwin64)
 #include <sys/sysmacros.h>
+#endif
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
index df31b35..8503c41 100644
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -2,7 +2,7 @@
   =========                 |
   \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
    \\    /   O peration     |
-    \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
+    \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
      \\/     M anipulation  |
 -------------------------------------------------------------------------------
 License
@@ -23,16 +23,22 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#if defined(darwin64)
+#include "ulong.H"
+#endif
 #include "error.H"
-#include "IStringStream.H"
 #include "OStringStream.H"
 #include "OSspecific.H"
 #include "IFstream.H"
-#include "readHexLabel.H"
 
+#include <inttypes.h>
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+// To parse lldb output
+#include <regex.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -43,90 +49,140 @@ namespace Foam
 
 string pOpen(const string &cmd, label line=0)
 {
-    const int MAX = 1000;
+    string res = "\n";
 
     FILE *cmdPipe = popen(cmd.c_str(), "r");
 
     if (cmdPipe)
     {
+        char *buf = NULL;
+
         // Read line number of lines
         for (label cnt = 0; cnt <= line; cnt++)
         {
-            char buffer[MAX];
-            char* s = fgets(buffer, MAX-1, cmdPipe);
+            size_t linecap = 0;
+            ssize_t linelen;
+            linelen = getline(&buf, &linecap, cmdPipe);
 
-            if (s == NULL)
+            if (linelen < 0)
             {
-                return "";
+                break;
             }
 
             if (cnt == line)
             {
-                string str(buffer);
-                return str.substr(0, str.size()-1);
+                res = string(buf);
+                break;
             }
         }
+
+        if (buf != NULL)
+        {
+            free(buf);
+        }
+
         pclose(cmdPipe);
     }
 
-    return "";
+    return res.substr(0, res.size() - 1);
 }
 
 
-// use popen to call addr2line (using bfd.h directly would have
-// meant relinking everything)
+inline word addressToWord(const uintptr_t addr)
+{
+    OStringStream nStream;
+    nStream << "0x" << hex << addr;
+    return nStream.str();
+}
+
 
 void printSourceFileAndLine
 (
     Ostream& os,
-    const HashTable<label, fileName>& addressMap,
     const fileName& filename,
-    const word& address
+    Dl_info *info,
+    void *addr
 )
 {
-    word myAddress = address;
+    uintptr_t address = uintptr_t(addr);
+    word myAddress = addressToWord(address);
 
+#if ! defined(darwin64)
     if (filename.ext() == "so")
     {
-        // Convert offset into .so into offset into executable.
-
-        void *addr;
-        sscanf(myAddress.c_str(), "%p",&addr);
-
-        Dl_info info;
-
-        dladdr(addr, &info);
-
-        unsigned long offset = ulong(info.dli_fbase);
-
-        IStringStream addressStr(address.substr(2));
-        label addressValue = readHexLabel(addressStr);
-        label relativeAddress = addressValue-offset;
-
-        // Reconstruct hex word from address
-        OStringStream nStream;
-        nStream << "0x" << hex << relativeAddress;
-        myAddress = nStream.str();
+        // Convert address into offset into dynamic library
+        uintptr_t offset = uintptr_t(info->dli_fbase);
+        intptr_t relativeAddress = address - offset;
+        myAddress = addressToWord(relativeAddress);
     }
+#endif
 
     if (filename[0] == '/')
     {
         string line = pOpen
         (
+#if ! defined(darwin64)
             "addr2line -f --demangle=auto --exe "
           + filename
           + " "
           + myAddress,
             1
+#else
+            "echo 'image lookup -a "
+          + myAddress
+          + " "
+          + filename
+          + "'"
+          + " | xcrun lldb "
+          + "-O 'target create --no-dependents -a x86_64 "
+          + filename
+          + "' -o '"
+          + "target modules load -f "
+          + filename
+          + " __TEXT "
+          + addressToWord(reinterpret_cast<const uintptr_t>(info->dli_fbase))
+          + "'"
+          + " | tail -1"
+#endif
         );
 
+#if defined(darwin64)
+        {
+            const char *buf = line.c_str();
+            regex_t re;
+            regmatch_t mt[3];
+            int st;
+
+            regcomp(&re, ".\\+at \\(.\\+\\):\\(\\d\\+\\)", REG_ENHANCED);
+            st = regexec(&re, buf, 3, mt, 0);
+
+            if (st == REG_NOMATCH)
+            {
+                line = "??:0";
+            }
+            else
+            {
+                size_t len = mt[1].rm_eo - mt[1].rm_so;
+                string fname(buf + mt[1].rm_so, len);
+                len = mt[2].rm_eo - mt[2].rm_so;
+                string lnum(buf + mt[2].rm_so, len);
+                line = fname + ":" + lnum;
+            }
+            regfree(&re);
+        }
+#endif
+
         if (line == "")
         {
             os  << " addr2line failed";
         }
         else if (line == "??:0")
         {
-            os  << " in " << filename;
+            line = filename;
+            string cwdLine(line.replaceAll(cwd() + '/', ""));
+            string homeLine(cwdLine.replaceAll(home(), '~'));
+
+            os  << " in " << homeLine;
         }
         else
         {
@@ -139,171 +195,96 @@ void printSourceFileAndLine
 }
 
 
-void getSymbolForRaw
-(
-    Ostream& os,
-    const string& raw,
-    const fileName& filename,
-    const word& address
-)
+fileName absolutePath(const char* fn)
 {
-    if (filename.size() && filename[0] == '/')
+    fileName fname(fn);
+
+    if (fname[0] != '/' && fname[0] != '~')
     {
-        string fcnt = pOpen
-        (
-            "addr2line -f --demangle=auto --exe "
-          + filename
-          + " "
-          + address
-        );
+        string tmp = pOpen("which " + fname);
 
-        if (fcnt != "")
+        if (tmp[0] == '/' || tmp[0] == '~')
         {
-            os  << fcnt.c_str();
-            return;
+            fname = tmp;
         }
     }
-    os  << "Uninterpreted: " << raw.c_str();
+
+    return fname;
 }
 
 
-void error::printStack(Ostream& os)
+string demangleSymbol(const char* sn)
 {
-    // Reads the starting addresses for the dynamically linked libraries
-    // from the /proc/pid/maps-file
-    // I'm afraid this works only for Linux 2.6-Kernels (may work on 2.4)
-    // Note2: the filenames in here will have softlinks resolved so will
-    // go wrong when having e.g. OpenFOAM installed under a softlink.
-
-    HashTable<label, fileName> addressMap;
+    string res;
+    int st;
+    char* cxx_sname = abi::__cxa_demangle
+    (
+        sn,
+        NULL,
+        0,
+        &st
+    );
+
+    if (st == 0 && cxx_sname)
     {
-        IFstream is("/proc/" + name(pid()) + "/maps");
-
-        while (is.good())
-        {
-            string line;
-            is.getLine(line);
+        res = string(cxx_sname);
+        free(cxx_sname);
+    }
+    else
+    {
+        res = string(sn);
+    }
 
-            string::size_type space = line.rfind(' ') + 1;
-            fileName libPath = line.substr(space, line.size()-space);
+    return res;
+}
 
-            if (libPath.size() && libPath[0] == '/')
-            {
-                string offsetString(line.substr(0, line.find('-')));
-                IStringStream offsetStr(offsetString);
-                addressMap.insert(libPath, readHexLabel(offsetStr));
-            }
-        }
-    }
 
-    // Get raw stack symbols
-    void *array[100];
-    size_t size = backtrace(array, 100);
-    char **strings = backtrace_symbols(array, size);
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
-    // See if they contain function between () e.g. "(__libc_start_main+0xd0)"
-    // and see if cplus_demangle can make sense of part before +
-    for (size_t i = 0; i < size; i++)
-    {
-        string msg(strings[i]);
-        fileName programFile;
-        word address;
+} // End namespace Foam
 
-        os  << '#' << label(i) << "  ";
-        //os  << "Raw   : " << msg << "\n\t";
-        {
-            string::size_type lPos = msg.find('[');
-            string::size_type rPos = msg.find(']');
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
-            if (lPos != string::npos && rPos != string::npos && lPos < rPos)
-            {
-                address = msg.substr(lPos+1, rPos-lPos-1);
-                msg = msg.substr(0, lPos);
-            }
+void Foam::error::printStack(Ostream& os)
+{
+    // Get raw stack symbols
+    const size_t CALLSTACK_SIZE = 128;
 
-            string::size_type bracketPos = msg.find('(');
-            string::size_type spacePos = msg.find(' ');
-            if (bracketPos != string::npos || spacePos != string::npos)
-            {
-                programFile = msg.substr(0, min(spacePos, bracketPos));
-
-                // not an absolute path
-                if (programFile[0] != '/')
-                {
-                    string tmp = pOpen("which " + programFile);
-                    if (tmp[0] == '/' || tmp[0] == '~')
-                    {
-                        programFile = tmp;
-                    }
-                }
-            }
-        }
+    void *callstack[CALLSTACK_SIZE];
+    size_t size = backtrace(callstack, CALLSTACK_SIZE);
 
-        string::size_type bracketPos = msg.find('(');
+    Dl_info *info = new Dl_info;
 
-        if (bracketPos != string::npos)
-        {
-            string::size_type start = bracketPos+1;
+    fileName fname = "???";
+    word address;
 
-            string::size_type plusPos = msg.find('+', start);
+    for(size_t i=0; i<size; i++)
+    {
+        int st = dladdr(callstack[i], info);
 
-            if (plusPos != string::npos)
-            {
-                string cName(msg.substr(start, plusPos-start));
-
-                int status;
-                char* cplusNamePtr = abi::__cxa_demangle
-                (
-                    cName.c_str(),
-                    NULL,                   // have it malloc itself
-                    0,
-                    &status
-                );
-
-                if (status == 0 && cplusNamePtr)
-                {
-                    os  << cplusNamePtr;
-                    free(cplusNamePtr);
-                }
-                else
-                {
-                    os  << cName.c_str();
-                }
-            }
-            else
-            {
-                string::size_type endBracketPos = msg.find(')', start);
-
-                if (endBracketPos != string::npos)
-                {
-                    string fullName(msg.substr(start, endBracketPos-start));
-
-                    os  << fullName.c_str() << nl;
-                }
-                else
-                {
-                    // Print raw message
-                    getSymbolForRaw(os, msg, programFile, address);
-                }
-            }
+        os << '#' << label(i) << "  ";
+        if (st != 0 && info->dli_fname != NULL && info->dli_fname[0] != '\0')
+        {
+            fname = absolutePath(info->dli_fname);
+
+            os <<
+            (
+                (info->dli_sname != NULL)
+              ? demangleSymbol(info->dli_sname)
+              : "?"
+            );
         }
         else
         {
-            // Print raw message
-            getSymbolForRaw(os, msg, programFile, address);
+            os << "?";
         }
 
-        printSourceFileAndLine(os, addressMap, programFile, address);
-
-        os  << nl;
+        printSourceFileAndLine(os, fname, info, callstack[i]);
+        os << nl;
     }
 
-    free(strings);
+    delete info;
 }
 
 
-// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
-
-} // End namespace Foam
-
 // ************************************************************************* //
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
index a275fd7..05a2995 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -2,7 +2,7 @@
   =========                 |
   \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
    \\    /   O peration     |
-    \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
+    \\  /    A nd           | Copyright (C) 2011-2013 OpenFOAM Foundation
      \\/     M anipulation  |
 -------------------------------------------------------------------------------
 License
@@ -44,12 +44,43 @@ License
 
 #endif
 
+#if defined(__APPLE__)
+#include <xmmintrin.h>
+#include <malloc/malloc.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#endif
+
 #include <stdint.h>
+#include <limits>
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
 
 struct sigaction Foam::sigFpe::oldAction_;
 
+#if defined(__APPLE__)
+void *(*Foam::sigFpe::oldMallocHook_)
+(
+    struct _malloc_zone_t *zone,
+    size_t size
+) = NULL;
+
+void *Foam::sigFpe::nanMallocHook_
+(
+    struct _malloc_zone_t *zone,
+    size_t size
+)
+{
+    void *result;
+
+    result = oldMallocHook_(zone, size);
+
+    UList<scalar> lst(reinterpret_cast<scalar*>(result), size/sizeof(scalar));
+    lst = std::numeric_limits<scalar>::signaling_NaN(); 
+
+    return result;
+}
+#endif
 
 #ifdef LINUX
 
@@ -94,7 +125,7 @@ void* Foam::sigFpe::nanMallocHook_(size_t size, const void *caller)
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(__APPLE__)
 
 void Foam::sigFpe::sigHandler(int)
 {
@@ -134,7 +165,7 @@ Foam::sigFpe::~sigFpe()
 {
     if (env("FOAM_SIGFPE"))
     {
-#       ifdef LINUX_GNUC
+#       if defined(LINUX_GNUC) || defined(__APPLE__)
 
         // Reset signal
         if (oldAction_.sa_handler && sigaction(SIGFPE, &oldAction_, NULL) < 0)
@@ -160,6 +191,20 @@ Foam::sigFpe::~sigFpe()
         }
 
 #       endif
+
+#       if defined(__APPLE__)
+        // Restoring old malloc handler
+        if (oldMallocHook_ != NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+
+            if (zone != NULL)
+            {
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE);
+                zone->malloc = oldMallocHook_;
+                mprotect(zone, getpagesize(), PROT_READ);
+            }
+        }
+#       endif
     }
 }
 
@@ -181,21 +226,31 @@ void Foam::sigFpe::set(const bool verbose)
     {
         bool supported = false;
 
-#       ifdef LINUX_GNUC
+#       if defined(LINUX_GNUC) || defined(__APPLE__)
         supported = true;
 
+#       if defined(LINUX_GNUC)
         feenableexcept
         (
             FE_DIVBYZERO
           | FE_INVALID
           | FE_OVERFLOW
         );
+#       endif
+#       if defined(__APPLE__)
+        _mm_setcsr(_MM_MASK_MASK &~
+                   (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO));
+#       endif
 
         struct sigaction newAction;
         newAction.sa_handler = sigHandler;
         newAction.sa_flags = SA_NODEFER;
         sigemptyset(&newAction.sa_mask);
+#       if defined(__APPLE__)
+        if (sigaction(SIGFPE, &newAction, NULL) < 0)
+#       else
         if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+#       endif
         {
             FatalErrorIn
             (
@@ -258,13 +313,35 @@ void Foam::sigFpe::set(const bool verbose)
 
 #       endif
 
+#       if defined(__APPLE__)
+        malloc_zone_t *zone = malloc_default_zone();
+
+        if (zone != NULL)
+        {
+            oldMallocHook_ = zone->malloc;
+            if
+            (
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE) == 0
+            )
+            {
+                zone->malloc = nanMallocHook_;
+                if
+                (
+                    mprotect(zone, getpagesize(), PROT_READ) == 0
+                )
+                {
+                    supported = true;
+                }
+            }
+        }
+#       endif        
 
         if (verbose)
         {
             if (supported)
             {
-            Info<< "SetNaN : Initialising allocated memory to NaN"
-                << " (FOAM_SETNAN)." << endl;
+                Info<< "SetNaN : Initialising allocated memory to NaN"
+                    << " (FOAM_SETNAN)." << endl;
             }
             else
             {
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
index b7fdec8..3ab778f 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -53,6 +53,10 @@ SourceFiles
 #    define LINUX_GNUC
 #endif
 
+#if defined(__APPLE__)
+#include <malloc/malloc.h>
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -79,10 +83,24 @@ class sigFpe
 
 #       endif
 
+#       if defined(__APPLE__)
+            static void *(*oldMallocHook_)
+            (
+                struct _malloc_zone_t *zone,
+                size_t size
+            );
+    
+            static void *nanMallocHook_
+            (
+                struct _malloc_zone_t *zone,
+                size_t size
+            );
+#       endif
+
 
     // Static data members
 
-#   ifdef LINUX_GNUC
+#   if defined(LINUX_GNUC) || defined(__APPLE__)
 
         //- Handler for caught signals
         static void sigHandler(int);
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
index 2f97577..026519c 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -334,7 +334,11 @@ Foam::fileName Foam::dynamicCode::codeRelPath() const
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
+#if defined(darwin64)
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
     return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+#endif
 }
 
 
diff --git a/src/OpenFOAM/fields/Fields/Field/Field.C b/src/OpenFOAM/fields/Fields/Field/Field.C
index 8545c2a..d2a02e9 100644
--- a/src/OpenFOAM/fields/Fields/Field/Field.C
+++ b/src/OpenFOAM/fields/Fields/Field/Field.C
@@ -402,7 +402,7 @@ void Foam::Field<Type>::map
     if
     (
         mapper.direct()
-     && &mapper.directAddressing()
+     && reinterpret_cast<const void*>(&mapper.directAddressing())
      && mapper.directAddressing().size()
     )
     {
@@ -437,7 +437,7 @@ void Foam::Field<Type>::autoMap
     (
         (
             mapper.direct()
-         && &mapper.directAddressing()
+         && reinterpret_cast<const void*>(&mapper.directAddressing())
          && mapper.directAddressing().size()
         )
      || (!mapper.direct() && mapper.addressing().size())
diff --git a/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C b/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
index 2733291..fef1e10 100644
--- a/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
+++ b/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
@@ -128,7 +128,7 @@ Ostream& operator<<(Ostream& os, const InfoProxy<cellShape>& ip)
 {
     const cellShape& cs = ip.t_;
 
-    if (!(&cs.model()))
+    if (!(reinterpret_cast<const void*>(&cs.model())))
     {
         os  << "    cellShape has no model!\n";
     }
diff --git a/src/OpenFOAM/meshes/polyMesh/polyMesh.C b/src/OpenFOAM/meshes/polyMesh/polyMesh.C
index cbc223c..7f06f60 100644
--- a/src/OpenFOAM/meshes/polyMesh/polyMesh.C
+++ b/src/OpenFOAM/meshes/polyMesh/polyMesh.C
@@ -676,23 +676,23 @@ void Foam::polyMesh::resetPrimitives
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (reinterpret_cast<const void*>(&points))
     {
         points_.transfer(points());
         bounds_ = boundBox(points_, validBoundary);
     }
 
-    if (&faces)
+    if (reinterpret_cast<const void*>(&faces))
     {
         faces_.transfer(faces());
     }
 
-    if (&owner)
+    if (reinterpret_cast<const void*>(&owner))
     {
         owner_.transfer(owner());
     }
 
-    if (&neighbour)
+    if (reinterpret_cast<const void*>(&neighbour))
     {
         neighbour_.transfer(neighbour());
     }
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
index 57373e0..69ce1a5 100644
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,15 @@ License
 
 #include <cmath>
 
+#if defined(darwin64)
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
diff --git a/src/conversion/ensight/part/ensightPartCells.C b/src/conversion/ensight/part/ensightPartCells.C
index 80f0cdc..d3c05ad 100644
--- a/src/conversion/ensight/part/ensightPartCells.C
+++ b/src/conversion/ensight/part/ensightPartCells.C
@@ -67,7 +67,7 @@ void Foam::ensightPartCells::classify
     size_ = mesh.nCells();
 
     bool limited = false;
-    if (&idList)
+    if (reinterpret_cast<const void*>(&idList))
     {
         limited = true;
         size_ = idList.size();
diff --git a/src/conversion/ensight/part/ensightPartIO.C b/src/conversion/ensight/part/ensightPartIO.C
index 7fe2e6e..30b778c 100644
--- a/src/conversion/ensight/part/ensightPartIO.C
+++ b/src/conversion/ensight/part/ensightPartIO.C
@@ -59,7 +59,7 @@ void Foam::ensightPart::writeFieldList
     const labelUList& idList
 ) const
 {
-    if (&idList)
+    if (reinterpret_cast<const void*>(&idList))
     {
         forAll(idList, i)
         {
diff --git a/src/edgeMesh/edgeMesh.C b/src/edgeMesh/edgeMesh.C
index 4e5d50e..828f91f 100644
--- a/src/edgeMesh/edgeMesh.C
+++ b/src/edgeMesh/edgeMesh.C
@@ -208,12 +208,12 @@ void Foam::edgeMesh::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (reinterpret_cast<const void*>(&pointLst))
     {
         points_.transfer(pointLst());
     }
 
-    if (&edgeLst)
+    if (reinterpret_cast<const void*>(&edgeLst))
     {
         edges_.transfer(edgeLst());
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/cylindricalInletVelocity/cylindricalInletVelocityFvPatchVectorField.C b/src/finiteVolume/fields/fvPatchFields/derived/cylindricalInletVelocity/cylindricalInletVelocityFvPatchVectorField.C
index 5f6b65a..39cdeda 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/cylindricalInletVelocity/cylindricalInletVelocityFvPatchVectorField.C
+++ b/src/finiteVolume/fields/fvPatchFields/derived/cylindricalInletVelocity/cylindricalInletVelocityFvPatchVectorField.C
@@ -132,7 +132,7 @@ void Foam::cylindricalInletVelocityFvPatchVectorField::updateCoeffs()
     vector hatAxis = axis_/mag(axis_);
 
     const vectorField r(patch().Cf() - centre_);
-    const vectorField d = r - (hatAxis & r)*hatAxis;
+    const vectorField d(r - (hatAxis & r)*hatAxis);
 
     tmp<vectorField> tangVel =
         (rpm_*constant::mathematical::pi/30.0)*(hatAxis) ^ d;
diff --git a/src/finiteVolume/finiteVolume/gradSchemes/fourthGrad/fourthGrad.C b/src/finiteVolume/finiteVolume/gradSchemes/fourthGrad/fourthGrad.C
index ead1ed0..77916be 100644
--- a/src/finiteVolume/finiteVolume/gradSchemes/fourthGrad/fourthGrad.C
+++ b/src/finiteVolume/finiteVolume/gradSchemes/fourthGrad/fourthGrad.C
@@ -126,7 +126,7 @@ Foam::fv::fourthGrad<Type>::calcGrad
             const labelUList& faceCells = p.faceCells();
 
             // Build the d-vectors
-            vectorField pd = p.delta();
+            vectorField pd(p.delta());
 
             const Field<GradType> neighbourSecondfGrad
             (
diff --git a/src/finiteVolume/finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresVectors.C b/src/finiteVolume/finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresVectors.C
index 86b4bc0..e2bb449 100644
--- a/src/finiteVolume/finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresVectors.C
+++ b/src/finiteVolume/finiteVolume/gradSchemes/leastSquaresGrad/leastSquaresVectors.C
@@ -132,7 +132,7 @@ void Foam::leastSquaresVectors::makeLeastSquaresVectors() const
         const labelUList& faceCells = p.patch().faceCells();
 
         // Build the d-vectors
-        vectorField pd = p.delta();
+        vectorField pd(p.delta());
 
         if (pw.coupled())
         {
@@ -185,7 +185,7 @@ void Foam::leastSquaresVectors::makeLeastSquaresVectors() const
         const labelUList& faceCells = p.faceCells();
 
         // Build the d-vectors
-        vectorField pd = p.delta();
+        vectorField pd(p.delta());
 
         if (pw.coupled())
         {
diff --git a/src/finiteVolume/interpolation/surfaceInterpolation/limitedSchemes/LimitedScheme/LimitedScheme.C b/src/finiteVolume/interpolation/surfaceInterpolation/limitedSchemes/LimitedScheme/LimitedScheme.C
index a7ea3a3..22a15ee 100644
--- a/src/finiteVolume/interpolation/surfaceInterpolation/limitedSchemes/LimitedScheme/LimitedScheme.C
+++ b/src/finiteVolume/interpolation/surfaceInterpolation/limitedSchemes/LimitedScheme/LimitedScheme.C
@@ -122,7 +122,7 @@ Foam::LimitedScheme<Type, Limiter, LimitFunc>::limiter
             );
 
             // Build the d-vectors
-            vectorField pd = CDweights.boundaryField()[patchi].patch().delta();
+            vectorField pd(CDweights.boundaryField()[patchi].patch().delta());
 
             forAll(pLim, face)
             {
diff --git a/src/finiteVolume/interpolation/surfaceInterpolation/schemes/linearUpwind/linearUpwind.C b/src/finiteVolume/interpolation/surfaceInterpolation/schemes/linearUpwind/linearUpwind.C
index b513c50..fb5938c 100644
--- a/src/finiteVolume/interpolation/surfaceInterpolation/schemes/linearUpwind/linearUpwind.C
+++ b/src/finiteVolume/interpolation/surfaceInterpolation/schemes/linearUpwind/linearUpwind.C
@@ -111,7 +111,7 @@ Foam::linearUpwind<Type>::correction
             );
 
             // Build the d-vectors
-            vectorField pd = Cf.boundaryField()[patchi].patch().delta();
+            vectorField pd(Cf.boundaryField()[patchi].patch().delta());
 
             forAll(pOwner, facei)
             {
diff --git a/src/finiteVolume/interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrectionVectors.C b/src/finiteVolume/interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrectionVectors.C
index 9feff9a..e180439 100644
--- a/src/finiteVolume/interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrectionVectors.C
+++ b/src/finiteVolume/interpolation/surfaceInterpolation/schemes/skewCorrected/skewCorrectionVectors.C
@@ -111,7 +111,7 @@ void Foam::skewCorrectionVectors::makeSkewCorrectionVectors() const
             const labelUList& faceCells = p.faceCells();
             const vectorField& patchFaceCentres = Cf.boundaryField()[patchI];
             const vectorField& patchSf = Sf.boundaryField()[patchI];
-            const vectorField patchD = p.delta();
+            const vectorField& patchD(p.delta());
 
             forAll(p, patchFaceI)
             {
diff --git a/src/finiteVolume/interpolation/surfaceInterpolation/surfaceInterpolation/surfaceInterpolation.C b/src/finiteVolume/interpolation/surfaceInterpolation/surfaceInterpolation/surfaceInterpolation.C
index 165b8c4..b2c643f 100644
--- a/src/finiteVolume/interpolation/surfaceInterpolation/surfaceInterpolation/surfaceInterpolation.C
+++ b/src/finiteVolume/interpolation/surfaceInterpolation/surfaceInterpolation/surfaceInterpolation.C
@@ -294,7 +294,7 @@ void Foam::surfaceInterpolation::makeNonOrthDeltaCoeffs() const
 
     forAll(nonOrthDeltaCoeffs.boundaryField(), patchi)
     {
-        vectorField delta = mesh_.boundary()[patchi].delta();
+        vectorField delta(mesh_.boundary()[patchi].delta());
 
         nonOrthDeltaCoeffs.boundaryField()[patchi] =
             1.0/max(mesh_.boundary()[patchi].nf() & delta, 0.05*mag(delta));
diff --git a/src/fvAgglomerationMethods/Allwmake b/src/fvAgglomerationMethods/Allwmake
index aa03907..21e64f2 100755
--- a/src/fvAgglomerationMethods/Allwmake
+++ b/src/fvAgglomerationMethods/Allwmake
@@ -3,11 +3,18 @@ cd ${0%/*} || exit 1    # run from this directory
 makeType=${1:-libso}
 set -x
 
-export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
+if [ "$(uname -s)" == "Darwin" ]; then
+	export ParMGridGen=/usr/local/opt/parmgridgen
 
-if [ -d "$ParMGridGen/MGridGen/Lib" ]
-then
-    wmake $makeType MGridGenGamgAgglomeration
+	[ -d "$ParMGridGen/lib" ] \
+		&& wmake $makeType MGridGenGamgAgglomeration
+else
+	export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
+
+	if [ -d "$ParMGridGen/MGridGen/Lib" ]
+	then
+		wmake $makeType MGridGenGamgAgglomeration
+	fi
 fi
 
 wmake $makeType pairPatchAgglomeration
diff --git a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
index a58b65f..44bbdcb 100644
--- a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
+++ b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
@@ -5,6 +5,15 @@ TYPE_REAL=
 TYPE_REAL=-DTYPE_REAL
 #endif
 
+#if defined(darwin64)
+EXE_INC = \
+    -I$(LIB_SRC)/finiteVolume/lnInclude \
+    -I$(ParMGridGen)/include \
+    $(TYPE_REAL)
+
+LIB_LIBS = \
+    -L$(ParMGridGen)/lib -lmgrid
+#else
 EXE_INC = \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(ParMGridGen)/MGridGen/Lib/lnInclude \
@@ -13,3 +22,4 @@ EXE_INC = \
 
 LIB_LIBS = \
     -L$(FOAM_EXT_LIBBIN) -lMGridGen
+#endif
diff --git a/src/parallel/decompose/Allwmake b/src/parallel/decompose/Allwmake
index 9d0acbd..28beac0 100755
--- a/src/parallel/decompose/Allwmake
+++ b/src/parallel/decompose/Allwmake
@@ -44,7 +44,11 @@ wmakeLnInclude decompositionMethods
 if [ -n "$SCOTCH_ARCH_PATH" ]
 then
     wmake $makeType scotchDecomp
-    [ -d "$FOAM_LIBBIN/$FOAM_MPI" ] && wmakeMpiLib ptscotchDecomp
+	if [ "$(uname -s)" == "Darwin" ]; then
+		wmakeMpiLib ptscotchDecomp
+	else
+		[ -d "$FOAM_LIBBIN/$FOAM_MPI" ] && wmakeMpiLib ptscotchDecomp
+	fi
 else
     echo
     echo "Skipping scotchDecomp (ptscotchDecomp)"
diff --git a/src/parallel/decompose/metisDecomp/Make/options b/src/parallel/decompose/metisDecomp/Make/options
index a6a0f14..28f3af6 100644
--- a/src/parallel/decompose/metisDecomp/Make/options
+++ b/src/parallel/decompose/metisDecomp/Make/options
@@ -1,3 +1,11 @@
+#if defined(darwin64)
+EXE_INC = \
+    -I/usr/local/opt/metis/include \
+    -I../decompositionMethods/lnInclude
+
+LIB_LIBS = \
+    -L/usr/local/opt/metis/lib -lmetis
+#else
 EXE_INC = \
     -I$(WM_THIRD_PARTY_DIR)/metis-5.0pre2/include \
     -I../../dummyThirdParty/metisDecomp  /* location of dummy metis.h */ \
@@ -5,3 +13,5 @@ EXE_INC = \
 
 LIB_LIBS = \
     -L$(FOAM_EXT_LIBBIN) -lmetis -lGKlib
+#endif
+
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
index 1e34631..57eb59b 100644
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -3,10 +3,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
-    -I$(SCOTCH_ARCH_PATH)/include/$(FOAM_MPI) \
-    -I/usr/include/scotch \
+    -I$(SCOTCH_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lptscotch -lptscotcherrexit -lscotch
+    
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
index 3bb11fb..23701f5 100644
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -7,10 +7,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lscotch -lscotcherrexit
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSourceTemplates.C b/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSourceTemplates.C
index 892593d..450ac18 100644
--- a/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSourceTemplates.C
+++ b/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSourceTemplates.C
@@ -153,14 +153,14 @@ Type Foam::fieldValues::faceSource::processSameTypeValues
         }
         case opAreaAverage:
         {
-            const scalarField magSf = mag(Sf);
+            const scalarField magSf(mag(Sf));
 
             result = sum(values*magSf)/sum(magSf);
             break;
         }
         case opAreaIntegrate:
         {
-            const scalarField magSf = mag(Sf);
+            const scalarField magSf(mag(Sf));
 
             result = sum(values*magSf);
             break;
@@ -177,7 +177,7 @@ Type Foam::fieldValues::faceSource::processSameTypeValues
         }
         case opCoV:
         {
-            const scalarField magSf = mag(Sf);
+            const scalarField magSf(mag(Sf));
 
             Type meanValue = sum(values*magSf)/sum(magSf);
 
diff --git a/src/postProcessing/functionObjects/field/regionSizeDistribution/regionSizeDistribution.C b/src/postProcessing/functionObjects/field/regionSizeDistribution/regionSizeDistribution.C
index 8dbf0ec..4aa1596 100644
--- a/src/postProcessing/functionObjects/field/regionSizeDistribution/regionSizeDistribution.C
+++ b/src/postProcessing/functionObjects/field/regionSizeDistribution/regionSizeDistribution.C
@@ -547,7 +547,7 @@ void Foam::regionSizeDistribution::write()
 
 
         // Sum all regions
-        const scalarField alphaVol = alpha.internalField()*mesh.V();
+        const scalarField alphaVol(alpha.internalField()*mesh.V());
         Map<scalar> allRegionVolume(regionSum(regions, mesh.V()));
         Map<scalar> allRegionAlphaVolume(regionSum(regions, alphaVol));
         Map<label> allRegionNumCells
diff --git a/src/regionModels/thermoBaffleModels/noThermo/noThermo.C b/src/regionModels/thermoBaffleModels/noThermo/noThermo.C
index 0d78e27..6aef1e3 100644
--- a/src/regionModels/thermoBaffleModels/noThermo/noThermo.C
+++ b/src/regionModels/thermoBaffleModels/noThermo/noThermo.C
@@ -131,7 +131,7 @@ const basicSolidThermo& noThermo::thermo() const
 {
     FatalErrorIn("const volScalarField& noThermo::T() const")
         << "T field not available for " << type() << abort(FatalError);
-    return reinterpret_cast<const basicSolidThermo&>(null);
+    return static_cast<const basicSolidThermo&>(null);
 }
 
 
diff --git a/src/sampling/cuttingPlane/cuttingPlane.C b/src/sampling/cuttingPlane/cuttingPlane.C
index 87f004a..66eac24 100644
--- a/src/sampling/cuttingPlane/cuttingPlane.C
+++ b/src/sampling/cuttingPlane/cuttingPlane.C
@@ -51,7 +51,7 @@ void Foam::cuttingPlane::calcCutCells
     const edgeList& edges = mesh.edges();
 
     label listSize = cellEdges.size();
-    if (&cellIdLabels)
+    if (reinterpret_cast<const void*>(&cellIdLabels))
     {
         listSize = cellIdLabels.size();
     }
@@ -64,7 +64,7 @@ void Foam::cuttingPlane::calcCutCells
     for (label listI = 0; listI < listSize; ++listI)
     {
         label cellI = listI;
-        if (&cellIdLabels)
+        if (reinterpret_cast<const void*>(&cellIdLabels))
         {
             cellI = cellIdLabels[listI];
         }
@@ -400,7 +400,7 @@ void Foam::cuttingPlane::remapFaces
 )
 {
     // recalculate the cells cut
-    if (&faceMap && faceMap.size())
+    if (reinterpret_cast<const void*>(&faceMap) && faceMap.size())
     {
         MeshStorage::remapFaces(faceMap);
 
diff --git a/src/sampling/sampledSurface/sampledPatch/sampledPatch.C b/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
index 7fff011..9e843a4 100644
--- a/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
+++ b/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
@@ -203,7 +203,7 @@ bool Foam::sampledPatch::update()
 void Foam::sampledPatch::remapFaces(const labelUList& faceMap)
 {
     // recalculate the cells cut
-    if (&faceMap && faceMap.size())
+    if (reinterpret_cast<const void*>(&faceMap) && faceMap.size())
     {
         MeshStorage::remapFaces(faceMap);
         patchFaceLabels_ = labelList
diff --git a/src/sampling/sampledSurface/sampledSurfaces/sampledSurfacesTemplates.C b/src/sampling/sampledSurface/sampledSurfaces/sampledSurfacesTemplates.C
index 4658da9..a3f7a08 100644
--- a/src/sampling/sampledSurface/sampledSurfaces/sampledSurfacesTemplates.C
+++ b/src/sampling/sampledSurface/sampledSurfaces/sampledSurfacesTemplates.C
@@ -158,7 +158,7 @@ void Foam::sampledSurfaces::sampleAndWrite
     forAll(*this, surfI)
     {
         const sampledSurface& s = operator[](surfI);
-        Field<Type> values = s.sample(sField);
+        Field<Type> values(s.sample(sField));
         writeSurface<Type>(values, surfI, fieldName, outputDir);
     }
 }
diff --git a/src/surfMesh/MeshedSurface/MeshedSurface.C b/src/surfMesh/MeshedSurface/MeshedSurface.C
index aedaec8..a40bd12 100644
--- a/src/surfMesh/MeshedSurface/MeshedSurface.C
+++ b/src/surfMesh/MeshedSurface/MeshedSurface.C
@@ -434,7 +434,7 @@ void Foam::MeshedSurface<Face>::remapFaces
 )
 {
     // recalculate the zone start/size
-    if (&faceMap && faceMap.size())
+    if (reinterpret_cast<const void*>(&faceMap) && faceMap.size())
     {
         surfZoneList& zones = storedZones();
 
@@ -527,17 +527,17 @@ void Foam::MeshedSurface<Face>::reset
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (reinterpret_cast<const void*>(&pointLst))
     {
         storedPoints().transfer(pointLst());
     }
 
-    if (&faceLst)
+    if (reinterpret_cast<const void*>(&faceLst))
     {
         storedFaces().transfer(faceLst());
     }
 
-    if (&zoneLst)
+    if (reinterpret_cast<const void*>(&zoneLst))
     {
         storedZones().transfer(zoneLst());
     }
@@ -556,17 +556,17 @@ void Foam::MeshedSurface<Face>::reset
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (reinterpret_cast<const void*>(&pointLst))
     {
         storedPoints().transfer(pointLst());
     }
 
-    if (&faceLst)
+    if (reinterpret_cast<const void*>(&faceLst))
     {
         storedFaces().transfer(faceLst());
     }
 
-    if (&zoneLst)
+    if (reinterpret_cast<const void*>(&zoneLst))
     {
         storedZones().transfer(zoneLst());
     }
@@ -861,7 +861,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     // nothing to do
     if (nTri <= faceLst.size())
     {
-        if (&faceMapOut)
+        if (reinterpret_cast<const void*>(&faceMapOut))
         {
             faceMapOut.clear();
         }
@@ -872,7 +872,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     List<label> faceMap;
 
     // reuse storage from optional faceMap
-    if (&faceMapOut)
+    if (reinterpret_cast<const void*>(&faceMapOut))
     {
         faceMap.transfer(faceMapOut);
     }
@@ -929,7 +929,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     remapFaces(faceMap);
 
     // optionally return the faceMap
-    if (&faceMapOut)
+    if (reinterpret_cast<const void*>(&faceMapOut))
     {
         faceMapOut.transfer(faceMap);
     }
diff --git a/src/surfMesh/MeshedSurface/MeshedSurface.H b/src/surfMesh/MeshedSurface/MeshedSurface.H
index 2170781..0042484 100644
--- a/src/surfMesh/MeshedSurface/MeshedSurface.H
+++ b/src/surfMesh/MeshedSurface/MeshedSurface.H
@@ -469,7 +469,7 @@ inline label MeshedSurface<triFace>::triangulate()
 template<>
 inline label MeshedSurface<triFace>::triangulate(List<label>& faceMap)
 {
-    if (&faceMap)
+    if (reinterpret_cast<const void*>(&faceMap))
     {
         faceMap.clear();
     }
diff --git a/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C b/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
index 1a97d5d..f541a23 100644
--- a/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
+++ b/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
@@ -88,12 +88,12 @@ void Foam::MeshedSurfaceIOAllocator::resetFaces
     const Xfer<surfZoneList>& zones
 )
 {
-    if (&faces)
+    if (reinterpret_cast<const void*>(&faces))
     {
         faces_.transfer(faces());
     }
 
-    if (&zones)
+    if (reinterpret_cast<const void*>(&zones))
     {
         zones_.transfer(zones());
     }
@@ -109,7 +109,7 @@ void Foam::MeshedSurfaceIOAllocator::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (reinterpret_cast<const void*>(&points))
     {
         points_.transfer(points());
     }
@@ -127,7 +127,7 @@ void Foam::MeshedSurfaceIOAllocator::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (reinterpret_cast<const void*>(&points))
     {
         points_.transfer(points());
     }
diff --git a/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C b/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
index 7f6de73..0fe802e 100644
--- a/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
+++ b/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
@@ -401,7 +401,7 @@ void Foam::UnsortedMeshedSurface<Face>::remapFaces
 )
 {
     // re-assign the zone Ids
-    if (&faceMap && faceMap.size())
+    if (reinterpret_cast<const void*>(&faceMap) && faceMap.size())
     {
         if (zoneToc_.empty())
         {
@@ -612,7 +612,7 @@ void Foam::UnsortedMeshedSurface<Face>::reset
         Xfer<surfZoneList>()
     );
 
-    if (&zoneIds)
+    if (reinterpret_cast<const void*>(&zoneIds))
     {
         zoneIds_.transfer(zoneIds());
     }
@@ -634,7 +634,7 @@ void Foam::UnsortedMeshedSurface<Face>::reset
         Xfer<surfZoneList>()
     );
 
-    if (&zoneIds)
+    if (reinterpret_cast<const void*>(&zoneIds))
     {
         zoneIds_.transfer(zoneIds());
     }
diff --git a/src/surfMesh/surfMesh/surfMesh.C b/src/surfMesh/surfMesh/surfMesh.C
index 3f5d71c..cee8888 100644
--- a/src/surfMesh/surfMesh/surfMesh.C
+++ b/src/surfMesh/surfMesh/surfMesh.C
@@ -205,7 +205,7 @@ Foam::surfMesh::surfMesh
     }
 
     // We can also send Xfer<..>::null just to initialize without allocating
-    if (&surf)
+    if (reinterpret_cast<const void*>(&surf))
     {
         transfer(surf());
     }
diff --git a/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C b/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
index 26fb1b1..375bcb9 100644
--- a/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
+++ b/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
@@ -397,6 +397,14 @@ void Foam::chemkinReader::addPressureDependentReaction
 
         default:
         {
+#if defined(darwin64)
+            FatalErrorIn("chemkinReader::addPressureDependentReaction")
+                << "Fall-off function type "
+                << fallOffFunctionNames[fofType]
+                << " on line " << lineNo_-1
+                << " not implemented"
+                << exit(FatalError);
+#else
             if (fofType < 4)
             {
                 FatalErrorIn("chemkinReader::addPressureDependentReaction")
@@ -413,6 +421,7 @@ void Foam::chemkinReader::addPressureDependentReaction
                     << " on line " << lineNo_-1
                     << exit(FatalError);
             }
+#endif
         }
     }
 }
diff --git a/src/triSurface/triSurface/interfaces/AC3D/readAC.C b/src/triSurface/triSurface/interfaces/AC3D/readAC.C
index 27fbcf9..9e854a0 100644
--- a/src/triSurface/triSurface/interfaces/AC3D/readAC.C
+++ b/src/triSurface/triSurface/interfaces/AC3D/readAC.C
@@ -174,7 +174,11 @@ bool triSurface::readAC(const fileName& ACfileName)
 
     for (label patchI = 0; patchI < nPatches; patchI++)
     {
-        readUpto("OBJECT", ACfile, args, " while reading patch " + patchI);
+        OStringStream nStream;
+        nStream << patchI;
+
+        readUpto("OBJECT", ACfile, args, " while reading patch "
+                 + nStream.str());
 
         // Object global values
         string patchName = string("patch") + name(patchI);
diff --git a/src/turbulenceModels/compressible/RAS/SpalartAllmaras/SpalartAllmaras.H b/src/turbulenceModels/compressible/RAS/SpalartAllmaras/SpalartAllmaras.H
index f3b83a1..b802092 100644
--- a/src/turbulenceModels/compressible/RAS/SpalartAllmaras/SpalartAllmaras.H
+++ b/src/turbulenceModels/compressible/RAS/SpalartAllmaras/SpalartAllmaras.H
@@ -65,7 +65,7 @@ SourceFiles
 \*---------------------------------------------------------------------------*/
 
 #ifndef compressibleSpalartAllmaras_H
-#define combressibleSpalartAllmaras_H
+#define compressibleSpalartAllmaras_H
 
 #include "RASModel.H"
 #include "wallDist.H"
diff --git a/wmake/Makefile b/wmake/Makefile
index 96e1885..7de8c1a 100644
--- a/wmake/Makefile
+++ b/wmake/Makefile
@@ -91,7 +91,11 @@ EXE_DEP         = $(OBJECTS_DIR)/options
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(shell uname -s),Darwin)
+SO              = dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
diff --git a/wmake/rules/darwin64Clang/c b/wmake/rules/darwin64Clang/c
new file mode 100644
index 0000000..9a3e872
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c
@@ -0,0 +1,16 @@
+.SUFFIXES: .c .h
+
+cWARN        = -Wall
+
+cc          = xcrun clang -m64
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $$SOURCE -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -Xlinker -dylib -Xlinker -undefined -Xlinker suppress
+LINKEXE     = $(cc) -Xlinker -execute
diff --git a/wmake/rules/darwin64Clang/c++ b/wmake/rules/darwin64Clang/c++
new file mode 100644
index 0000000..a4c9fc4
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++
@@ -0,0 +1,31 @@
+.SUFFIXES: .C .cxx .cc .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wno-overloaded-virtual \
+              -Wno-c++11-extensions -Wno-unused-variable
+
+CC          = xcrun clang++ -m64
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $$SOURCE -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -Xlinker -dylib \
+				-Xlinker -undefined \
+				-Xlinker dynamic_lookup \
+				-Xlinker -arch \
+				-Xlinker x86_64
+
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker -execute \
+				-Xlinker -undefined \
+				-Xlinker dynamic_lookup \
+				-Xlinker -arch \
+				-Xlinker x86_64
diff --git a/wmake/rules/darwin64Clang/c++Debug b/wmake/rules/darwin64Clang/c++Debug
new file mode 100644
index 0000000..1c63335
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -g -DFULLDEBUG
+c++OPT      = -O0
diff --git a/wmake/rules/darwin64Clang/c++Opt b/wmake/rules/darwin64Clang/c++Opt
new file mode 100644
index 0000000..3363be8
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Opt
@@ -0,0 +1,3 @@
+#c++DBUG     = -O0 -DFULLDEBUG -g
+c++DBUG     =
+c++OPT      = -O3
diff --git a/wmake/rules/darwin64Clang/c++Prof b/wmake/rules/darwin64Clang/c++Prof
new file mode 100644
index 0000000..3bda4da
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/darwin64Clang/cDebug b/wmake/rules/darwin64Clang/cDebug
new file mode 100644
index 0000000..7b7adf1
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
diff --git a/wmake/rules/darwin64Clang/cOpt b/wmake/rules/darwin64Clang/cOpt
new file mode 100644
index 0000000..1731870
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cOpt
@@ -0,0 +1,2 @@
+cDBUG       =
+cOPT        = -O3
diff --git a/wmake/rules/darwin64Clang/cProf b/wmake/rules/darwin64Clang/cProf
new file mode 100644
index 0000000..ca3ac9b
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/darwin64Clang/general b/wmake/rules/darwin64Clang/general
new file mode 100644
index 0000000..243cb7d
--- /dev/null
+++ b/wmake/rules/darwin64Clang/general
@@ -0,0 +1,8 @@
+CPP        = cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
