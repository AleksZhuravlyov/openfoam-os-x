 .gitignore                                         |   1 +
 Allwmake                                           |  27 +-
 applications/Allwmake                              |  12 +-
 .../mesh/generation/snappyHexMesh/Make/options     |   1 -
 .../mesh/manipulation/renumberMesh/Allwmake        |  11 +-
 .../mesh/manipulation/renumberMesh/Make/options    |   1 -
 .../miscellaneous/foamDebugSwitches/Make/options   |   2 -
 .../dataConversion/foamToEnsight/Make/options      |   1 -
 .../surface/surfaceFeatureExtract/Allwmake         |  30 +-
 .../surfaceFeatureExtract/surfaceFeatureExtract.C  |   3 +-
 bin/paraFoam                                       |  10 +-
 bin/tools/replaceAllShellSun                       |   2 +-
 etc/bashrc                                         | 111 ++++---
 etc/config/paraview-osx.sh                         |  15 +
 etc/config/scotch.sh                               |   9 +-
 etc/config/settings.sh                             |  39 ++-
 src/Allwmake                                       |  12 +-
 src/OSspecific/POSIX/POSIX.C                       |  23 ++
 src/OSspecific/POSIX/clockTime/clockTime.H         |   3 +
 src/OSspecific/POSIX/fileStat.C                    |   2 +
 src/OSspecific/POSIX/printStack.C                  | 332 ++++++++++-----------
 src/OSspecific/POSIX/signals/sigFpe.C              |  87 +++++-
 src/OSspecific/POSIX/signals/sigFpe.H              |  20 +-
 .../Lists/CompactListList/CompactListListI.H       |   2 +-
 .../containers/Lists/FixedList/FixedListI.H        |   2 +-
 src/OpenFOAM/containers/Lists/List/ListI.H         |   2 +-
 src/OpenFOAM/containers/Lists/SubList/SubListI.H   |   2 +-
 src/OpenFOAM/containers/Lists/UList/UList.H        |   1 +
 src/OpenFOAM/containers/Lists/UList/UListI.H       |   2 +-
 src/OpenFOAM/db/IOstreams/Pstreams/gatherScatter.C |   3 +
 .../functionEntries/codeStream/codeStream.C        |   3 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.C    |   4 +
 .../db/objectRegistry/objectRegistryTemplates.C    |   2 +-
 .../DimensionedField/DimensionedFieldI.H           |   2 +-
 .../DimensionedField/SubDimensionedFieldI.H        |   2 +-
 src/OpenFOAM/fields/Fields/Field/Field.C           |   4 +-
 src/OpenFOAM/fields/Fields/Field/Field.H           |   2 +-
 src/OpenFOAM/fields/Fields/Field/SubFieldI.H       |   2 +-
 .../GeometricField/GeometricFieldI.H               |   2 +-
 src/OpenFOAM/global/foamDoc.H                      |   2 +-
 src/OpenFOAM/global/global.Cver                    |   2 +
 src/OpenFOAM/matrices/Matrix/MatrixI.H             |   2 +-
 src/OpenFOAM/memory/Xfer/XferI.H                   |   4 +-
 .../meshes/meshShapes/cellShape/cellShapeIO.C      |   2 +-
 src/OpenFOAM/meshes/polyMesh/polyMesh.C            |   8 +-
 src/OpenFOAM/primitives/Scalar/doubleFloat.H       |   9 +
 src/OpenFOAM/primitives/nullObject/nullObject.C    |  34 +++
 src/OpenFOAM/primitives/nullObject/nullObject.H    | 110 +++++++
 src/OpenFOAM/primitives/nullObject/nullObjectI.H   |  65 ++++
 src/conversion/ensight/part/ensightPartCells.C     |   2 +-
 src/conversion/ensight/part/ensightPartIO.C        |   2 +-
 src/dummyThirdParty/metisDecomp/metis.h            |  18 +-
 src/edgeMesh/edgeMesh.C                            |   4 +-
 .../DarcyForchheimer/DarcyForchheimer.C            |   4 +-
 .../DarcyForchheimer/DarcyForchheimer.H            |   2 +-
 .../general/porosityModel/fixedCoeff/fixedCoeff.C  |   4 +-
 .../general/porosityModel/fixedCoeff/fixedCoeff.H  |   2 +-
 .../porosityModel/porosityModel/porosityModel.C    |   2 +-
 .../porosityModel/porosityModelList.C              |   2 +-
 .../general/porosityModel/powerLaw/powerLaw.C      |   4 +-
 .../general/porosityModel/powerLaw/powerLaw.H      |   2 +-
 .../fixedGradient/fixedGradientFvPatchField.H      |   2 +-
 .../flowRateInletVelocityFvPatchVectorField.H      |   2 +-
 ...inletOutletTotalTemperatureFvPatchScalarField.H |   2 +-
 .../mappedFixedValueFvPatchField.H                 |   4 +-
 ...essureDirectedInletVelocityFvPatchVectorField.H |   2 +-
 ...PressureInletOutletVelocityFvPatchVectorField.H |   4 +-
 .../rotatingTotalPressureFvPatchScalarField.H      |   4 +-
 .../rotatingWallVelocityFvPatchVectorField.H       |   4 +-
 .../supersonicFreestreamFvPatchVectorField.H       |   2 +-
 .../fvPatchFields/fvPatchField/fvPatchField.C      |   6 +-
 src/fvAgglomerationMethods/Allwmake                |  17 +-
 .../MGridGenGamgAgglomeration/Make/options         |  10 +
 src/fvOptions/Make/options                         |   1 -
 .../COxidationHurtMitchell.H                       |   2 +-
 .../distributionModels/uniform/uniform.C           |   3 +-
 .../distributionModels/uniform/uniform.H           |   2 +-
 .../InjectionModel/InjectionModelList.H            |   2 +-
 .../BreakupModel/PilchErdman/PilchErdman.H         |   2 +-
 .../momentOfInertia/volumeIntegration/volInt.c     |  28 +-
 src/parallel/decompose/Allwmake                    |   8 +-
 src/parallel/decompose/ptscotchDecomp/Make/options |  10 +-
 src/parallel/decompose/scotchDecomp/Make/options   |   8 +-
 .../field/fieldValues/faceSource/faceSource.H      |   4 +-
 .../pyrolysisModel/pyrolysisModelCollection.C      |   2 +-
 .../pyrolysisModel/pyrolysisModelNew.C             |   2 +-
 .../thermalBaffleModels/noThermo/noThermo.C        |   2 +-
 src/renumber/SloanRenumber/Make/options            |   9 +-
 src/sampling/cuttingPlane/cuttingPlane.C           |   6 +-
 .../sampledSurface/sampledPatch/sampledPatch.C     |   2 +-
 .../writers/nastran/nastranSurfaceWriter.C         |   2 +-
 src/surfMesh/MeshedSurface/MeshedSurface.C         |  20 +-
 src/surfMesh/MeshedSurface/MeshedSurface.H         |   2 +-
 .../MeshedSurfaceIOAllocator.C                     |   8 +-
 .../UnsortedMeshedSurface/UnsortedMeshedSurface.C  |   6 +-
 src/surfMesh/surfMesh/surfMesh.C                   |   2 +-
 .../chemistryReaders/chemkinReader/chemkinReader.C |   9 +
 .../specie/reaction/Reactions/Reaction/Reaction.C  |   6 +-
 .../compressible/LES/DESModel/DESModelDoc.H        |   2 +-
 .../compressible/LES/GenEddyVisc/GenEddyVisc.H     |   2 +-
 .../compressible/LES/GenSGSStress/GenSGSStress.H   |   4 +-
 .../compressible/LES/LESModel/LESModelDoc.H        |   2 +-
 .../compressible/RAS/RASModel/RASModelDoc.H        |   2 +-
 ...gLengthDissipationRateInletFvPatchScalarField.H |   2 +-
 ...tMixingLengthFrequencyInletFvPatchScalarField.H |   2 +-
 .../turbulenceModel/turbulenceModelDoc.H           |   2 +-
 .../incompressible/LES/DESModel/DESModelDoc.H      |   2 +-
 .../incompressible/LES/GenEddyVisc/GenEddyVisc.H   |   2 +-
 .../incompressible/LES/GenSGSStress/GenSGSStress.H |   6 +-
 .../incompressible/LES/LESModel/LESModelDoc.H      |   2 +-
 .../incompressible/RAS/RASModel/RASModelDoc.H      |   2 +-
 ...tmBoundaryLayerInletEpsilonFvPatchScalarField.H |   2 +-
 ...urbulentHeatFluxTemperatureFvPatchScalarField.H |   2 +-
 ...gLengthDissipationRateInletFvPatchScalarField.H |   2 +-
 ...tMixingLengthFrequencyInletFvPatchScalarField.H |   2 +-
 .../turbulenceModel/turbulenceModelDoc.H           |   2 +-
 wmake/Makefile                                     |   4 +
 wmake/rules/darwin64Clang/c                        |  16 +
 wmake/rules/darwin64Clang/c++                      |  29 ++
 wmake/rules/darwin64Clang/c++Debug                 |   2 +
 wmake/rules/darwin64Clang/c++Opt                   |   3 +
 wmake/rules/darwin64Clang/c++Prof                  |   2 +
 wmake/rules/darwin64Clang/cDebug                   |   2 +
 wmake/rules/darwin64Clang/cOpt                     |   2 +
 wmake/rules/darwin64Clang/cProf                    |   2 +
 wmake/rules/darwin64Clang/general                  |   8 +
 126 files changed, 964 insertions(+), 432 deletions(-)

diff --git a/.gitignore b/.gitignore
index 7c8bce0..039c370 100644
--- a/.gitignore
+++ b/.gitignore
@@ -42,6 +42,7 @@ linuxming*/
 SiCortex*Gcc*/
 solaris*Gcc*/
 SunOS*Gcc*/
+darwin*Clang*/
 platforms/
 
 # reinstate wmake/rules that might look like build folders
diff --git a/Allwmake b/Allwmake
index 16edfd1..0f3e419 100755
--- a/Allwmake
+++ b/Allwmake
@@ -2,17 +2,19 @@
 cd ${0%/*} || exit 1    # run from this directory
 
 wmakeCheckPwd "$WM_PROJECT_DIR" || {
-    echo "Error: Current directory is not \$WM_PROJECT_DIR"
-    echo "    The environment variables are inconsistent with the installation."
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
+	echo "Error: Current directory is not \$WM_PROJECT_DIR"
+	echo "    The environment variables are inconsistent with the installation."
+	echo "    Check the OpenFOAM entries in your dot-files and source them."
+	exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 # wmake is required for subsequent targets
 ( cd wmake/src && make )
@@ -20,9 +22,10 @@ wmakeCheckPwd "$WM_PROJECT_DIR" || {
 # build ThirdParty sources
 if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
-    $WM_THIRD_PARTY_DIR/Allwmake
+	$WM_THIRD_PARTY_DIR/Allwmake
 else
-    echo "no ThirdParty sources found - skipping"
+	[ "$(uname -s)" != "Darwin" ] \
+		&& echo "no ThirdParty sources found - skipping"
 fi
 
 # build OpenFOAM libraries and applications
@@ -31,7 +34,7 @@ applications/Allwmake
 
 if [ "$1" = doc ]
 then
-    doc/Allwmake
+	doc/Allwmake
 fi
 
 # ----------------------------------------------------------------- end-of-file
diff --git a/applications/Allwmake b/applications/Allwmake
index 00bc326..6d45c88 100755
--- a/applications/Allwmake
+++ b/applications/Allwmake
@@ -8,11 +8,13 @@ wmakeCheckPwd "$WM_PROJECT_DIR/applications" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 set -x
 
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
index af056ec..77451ed 100644
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
index 2509145..7af6387 100755
--- a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
@@ -4,15 +4,18 @@ cd ${0%/*} || exit 1    # run from this directory
 export COMPILE_FLAGS=''
 export LINK_FLAGS=''
 
-if [ -f "${FOAM_LIBBIN}/libSloanRenumber.so" ]
+DYLIB_EXT="so"
+[ "$(uname -s)" == "Darwin" ] && DYLIB_EXT="dylib"
+
+if [ -f "${FOAM_LIBBIN}/libSloanRenumber.$DYLIB_EXT" ]
 then
-    echo "Found libSloanRenumber.so  --  enabling Sloan renumbering support."
+	echo "Found libSloanRenumber.$DYLIB_EXT  --  enabling Sloan renumbering support."
     export LINK_FLAGS="${LINK_FLAGS} -lSloanRenumber"
 fi
 
-if [ "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.so" ]
+if [ "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.$DYLIB_EXT" ]
 then
-    echo "Found libzoltanRenumber.so  --  enabling zoltan renumbering support."
+    echo "Found libzoltanRenumber.$DYLIB_EXT  --  enabling zoltan renumbering support."
     export COMPILE_FLAGS="-DFOAM_USE_ZOLTAN"
     export LINK_FLAGS="${LINK_FLAGS} -lzoltanRenumber -L${ZOLTAN_ARCH_PATH}/lib -lzoltan"
 fi
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Make/options b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
index 49a1c3d..882d1e4 100644
--- a/applications/utilities/mesh/manipulation/renumberMesh/Make/options
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     ${COMPILE_FLAGS} \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
diff --git a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
index 43f0c24..262b4c3 100644
--- a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
+++ b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
@@ -42,10 +42,8 @@ EXE_LIBS = \
     -lmeshTools \
     -lmolecularMeasurements \
     -lmolecule \
-/*    -lmultiphaseInterFoam  */ \
     -lODE \
     -lOpenFOAM \
-/*    -lphaseModel  */ \
     -lpotential \
     -lradiationModels \
     -lrandomProcesses \
diff --git a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
index 7799242..b4382c4 100644
--- a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
+++ b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/sampling/lnInclude \
diff --git a/applications/utilities/surface/surfaceFeatureExtract/Allwmake b/applications/utilities/surface/surfaceFeatureExtract/Allwmake
index 2b9a927..d39ea0e 100755
--- a/applications/utilities/surface/surfaceFeatureExtract/Allwmake
+++ b/applications/utilities/surface/surfaceFeatureExtract/Allwmake
@@ -9,15 +9,27 @@ then
     echo "Compiling surfaceFeatureExtract with CGAL curvature support"
     echo
 
-    wmake "ENABLE_CURVATURE=-DENABLE_CURVATURE \
-           EXE_FROUNDING_MATH=-frounding-math \
-           USE_F2C=-DCGAL_USE_F2C \
-           CGAL_LIBDIR=-L$CGAL_ARCH_PATH/lib \
-           LAPACK_LIB=-llapack \
-           BLAS_LIB=-lblas \
-           CGAL_LIB=-lCGAL \
-           CGAL_BOOST_LIB=-lboost_thread \
-           CGAL_MPFR_LIB=-lmpfr"
+	if [ "$(uname -s)" == "Darwin" ]; then
+		wmake "ENABLE_CURVATURE=-DENABLE_CURVATURE \
+			EXE_FROUNDING_MATH= \
+			USE_F2C=-DCGAL_USE_F2C \
+			CGAL_LIBDIR=-L$CGAL_ARCH_PATH/lib \
+			LAPACK_LIB=-llapack \
+			BLAS_LIB=-lblas \
+			CGAL_LIB=-lCGAL \
+			CGAL_BOOST_LIB=-lboost_thread \
+			CGAL_MPFR_LIB=-lmpfr"
+	else
+		wmake "ENABLE_CURVATURE=-DENABLE_CURVATURE \
+			EXE_FROUNDING_MATH=-frounding-math \
+			USE_F2C=-DCGAL_USE_F2C \
+			CGAL_LIBDIR=-L$CGAL_ARCH_PATH/lib \
+			LAPACK_LIB=-llapack \
+			BLAS_LIB=-lblas \
+			CGAL_LIB=-lCGAL \
+			CGAL_BOOST_LIB=-lboost_thread \
+			CGAL_MPFR_LIB=-lmpfr"
+	fi
 else
     echo
     echo "Compiling surfaceFeatureExtract without CGAL curvature support"
diff --git a/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C b/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
index 87350c4..5fc99be 100644
--- a/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
+++ b/applications/utilities/surface/surfaceFeatureExtract/surfaceFeatureExtract.C
@@ -82,7 +82,8 @@ scalarField calcCurvature(const triSurface& surf)
         Vertex_PM_type;
     typedef T_PolyhedralSurf_rings<Polyhedron, Vertex_PM_type > Poly_rings;
 
-    typedef CGAL::Monge_via_jet_fitting<Kernel>         Monge_via_jet_fitting;
+#   define CGAL_EIGEN3_ENABLED
+    typedef CGAL::Monge_via_jet_fitting<Kernel> Monge_via_jet_fitting;
     typedef Monge_via_jet_fitting::Monge_form           Monge_form;
 
     std::vector<Point_3> in_points;  //container for data points
diff --git a/bin/paraFoam b/bin/paraFoam
index d288e3f..6e46cdd 100755
--- a/bin/paraFoam
+++ b/bin/paraFoam
@@ -68,9 +68,15 @@ unset regionName optTouch
 export LC_ALL=C
 
 # reader extension
-extension=OpenFOAM
+if [ "$(uname -s)" == "Darwin" ]; then
+	extension=foam
 
-requirePV=1
+	requirePV=0
+else
+	extension=OpenFOAM
+
+	requirePV=1
+fi
 
 # parse options
 while [ "$#" -gt 0 ]
diff --git a/bin/tools/replaceAllShellSun b/bin/tools/replaceAllShellSun
index d5a0d8d..b57271e 100755
--- a/bin/tools/replaceAllShellSun
+++ b/bin/tools/replaceAllShellSun
@@ -1,6 +1,6 @@
 #!/usr/xpg4/bin/sh
 
-# Replace all shell script headers with 
+# Replace all shell script headers with
 if [ $# -ne 1 -o ! -d "$1" ]
 then
     echo "Usage: ${0##*/} <dir>"
diff --git a/etc/bashrc b/etc/bashrc
index 0f0ff50..29ee710 100644
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -104,7 +104,7 @@ export FOAM_SIGFPE=
 foamOldDirs="$FOAM_INST_DIR $WM_PROJECT_SITE $HOME/$WM_PROJECT/$USER"
 if [ "$WM_PROJECT_INST_DIR" != "$FOAM_INST_DIR" ]
 then
-    foamOldDirs="$WM_PROJECT_INST_DIR $foamOldDirs"
+	foamOldDirs="$WM_PROJECT_INST_DIR $foamOldDirs"
 fi
 
 
@@ -115,16 +115,17 @@ export WM_PROJECT_DIR=$WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION
 
 # Location of third-party software
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
+[ "$(uname -s)" != "Darwin" ] \
+	&& export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
 
 # Location of site-specific templates etc
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 # unset is equivalent to $WM_PROJECT_INST_DIR/site
 if [ -d "$WM_PROJECT_SITE" ]
 then
-    export WM_PROJECT_SITE
+	export WM_PROJECT_SITE
 else
-    unset WM_PROJECT_SITE
+	unset WM_PROJECT_SITE
 fi
 
 # Location of user files
@@ -135,46 +136,46 @@ export WM_PROJECT_USER_DIR=$HOME/$WM_PROJECT/$USER-$WM_PROJECT_VERSION
 # Source files, possibly with some verbosity
 _foamSource()
 {
-    while [ $# -ge 1 ]
-    do
-        [ "$FOAM_VERBOSE" -a "$PS1" ] && echo "Sourcing: $1" 1>&2
-        . $1
-       shift
-    done
+	while [ $# -ge 1 ]
+	do
+		[ "$FOAM_VERBOSE" -a "$PS1" ] && echo "Sourcing: $1" 1>&2
+		. $1
+		shift
+	done
 }
 
 # Evaluate command-line parameters
 _foamEval()
 {
-    while [ $# -gt 0 ]
-    do
-        case "$1" in
-        -*)
-            # stray option (not meant for us here) -> get out
-            break
-            ;;
-        *=)
-            # name=       -> unset name
-            [ "$FOAM_VERBOSE" -a "$PS1" ] && echo "unset ${1%=}" 1>&2
-            eval "unset ${1%=}"
-            ;;
-        *=*)
-            # name=value  -> export name=value
-            [ "$FOAM_VERBOSE" -a "$PS1" ] && echo "export $1" 1>&2
-            eval "export $1"
-            ;;
-        *)
-            # filename: source it
-            if [ -f "$1" ]
-            then
-                _foamSource "$1"
-            else
-                _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile -silent "$1"`
-            fi
-            ;;
-        esac
-        shift
-    done
+	while [ $# -gt 0 ]
+	do
+		case "$1" in
+		-*)
+			# stray option (not meant for us here) -> get out
+			break
+			;;
+		*=)
+			# name=       -> unset name
+			[ "$FOAM_VERBOSE" -a "$PS1" ] && echo "unset ${1%=}" 1>&2
+			eval "unset ${1%=}"
+			;;
+		*=*)
+			# name=value  -> export name=value
+			[ "$FOAM_VERBOSE" -a "$PS1" ] && echo "export $1" 1>&2
+			eval "export $1"
+			;;
+		*)
+			# filename: source it
+			if [ -f "$1" ]
+			then
+				_foamSource "$1"
+			else
+				_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile -silent "$1"`
+			fi
+			;;
+		esac
+		shift
+	done
 }
 
 
@@ -195,13 +196,22 @@ cleaned=`$foamClean "$PATH" "$foamOldDirs"` && PATH="$cleaned"
 
 #- Clean LD_LIBRARY_PATH
 cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
-    && LD_LIBRARY_PATH="$cleaned"
+	&& LD_LIBRARY_PATH="$cleaned"
+
+#- Clean DYLD_LIBRARY_PATH on OS X
+if [ "$(uname -s)" == "Darwin" ]; then
+	cleaned=`$foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs"` \
+		&& DYLD_LIBRARY_PATH="$cleaned"
+
+fi
 
 #- Clean MANPATH
 cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
 
 export PATH LD_LIBRARY_PATH MANPATH
 
+[ "$(uname -s)" == "Darwin" ] && export DYLD_LIBRARY_PATH
+
 
 # Source project setup files
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -211,9 +221,13 @@ _foamSource $WM_PROJECT_DIR/etc/config/aliases.sh
 
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/ensight.sh`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/gperftools.sh`
+if [ "$(uname -s)" == "Darwin" ]; then
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview-osx.sh`
+else
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/ensight.sh`
+	_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/gperftools.sh`
+fi
 
 
 # Clean environment paths again. Only remove duplicates
@@ -224,16 +238,23 @@ cleaned=`$foamClean "$PATH"` && PATH="$cleaned"
 #- Clean LD_LIBRARY_PATH
 cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
 
+#- Clean DYLD_LIBRARY_PATH on OS X
+if [ "$(uname -s)" == "Darwin" ]; then
+	cleaned=`$foamClean "$DYLD_LIBRARY_PATH"` && DYLD_LIBRARY_PATH="$cleaned"
+fi
+
 #- Clean MANPATH (trailing ':' to find system pages)
 cleaned=`$foamClean "$MANPATH"`: && MANPATH="$cleaned"
 
 export PATH LD_LIBRARY_PATH MANPATH
 
+[ "$(uname -s)" == "Darwin" ] && export DYLD_LIBRARY_PATH
+
 #- Clean LD_PRELOAD
 if [ -n "$LD_PRELOAD" ]
 then
-    cleaned=`$foamClean "$LD_PRELOAD"` && LD_PRELOAD="$cleaned"
-    export LD_PRELOAD
+	cleaned=`$foamClean "$LD_PRELOAD"` && LD_PRELOAD="$cleaned"
+	export LD_PRELOAD
 fi
 
 
diff --git a/etc/config/paraview-osx.sh b/etc/config/paraview-osx.sh
new file mode 100644
index 0000000..8a45da2
--- /dev/null
+++ b/etc/config/paraview-osx.sh
@@ -0,0 +1,15 @@
+if [ -d "/Applications/paraview.app" ]; then
+	[ "$FOAM_VERBOSE" -a "$PS1" ] && echo "Using /Applications/paraview.app"
+
+	paraview () {
+		"/Applications/paraview.app/Contents/MacOS/paraview" "$@"
+	}
+
+	export -f paraview
+else
+	echo
+	echo "Please download binary Paraview release from"
+	echo "http://paraview.org and install it in /Applications"
+	echo "folder."
+	echo
+fi
diff --git a/etc/config/scotch.sh b/etc/config/scotch.sh
index 1ee06e8..71a9560 100644
--- a/etc/config/scotch.sh
+++ b/etc/config/scotch.sh
@@ -33,7 +33,12 @@
 #     during the wmake process
 #------------------------------------------------------------------------------
 
-export SCOTCH_VERSION=scotch_6.0.0
-export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$SCOTCH_VERSION
+if [ "$(uname -s)" != "Darwin" ]; then
+	export SCOTCH_VERSION=scotch_6.0.0
+	export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$SCOTCH_VERSION
+else
+	export SCOTCH_VERSION="scotch_$(basename $(readlink /usr/local/opt/scotch))"
+	export SCOTCH_ARCH_PATH=/usr/local/opt/scotch
+fi
 
 # -----------------------------------------------------------------------------
diff --git a/etc/config/settings.sh b/etc/config/settings.sh
index 5a77479..cafa19b 100644
--- a/etc/config/settings.sh
+++ b/etc/config/settings.sh
@@ -46,6 +46,8 @@ _foamAddLib()
     while [ $# -ge 1 ]
     do
         export LD_LIBRARY_PATH=$1:$LD_LIBRARY_PATH
+		[ "$(uname -s)" == "Darwin" ] \
+			&& export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
         shift
     done
 }
@@ -151,6 +153,12 @@ SunOS)
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+	WM_ARCH=darwin64
+	export WM_CC='clang'
+	export WM_CXX='clang++'
+	;;
+
 *)    # an unsupported operating system
     /bin/cat <<USAGE 1>&2
 
@@ -177,7 +185,8 @@ export FOAM_APPBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/bin
 export FOAM_LIBBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/lib
 
 # external (ThirdParty) libraries
-export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
+[ "$(uname -s)" != "Darwin" ] \
+	&& export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
 
 # site-specific directory
 siteDir="${WM_PROJECT_SITE:-$WM_PROJECT_INST_DIR/site}"
@@ -221,7 +230,11 @@ unset siteDir
 
 _foamAddPath $FOAM_USER_APPBIN:$FOAM_SITE_APPBIN:$FOAM_APPBIN
 # Make sure to pick up dummy versions of external libraries last
-_foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+if [ "$(uname -s)" != "Darwin" ]; then
+	_foamAddLib $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+else
+	_foamAddLib $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_LIBBIN/dummy
+fi
 
 # Compiler settings
 # ~~~~~~~~~~~~~~~~~
@@ -362,11 +375,21 @@ fi
 # boost and CGAL
 # ~~~~~~~~~~~~~~
 
-boost_version=boost_1_45_0
-cgal_version=CGAL-4.0
+if [ "$(uname -s)" == "Darwin" ]; then
+	boost_version="boost-$(basename $(readlink /usr/local/opt/boost))"
+	cgal_version="CGAL-$(basename $(readlink /usr/local/opt/cgal))"
 
-export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
-export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+	export BOOST_ARCH_PATH=/usr/local/opt/boost
+	export CGAL_ARCH_PATH=/usr/local/opt/cgal
+	export GMP_ARCH_PATH=/usr/local/opt/gmp
+	export MPFR_ARCH_PATH=/usr/local/opt/mpfr
+else
+	boost_version=boost_1_45_0
+	cgal_version=CGAL-4.0
+
+	export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
+	export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+fi
 
 # enabled if CGAL is available
 if [ "$FOAM_VERBOSE" -a "$PS1" ]
@@ -572,7 +595,9 @@ esac
 # dummy MPI already added to LD_LIBRARY_PATH and has no external libraries
 if [ "$FOAM_MPI" != dummy ]
 then
-    _foamAddLib $FOAM_LIBBIN/$FOAM_MPI:$FOAM_EXT_LIBBIN/$FOAM_MPI
+    _foamAddLib $FOAM_LIBBIN/$FOAM_MPI
+	[ "$(uname -s)" != "Darwin" ] \
+		&& _foamAddLib $FOAM_EXT_LIBBIN/$FOAM_MPI
 fi
 
 
diff --git a/src/Allwmake b/src/Allwmake
index 55b8981..8c59a57 100755
--- a/src/Allwmake
+++ b/src/Allwmake
@@ -9,11 +9,13 @@ wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
-    echo "Error: FOAM_EXT_LIBBIN not set"
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    exit 1
-}
+if [ "$(uname -s)" != "Darwin" ]; then
+	[ -n "$FOAM_EXT_LIBBIN" ] || {
+		echo "Error: FOAM_EXT_LIBBIN not set"
+		echo "    Check the OpenFOAM entries in your dot-files and source them."
+		exit 1
+	}
+fi
 
 set -x
 
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
index 9207781..f39d8ed 100644
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,11 @@ Description
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <mach-o/dyld.h>
+#else
 #include <link.h>
+#endif
 
 #include <netinet/in.h>
 
@@ -1260,6 +1264,24 @@ bool Foam::dlSymFound(void* handle, const std::string& symbol)
 }
 
 
+#if defined(darwin64)
+Foam::fileNameList Foam::dlLoaded()
+{
+    DynamicList<fileName> libs;
+    for(uint32_t cnt = 0; cnt < _dyld_image_count(); ++cnt)
+    {
+        libs.append(_dyld_get_image_name(cnt));
+    }
+
+    if (POSIX::debug)
+    {
+        std::cout
+            << "dlLoaded()"
+            << " : determined loaded libraries :" << libs.size() << std::endl;
+    }
+    return libs;
+}
+#else
 static int collectLibsCallback
 (
     struct dl_phdr_info *info,
@@ -1286,6 +1308,7 @@ Foam::fileNameList Foam::dlLoaded()
     }
     return libs;
 }
+#endif
 
 
 void Foam::osRandomSeed(const label seed)
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
index 8708ba9..65f046c 100644
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@ SourceFiles
 #define clockTime_H
 
 #include <sys/types.h>
+#if defined(darwin64)
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/fileStat.C b/src/OSspecific/POSIX/fileStat.C
index bf04835..8a3c796 100644
--- a/src/OSspecific/POSIX/fileStat.C
+++ b/src/OSspecific/POSIX/fileStat.C
@@ -29,7 +29,9 @@ License
 
 #include <signal.h>
 #include <unistd.h>
+#if ! defined(darwin64)
 #include <sys/sysmacros.h>
+#endif
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
index 4a3859d..7a57373 100644
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -2,7 +2,7 @@
   =========                 |
   \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
    \\    /   O peration     |
-    \\  /    A nd           | Copyright (C) 2011-2012 OpenFOAM Foundation
+    \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
      \\/     M anipulation  |
 -------------------------------------------------------------------------------
 License
@@ -23,16 +23,22 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#if defined(darwin64)
+#include "ulong.H"
+#endif
 #include "error.H"
-#include "IStringStream.H"
 #include "OStringStream.H"
 #include "OSspecific.H"
 #include "IFstream.H"
-#include "readHexLabel.H"
 
+#include <inttypes.h>
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+// To parse lldb output
+#include <regex.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -43,90 +49,140 @@ namespace Foam
 
 string pOpen(const string &cmd, label line=0)
 {
-    const int MAX = 1000;
+    string res = "\n";
 
     FILE *cmdPipe = popen(cmd.c_str(), "r");
 
     if (cmdPipe)
     {
+        char *buf = NULL;
+
         // Read line number of lines
         for (label cnt = 0; cnt <= line; cnt++)
         {
-            char buffer[MAX];
-            char* s = fgets(buffer, MAX-1, cmdPipe);
+            size_t linecap = 0;
+            ssize_t linelen;
+            linelen = getline(&buf, &linecap, cmdPipe);
 
-            if (s == NULL)
+            if (linelen < 0)
             {
-                return "";
+                break;
             }
 
             if (cnt == line)
             {
-                string str(buffer);
-                return str.substr(0, str.size()-1);
+                res = string(buf);
+                break;
             }
         }
+
+        if (buf != NULL)
+        {
+            free(buf);
+        }
+
         pclose(cmdPipe);
     }
 
-    return "";
+    return res.substr(0, res.size() - 1);
 }
 
 
-// use popen to call addr2line (using bfd.h directly would have
-// meant relinking everything)
+inline word addressToWord(const uintptr_t addr)
+{
+    OStringStream nStream;
+    nStream << "0x" << hex << addr;
+    return nStream.str();
+}
+
 
 void printSourceFileAndLine
 (
     Ostream& os,
-    const HashTable<label, fileName>& addressMap,
     const fileName& filename,
-    const word& address
+    Dl_info *info,
+    void *addr
 )
 {
-    word myAddress = address;
+    uintptr_t address = uintptr_t(addr);
+    word myAddress = addressToWord(address);
 
+#if ! defined(darwin64)
     if (filename.ext() == "so")
     {
-        // Convert offset into .so into offset into executable.
-
-        void *addr;
-        sscanf(myAddress.c_str(), "%p",&addr);
-
-        Dl_info info;
-
-        dladdr(addr, &info);
-
-        unsigned long offset = ulong(info.dli_fbase);
-
-        IStringStream addressStr(address.substr(2));
-        label addressValue = readHexLabel(addressStr);
-        label relativeAddress = addressValue-offset;
-
-        // Reconstruct hex word from address
-        OStringStream nStream;
-        nStream << "0x" << hex << relativeAddress;
-        myAddress = nStream.str();
+        // Convert address into offset into dynamic library
+        uintptr_t offset = uintptr_t(info->dli_fbase);
+        intptr_t relativeAddress = address - offset;
+        myAddress = addressToWord(relativeAddress);
     }
+#endif
 
     if (filename[0] == '/')
     {
         string line = pOpen
         (
+#if ! defined(darwin64)
             "addr2line -f --demangle=auto --exe "
           + filename
           + " "
           + myAddress,
             1
+#else
+            "echo 'image lookup -a "
+          + myAddress
+          + " "
+          + filename
+          + "'"
+          + " | xcrun lldb "
+          + "-O 'target create --no-dependents -a x86_64 "
+          + filename
+          + "' -o '"
+          + "target modules load -f "
+          + filename
+          + " __TEXT "
+          + addressToWord(reinterpret_cast<const uintptr_t>(info->dli_fbase))
+          + "'"
+          + " | tail -1"
+#endif
         );
 
+#if defined(darwin64)
+        {
+            const char *buf = line.c_str();
+            regex_t re;
+            regmatch_t mt[3];
+            int st;
+
+            regcomp(&re, ".\\+at \\(.\\+\\):\\(\\d\\+\\)", REG_ENHANCED);
+            st = regexec(&re, buf, 3, mt, 0);
+
+            if (st == REG_NOMATCH)
+            {
+                line = "??:0";
+            }
+            else
+            {
+                size_t len = mt[1].rm_eo - mt[1].rm_so;
+                string fname(buf + mt[1].rm_so, len);
+                len = mt[2].rm_eo - mt[2].rm_so;
+                string lnum(buf + mt[2].rm_so, len);
+                line = fname + ":" + lnum;
+            }
+            regfree(&re);
+        }
+#endif
+
         if (line == "")
         {
             os  << " addr2line failed";
         }
         else if (line == "??:0")
         {
-            os  << " in " << filename;
+            line = filename;
+            string cwdLine(line.replaceAll(cwd() + '/', ""));
+            string homeLine(cwdLine.replaceAll(home(), '~'));
+
+            os  << " in " << homeLine;
         }
         else
         {
@@ -139,83 +195,59 @@ void printSourceFileAndLine
 }
 
 
-void getSymbolForRaw
-(
-    Ostream& os,
-    const string& raw,
-    const fileName& filename,
-    const word& address
-)
+fileName absolutePath(const char* fn)
 {
-    if (filename.size() && filename[0] == '/')
+    fileName fname(fn);
+
+    if (fname[0] != '/' && fname[0] != '~')
     {
-        string fcnt = pOpen
-        (
-            "addr2line -f --demangle=auto --exe "
-          + filename
-          + " "
-          + address
-        );
+        string tmp = pOpen("which " + fname);
 
-        if (fcnt != "")
+        if (tmp[0] == '/' || tmp[0] == '~')
         {
-            os  << fcnt.c_str();
-            return;
+            fname = tmp;
         }
     }
-    os  << "Uninterpreted: " << raw.c_str();
+
+    return fname;
 }
 
 
-void error::safePrintStack(std::ostream& os)
+string demangleSymbol(const char* sn)
 {
-    // Get raw stack symbols
-    void *array[100];
-    size_t size = backtrace(array, 100);
-    char **strings = backtrace_symbols(array, size);
-
-    // See if they contain function between () e.g. "(__libc_start_main+0xd0)"
-    // and see if cplus_demangle can make sense of part before +
-    for (size_t i = 0; i < size; i++)
+    string res;
+    int st;
+    char* cxx_sname = abi::__cxa_demangle
+    (
+        sn,
+        NULL,
+        0,
+        &st
+    );
+
+    if (st == 0 && cxx_sname)
     {
-        string msg(strings[i]);
-        fileName programFile;
-        word address;
-
-        os  << '#' << label(i) << '\t' << msg << std::endl;
+        res = string(cxx_sname);
+        free(cxx_sname);
+    }
+    else
+    {
+        res = string(sn);
     }
-}
 
+    return res;
+}
 
-void error::printStack(Ostream& os)
-{
-    // Reads the starting addresses for the dynamically linked libraries
-    // from the /proc/pid/maps-file
-    // I'm afraid this works only for Linux 2.6-Kernels (may work on 2.4)
-    // Note2: the filenames in here will have softlinks resolved so will
-    // go wrong when having e.g. OpenFOAM installed under a softlink.
 
-    HashTable<label, fileName> addressMap;
-    {
-        IFstream is("/proc/" + name(pid()) + "/maps");
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
-        while (is.good())
-        {
-            string line;
-            is.getLine(line);
+} // End namespace Foam
 
-            string::size_type space = line.rfind(' ') + 1;
-            fileName libPath = line.substr(space, line.size()-space);
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
-            if (libPath.size() && libPath[0] == '/')
-            {
-                string offsetString(line.substr(0, line.find('-')));
-                IStringStream offsetStr(offsetString);
-                addressMap.insert(libPath, readHexLabel(offsetStr));
-            }
-        }
-    }
 
+void Foam::error::safePrintStack(std::ostream& os)
+{
     // Get raw stack symbols
     void *array[100];
     size_t size = backtrace(array, 100);
@@ -229,101 +261,51 @@ void error::printStack(Ostream& os)
         fileName programFile;
         word address;
 
-        os  << '#' << label(i) << "  ";
-        //os  << "Raw   : " << msg << "\n\t";
-        {
-            string::size_type lPos = msg.find('[');
-            string::size_type rPos = msg.find(']');
+        os  << '#' << label(i) << '\t' << msg << std::endl;
+    }
+}
 
-            if (lPos != string::npos && rPos != string::npos && lPos < rPos)
-            {
-                address = msg.substr(lPos+1, rPos-lPos-1);
-                msg = msg.substr(0, lPos);
-            }
 
-            string::size_type bracketPos = msg.find('(');
-            string::size_type spacePos = msg.find(' ');
-            if (bracketPos != string::npos || spacePos != string::npos)
-            {
-                programFile = msg.substr(0, min(spacePos, bracketPos));
-
-                // not an absolute path
-                if (programFile[0] != '/')
-                {
-                    string tmp = pOpen("which " + programFile);
-                    if (tmp[0] == '/' || tmp[0] == '~')
-                    {
-                        programFile = tmp;
-                    }
-                }
-            }
-        }
+void Foam::error::printStack(Ostream& os)
+{
+    // Get raw stack symbols
+    const size_t CALLSTACK_SIZE = 128;
 
-        string::size_type bracketPos = msg.find('(');
+    void *callstack[CALLSTACK_SIZE];
+    size_t size = backtrace(callstack, CALLSTACK_SIZE);
 
-        if (bracketPos != string::npos)
-        {
-            string::size_type start = bracketPos+1;
+    Dl_info *info = new Dl_info;
 
-            string::size_type plusPos = msg.find('+', start);
+    fileName fname = "???";
+    word address;
 
-            if (plusPos != string::npos)
-            {
-                string cName(msg.substr(start, plusPos-start));
-
-                int status;
-                char* cplusNamePtr = abi::__cxa_demangle
-                (
-                    cName.c_str(),
-                    NULL,                   // have it malloc itself
-                    0,
-                    &status
-                );
-
-                if (status == 0 && cplusNamePtr)
-                {
-                    os  << cplusNamePtr;
-                    free(cplusNamePtr);
-                }
-                else
-                {
-                    os  << cName.c_str();
-                }
-            }
-            else
-            {
-                string::size_type endBracketPos = msg.find(')', start);
-
-                if (endBracketPos != string::npos)
-                {
-                    string fullName(msg.substr(start, endBracketPos-start));
-
-                    os  << fullName.c_str() << nl;
-                }
-                else
-                {
-                    // Print raw message
-                    getSymbolForRaw(os, msg, programFile, address);
-                }
-            }
+    for(size_t i=0; i<size; i++)
+    {
+        int st = dladdr(callstack[i], info);
+
+        os << '#' << label(i) << "  ";
+        if (st != 0 && info->dli_fname != NULL && info->dli_fname[0] != '\0')
+        {
+            fname = absolutePath(info->dli_fname);
+
+            os <<
+            (
+                (info->dli_sname != NULL)
+              ? demangleSymbol(info->dli_sname)
+              : "?"
+            );
         }
         else
         {
-            // Print raw message
-            getSymbolForRaw(os, msg, programFile, address);
+            os << "?";
         }
 
-        printSourceFileAndLine(os, addressMap, programFile, address);
-
-        os  << nl;
+        printSourceFileAndLine(os, fname, info, callstack[i]);
+        os << nl;
     }
 
-    free(strings);
+    delete info;
 }
 
 
-// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
-
-} // End namespace Foam
-
 // ************************************************************************* //
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
index 501ff95..8f503d6 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -44,12 +44,43 @@ License
 
 #endif
 
+#if defined(__APPLE__)
+#include <xmmintrin.h>
+#include <malloc/malloc.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#endif
+
 #include <stdint.h>
+#include <limits>
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
 
 struct sigaction Foam::sigFpe::oldAction_;
 
+#if defined(__APPLE__)
+void *(*Foam::sigFpe::oldMallocHook_)
+(
+    struct _malloc_zone_t *zone,
+    size_t size
+) = NULL;
+
+void *Foam::sigFpe::nanMallocHook_
+(
+    struct _malloc_zone_t *zone,
+    size_t size
+)
+{
+    void *result;
+
+    result = oldMallocHook_(zone, size);
+
+    UList<scalar> lst(reinterpret_cast<scalar*>(result), size/sizeof(scalar));
+    lst = std::numeric_limits<scalar>::signaling_NaN();
+
+    return result;
+}
+#endif
 
 #ifdef LINUX
 
@@ -94,7 +125,7 @@ void* Foam::sigFpe::nanMallocHook_(size_t size, const void *caller)
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(__APPLE__)
 
 void Foam::sigFpe::sigHandler(int)
 {
@@ -134,10 +165,14 @@ Foam::sigFpe::~sigFpe()
 {
     if (env("FOAM_SIGFPE"))
     {
-#       ifdef LINUX_GNUC
+#       if defined(LINUX_GNUC) || defined(__APPLE__)
 
         // Reset signal
+#       if defined(__APPLE__)
+        if (oldAction_.sa_handler && sigaction(SIGFPE, NULL, NULL) < 0)
+#       else
         if (oldAction_.sa_handler && sigaction(SIGFPE, &oldAction_, NULL) < 0)
+#       endif
         {
             FatalErrorIn
             (
@@ -160,6 +195,20 @@ Foam::sigFpe::~sigFpe()
         }
 
 #       endif
+
+#       if defined(__APPLE__)
+        // Restoring old malloc handler
+        if (oldMallocHook_ != NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+
+            if (zone != NULL)
+            {
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE);
+                zone->malloc = oldMallocHook_;
+                mprotect(zone, getpagesize(), PROT_READ);
+            }
+        }
+#       endif
     }
 }
 
@@ -181,21 +230,31 @@ void Foam::sigFpe::set(const bool verbose)
     {
         bool supported = false;
 
-#       ifdef LINUX_GNUC
+#       if defined(LINUX_GNUC) || defined(__APPLE__)
         supported = true;
 
+#       if defined(LINUX_GNUC)
         feenableexcept
         (
             FE_DIVBYZERO
           | FE_INVALID
           | FE_OVERFLOW
         );
+#       endif
+#       if defined(__APPLE__)
+        _mm_setcsr(_MM_MASK_MASK &~
+                   (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO));
+#       endif
 
         struct sigaction newAction;
         newAction.sa_handler = sigHandler;
         newAction.sa_flags = SA_NODEFER;
         sigemptyset(&newAction.sa_mask);
+#       if defined(__APPLE__)
+        if (sigaction(SIGFPE, &newAction, NULL) < 0)
+#       else
         if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+#       endif
         {
             FatalErrorIn
             (
@@ -258,6 +317,28 @@ void Foam::sigFpe::set(const bool verbose)
 
 #       endif
 
+#       if defined(__APPLE__)
+        malloc_zone_t *zone = malloc_default_zone();
+
+        if (zone != NULL)
+        {
+            oldMallocHook_ = zone->malloc;
+            if
+            (
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE) == 0
+            )
+            {
+                zone->malloc = nanMallocHook_;
+                if
+                (
+                    mprotect(zone, getpagesize(), PROT_READ) == 0
+                )
+                {
+                    supported = true;
+                }
+            }
+        }
+#       endif
 
         if (verbose)
         {
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
index b7fdec8..c36885b 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -53,6 +53,10 @@ SourceFiles
 #    define LINUX_GNUC
 #endif
 
+#if defined(__APPLE__)
+#include <malloc/malloc.h>
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -79,10 +83,24 @@ class sigFpe
 
 #       endif
 
+#       if defined(__APPLE__)
+            static void *(*oldMallocHook_)
+            (
+                struct _malloc_zone_t *zone,
+                size_t size
+            );
+
+            static void *nanMallocHook_
+            (
+                struct _malloc_zone_t *zone,
+                size_t size
+            );
+#       endif
+
 
     // Static data members
 
-#   ifdef LINUX_GNUC
+#   if defined(LINUX_GNUC) || defined(__APPLE__)
 
         //- Handler for caught signals
         static void sigHandler(int);
diff --git a/src/OpenFOAM/containers/Lists/CompactListList/CompactListListI.H b/src/OpenFOAM/containers/Lists/CompactListList/CompactListListI.H
index 91987ac..9691c49 100644
--- a/src/OpenFOAM/containers/Lists/CompactListList/CompactListListI.H
+++ b/src/OpenFOAM/containers/Lists/CompactListList/CompactListListI.H
@@ -79,7 +79,7 @@ template<class T, class Container>
 inline const Foam::CompactListList<T, Container>&
 Foam::CompactListList<T, Container>::null()
 {
-    return *reinterpret_cast< CompactListList<T, Container>* >(0);
+    return NullObjectRef<CompactListList<T, Container> >();
 }
 
 
diff --git a/src/OpenFOAM/containers/Lists/FixedList/FixedListI.H b/src/OpenFOAM/containers/Lists/FixedList/FixedListI.H
index 6538319..af877eb 100644
--- a/src/OpenFOAM/containers/Lists/FixedList/FixedListI.H
+++ b/src/OpenFOAM/containers/Lists/FixedList/FixedListI.H
@@ -107,7 +107,7 @@ Foam::FixedList<T, Size>::clone() const
 template<class T, unsigned Size>
 inline const Foam::FixedList<T, Size>& Foam::FixedList<T, Size>::null()
 {
-    return *reinterpret_cast< FixedList<T, Size>* >(0);
+    return NullObjectRef<FixedList<T, Size> >();
 }
 
 
diff --git a/src/OpenFOAM/containers/Lists/List/ListI.H b/src/OpenFOAM/containers/Lists/List/ListI.H
index 26c65bd..2c759b4 100644
--- a/src/OpenFOAM/containers/Lists/List/ListI.H
+++ b/src/OpenFOAM/containers/Lists/List/ListI.H
@@ -42,7 +42,7 @@ inline Foam::autoPtr<Foam::List<T> > Foam::List<T>::clone() const
 template<class T>
 inline const Foam::List<T>& Foam::List<T>::null()
 {
-    return *reinterpret_cast< List<T>* >(0);
+    return NullObjectRef<List<T> >();
 }
 
 
diff --git a/src/OpenFOAM/containers/Lists/SubList/SubListI.H b/src/OpenFOAM/containers/Lists/SubList/SubListI.H
index 36fc5a4..09b40d8 100644
--- a/src/OpenFOAM/containers/Lists/SubList/SubListI.H
+++ b/src/OpenFOAM/containers/Lists/SubList/SubListI.H
@@ -74,7 +74,7 @@ inline Foam::SubList<T>::SubList
 template<class T>
 inline const Foam::SubList<T>& Foam::SubList<T>::null()
 {
-    return *reinterpret_cast< SubList<T>* >(0);
+    return NullObjectRef<SubList<T> >();
 }
 
 
diff --git a/src/OpenFOAM/containers/Lists/UList/UList.H b/src/OpenFOAM/containers/Lists/UList/UList.H
index 06ef4cb..1e782e0 100644
--- a/src/OpenFOAM/containers/Lists/UList/UList.H
+++ b/src/OpenFOAM/containers/Lists/UList/UList.H
@@ -42,6 +42,7 @@ SourceFiles
 #ifndef UList_H
 #define UList_H
 
+#include "nullObject.H"
 #include "bool.H"
 #include "label.H"
 #include "uLabel.H"
diff --git a/src/OpenFOAM/containers/Lists/UList/UListI.H b/src/OpenFOAM/containers/Lists/UList/UListI.H
index 3994b3d..a1c92bc 100644
--- a/src/OpenFOAM/containers/Lists/UList/UListI.H
+++ b/src/OpenFOAM/containers/Lists/UList/UListI.H
@@ -50,7 +50,7 @@ inline Foam::UList<T>::UList(T* __restrict__ v, label size)
 template<class T>
 inline const Foam::UList<T>& Foam::UList<T>::null()
 {
-    return *reinterpret_cast< UList<T>* >(0);
+    return NullObjectRef<UList<T> >();
 }
 
 
diff --git a/src/OpenFOAM/db/IOstreams/Pstreams/gatherScatter.C b/src/OpenFOAM/db/IOstreams/Pstreams/gatherScatter.C
index 33c7581..5fd597e 100644
--- a/src/OpenFOAM/db/IOstreams/Pstreams/gatherScatter.C
+++ b/src/OpenFOAM/db/IOstreams/Pstreams/gatherScatter.C
@@ -29,6 +29,9 @@ Description
 
 \*---------------------------------------------------------------------------*/
 
+#if defined(darwin64)
+#include "longLong.H"
+#endif
 #include "UOPstream.H"
 #include "OPstream.H"
 #include "UIPstream.H"
diff --git a/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C b/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
index 1c774c3..bdc7b8b 100644
--- a/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
+++ b/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
@@ -24,6 +24,9 @@ License
 \*---------------------------------------------------------------------------*/
 
 #include "codeStream.H"
+#if defined(darwin64)
+#include "longLong.H"
+#endif
 #include "addToMemberFunctionSelectionTable.H"
 #include "IStringStream.H"
 #include "OStringStream.H"
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
index 2f97577..026519c 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -334,7 +334,11 @@ Foam::fileName Foam::dynamicCode::codeRelPath() const
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
+#if defined(darwin64)
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
     return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+#endif
 }
 
 
diff --git a/src/OpenFOAM/db/objectRegistry/objectRegistryTemplates.C b/src/OpenFOAM/db/objectRegistry/objectRegistryTemplates.C
index 483e1c2..3d495af 100644
--- a/src/OpenFOAM/db/objectRegistry/objectRegistryTemplates.C
+++ b/src/OpenFOAM/db/objectRegistry/objectRegistryTemplates.C
@@ -170,7 +170,7 @@ const Type& Foam::objectRegistry::lookupObject(const word& name) const
             << abort(FatalError);
     }
 
-    return *reinterpret_cast< const Type* >(0);
+    return NullObjectRef<Type>();
 }
 
 
diff --git a/src/OpenFOAM/fields/DimensionedFields/DimensionedField/DimensionedFieldI.H b/src/OpenFOAM/fields/DimensionedFields/DimensionedField/DimensionedFieldI.H
index 05a8a31..6d3c9a1 100644
--- a/src/OpenFOAM/fields/DimensionedFields/DimensionedField/DimensionedFieldI.H
+++ b/src/OpenFOAM/fields/DimensionedFields/DimensionedField/DimensionedFieldI.H
@@ -34,7 +34,7 @@ template<class Type, class GeoMesh>
 inline const DimensionedField<Type, GeoMesh>&
 DimensionedField<Type, GeoMesh>::null()
 {
-    return *reinterpret_cast< DimensionedField<Type, GeoMesh>* >(0);
+    return NullObjectRef<DimensionedField<Type, GeoMesh> >();
 }
 
 
diff --git a/src/OpenFOAM/fields/DimensionedFields/DimensionedField/SubDimensionedFieldI.H b/src/OpenFOAM/fields/DimensionedFields/DimensionedField/SubDimensionedFieldI.H
index 7cfdc97..9f75b5f 100644
--- a/src/OpenFOAM/fields/DimensionedFields/DimensionedField/SubDimensionedFieldI.H
+++ b/src/OpenFOAM/fields/DimensionedFields/DimensionedField/SubDimensionedFieldI.H
@@ -80,7 +80,7 @@ template<class Type, class GeoMesh>
 inline const SubDimensionedField<Type, GeoMesh>&
 SubDimensionedField<Type, GeoMesh>::null()
 {
-    return *reinterpret_cast< SubDimensionedField<Type, GeoMesh>* >(0);
+    return NullObjectRef<SubDimensionedField<Type, GeoMesh> >();
 }
 
 
diff --git a/src/OpenFOAM/fields/Fields/Field/Field.C b/src/OpenFOAM/fields/Fields/Field/Field.C
index 334eba8..3e7d1dd 100644
--- a/src/OpenFOAM/fields/Fields/Field/Field.C
+++ b/src/OpenFOAM/fields/Fields/Field/Field.C
@@ -402,7 +402,7 @@ void Foam::Field<Type>::map
     if
     (
         mapper.direct()
-     && &mapper.directAddressing()
+     && notNull(mapper.directAddressing())
      && mapper.directAddressing().size()
     )
     {
@@ -437,7 +437,7 @@ void Foam::Field<Type>::autoMap
     (
         (
             mapper.direct()
-         && &mapper.directAddressing()
+         && notNull(mapper.directAddressing())
          && mapper.directAddressing().size()
         )
      || (!mapper.direct() && mapper.addressing().size())
diff --git a/src/OpenFOAM/fields/Fields/Field/Field.H b/src/OpenFOAM/fields/Fields/Field/Field.H
index 9b4088a..f56170e 100644
--- a/src/OpenFOAM/fields/Fields/Field/Field.H
+++ b/src/OpenFOAM/fields/Fields/Field/Field.H
@@ -100,7 +100,7 @@ public:
         //- Return a null field
         inline static const Field<Type>& null()
         {
-            return *reinterpret_cast< Field<Type>* >(0);
+            return NullObjectRef<Field<Type> >();
         }
 
 
diff --git a/src/OpenFOAM/fields/Fields/Field/SubFieldI.H b/src/OpenFOAM/fields/Fields/Field/SubFieldI.H
index d6c28d0..e2326cc 100644
--- a/src/OpenFOAM/fields/Fields/Field/SubFieldI.H
+++ b/src/OpenFOAM/fields/Fields/Field/SubFieldI.H
@@ -84,7 +84,7 @@ inline Foam::SubField<Type>::SubField
 template<class Type>
 inline const Foam::SubField<Type>& Foam::SubField<Type>::null()
 {
-    return *reinterpret_cast< SubField<Type>* >(0);
+    return NullObjectRef<SubField<Type> >();
 }
 
 
diff --git a/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricFieldI.H b/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricFieldI.H
index 49fd3c8..12ce96a 100644
--- a/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricFieldI.H
+++ b/src/OpenFOAM/fields/GeometricFields/GeometricField/GeometricFieldI.H
@@ -29,7 +29,7 @@ template<class Type, template<class> class PatchField, class GeoMesh>
 inline const Foam::GeometricField<Type, PatchField, GeoMesh>&
 Foam::GeometricField<Type, PatchField, GeoMesh>::null()
 {
-    return *reinterpret_cast< GeometricField<Type, PatchField, GeoMesh>* >(0);
+    return NullObjectRef<GeometricField<Type, PatchField, GeoMesh> >();
 }
 
 
diff --git a/src/OpenFOAM/global/foamDoc.H b/src/OpenFOAM/global/foamDoc.H
index 1dbd19f..f3b4b28 100644
--- a/src/OpenFOAM/global/foamDoc.H
+++ b/src/OpenFOAM/global/foamDoc.H
@@ -46,7 +46,7 @@ License
     - applications:
         collections of library functionality wrapped up into applications,
         such as solvers and utilities
-        
+
     - tutorials:
         a suite of test cases that highlight a broad cross-section of
         OpenFOAM's capabilities
diff --git a/src/OpenFOAM/global/global.Cver b/src/OpenFOAM/global/global.Cver
index ea711ef..b898715 100644
--- a/src/OpenFOAM/global/global.Cver
+++ b/src/OpenFOAM/global/global.Cver
@@ -42,6 +42,8 @@ const char* const Foam::FOAMbuild = "BUILD_STRING";
 
 #include "new.C"
 
+#include "nullObject.C"
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 // Global IO streams
 
diff --git a/src/OpenFOAM/matrices/Matrix/MatrixI.H b/src/OpenFOAM/matrices/Matrix/MatrixI.H
index a3604b2..49aa369 100644
--- a/src/OpenFOAM/matrices/Matrix/MatrixI.H
+++ b/src/OpenFOAM/matrices/Matrix/MatrixI.H
@@ -47,7 +47,7 @@ clone() const
 template<class Form, class Type>
 inline const Foam::Matrix<Form, Type>& Foam::Matrix<Form, Type>::null()
 {
-    return *reinterpret_cast< Matrix<Form, Type>* >(0);
+    return NullObjectRef<Matrix<Form, Type> >();
 }
 
 
diff --git a/src/OpenFOAM/memory/Xfer/XferI.H b/src/OpenFOAM/memory/Xfer/XferI.H
index 3cb5077..490ee69 100644
--- a/src/OpenFOAM/memory/Xfer/XferI.H
+++ b/src/OpenFOAM/memory/Xfer/XferI.H
@@ -23,12 +23,14 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#include "nullObject.H"
+
 // * * * * * * * * * * * * Static Member Functions * * * * * * * * * * * * * //
 
 template<class T>
 inline const Foam::Xfer<T>& Foam::Xfer<T>::null()
 {
-    return *reinterpret_cast< Xfer<T>* >(0);
+    return NullObjectRef<Xfer<T> >();
 }
 
 
diff --git a/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C b/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
index 2733291..25528fc 100644
--- a/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
+++ b/src/OpenFOAM/meshes/meshShapes/cellShape/cellShapeIO.C
@@ -128,7 +128,7 @@ Ostream& operator<<(Ostream& os, const InfoProxy<cellShape>& ip)
 {
     const cellShape& cs = ip.t_;
 
-    if (!(&cs.model()))
+    if (isNull(cs.model()))
     {
         os  << "    cellShape has no model!\n";
     }
diff --git a/src/OpenFOAM/meshes/polyMesh/polyMesh.C b/src/OpenFOAM/meshes/polyMesh/polyMesh.C
index 9b0d11a..aad7729 100644
--- a/src/OpenFOAM/meshes/polyMesh/polyMesh.C
+++ b/src/OpenFOAM/meshes/polyMesh/polyMesh.C
@@ -675,23 +675,23 @@ void Foam::polyMesh::resetPrimitives
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (notNull(points))
     {
         points_.transfer(points());
         bounds_ = boundBox(points_, validBoundary);
     }
 
-    if (&faces)
+    if (notNull(faces))
     {
         faces_.transfer(faces());
     }
 
-    if (&owner)
+    if (notNull(owner))
     {
         owner_.transfer(owner());
     }
 
-    if (&neighbour)
+    if (notNull(neighbour))
     {
         neighbour_.transfer(neighbour());
     }
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
index 57373e0..69ce1a5 100644
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,15 @@ License
 
 #include <cmath>
 
+#if defined(darwin64)
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
diff --git a/src/OpenFOAM/primitives/nullObject/nullObject.C b/src/OpenFOAM/primitives/nullObject/nullObject.C
new file mode 100644
index 0000000..cfcbfdf
--- /dev/null
+++ b/src/OpenFOAM/primitives/nullObject/nullObject.C
@@ -0,0 +1,34 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "nullObject.H"
+
+// * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
+
+const Foam::NullObject Foam::NullObject::nullObject;
+const Foam::NullObject* Foam::nullObjectPtr = &Foam::NullObject::nullObject;
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/nullObject/nullObject.H b/src/OpenFOAM/primitives/nullObject/nullObject.H
new file mode 100644
index 0000000..d324a92
--- /dev/null
+++ b/src/OpenFOAM/primitives/nullObject/nullObject.H
@@ -0,0 +1,110 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Class
+    Foam::nullObject
+
+Description
+    Singleton null-object class and instance
+
+SourceFiles
+    nullObjectI.H
+    nullObject.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef nullObject_H
+#define nullObject_H
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+/*---------------------------------------------------------------------------*\
+                         Class nullObject Declaration
+\*---------------------------------------------------------------------------*/
+
+class NullObject
+{
+    //- Private constructor
+    NullObject()
+    {}
+
+    //- Prevent copy-construction
+    NullObject(const NullObject&);
+
+    //- Prevent assignment
+    NullObject& operator=(const NullObject&);
+
+public:
+
+    //- The unique null object
+    static const NullObject nullObject;
+};
+
+
+//- Pointer to the unique nullObject
+extern const NullObject* nullObjectPtr;
+
+
+//- Return reference to the nullObject of type T
+template <class T>
+inline const T& NullObjectRef();
+
+//- Return pointer to the nullObject of type T
+template <class T>
+inline const T* NullObjectPtr();
+
+
+//- Return true if t is a reference to the nullObject of type T
+template <class T>
+inline bool isNull(const T& t);
+
+//- Return true if t is not a reference to the nullObject of type T
+template <class T>
+inline bool notNull(const T& t);
+
+
+//- Return true if t is a pointer to the nullObject of type T
+template <class T>
+inline bool isNull(const T* t);
+
+//- Return true if t is not a pointer to the nullObject of type T
+template <class T>
+inline bool notNull(const T* t);
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#include "nullObjectI.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/nullObject/nullObjectI.H b/src/OpenFOAM/primitives/nullObject/nullObjectI.H
new file mode 100644
index 0000000..4f8fbc1
--- /dev/null
+++ b/src/OpenFOAM/primitives/nullObject/nullObjectI.H
@@ -0,0 +1,65 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+template <class T>
+inline const T& Foam::NullObjectRef()
+{
+    return *reinterpret_cast<const T*>(nullObjectPtr);
+}
+
+template <class T>
+inline const T* Foam::NullObjectPtr()
+{
+    return reinterpret_cast<const T*>(nullObjectPtr);
+}
+
+
+template <class T>
+inline bool Foam::isNull(const T& t)
+{
+    return &t == NullObjectPtr<T>();
+}
+
+template <class T>
+inline bool Foam::notNull(const T& t)
+{
+    return &t != NullObjectPtr<T>();
+}
+
+
+template <class T>
+inline bool Foam::isNull(const T* t)
+{
+    return t == NullObjectPtr<T>();
+}
+
+template <class T>
+inline bool Foam::notNull(const T* t)
+{
+    return t != NullObjectPtr<T>();
+}
+
+
+// ************************************************************************* //
diff --git a/src/conversion/ensight/part/ensightPartCells.C b/src/conversion/ensight/part/ensightPartCells.C
index 80f0cdc..beb2d54 100644
--- a/src/conversion/ensight/part/ensightPartCells.C
+++ b/src/conversion/ensight/part/ensightPartCells.C
@@ -67,7 +67,7 @@ void Foam::ensightPartCells::classify
     size_ = mesh.nCells();
 
     bool limited = false;
-    if (&idList)
+    if (notNull(idList))
     {
         limited = true;
         size_ = idList.size();
diff --git a/src/conversion/ensight/part/ensightPartIO.C b/src/conversion/ensight/part/ensightPartIO.C
index 7fe2e6e..6d827d7 100644
--- a/src/conversion/ensight/part/ensightPartIO.C
+++ b/src/conversion/ensight/part/ensightPartIO.C
@@ -59,7 +59,7 @@ void Foam::ensightPart::writeFieldList
     const labelUList& idList
 ) const
 {
-    if (&idList)
+    if (notNull(idList))
     {
         forAll(idList, i)
         {
diff --git a/src/dummyThirdParty/metisDecomp/metis.h b/src/dummyThirdParty/metisDecomp/metis.h
index 7b6ca31..c5adaad 100644
--- a/src/dummyThirdParty/metisDecomp/metis.h
+++ b/src/dummyThirdParty/metisDecomp/metis.h
@@ -11,7 +11,7 @@
 #define IDXTYPEWIDTH 32
 
 /*------------------------------------------------------------------------
-* Undefine the following #define in order to use short idxtype as the idxtype 
+* Undefine the following #define in order to use short idxtype as the idxtype
 *-------------------------------------------------------------------------*/
 #if IDXTYPEWIDTH == 32
   #define SCNIDX  SCNd32
@@ -29,17 +29,17 @@
 
 
 void METIS_WPartGraphRecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt,
-                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, 
+                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts,
                    idxtype *options, idxtype *edgecut, idxtype *part);
 void METIS_PartGraphRecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt,
-                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, 
+                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options,
+                   idxtype *edgecut, idxtype *part);
+void METIS_WPartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt,
+                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts,
+                   idxtype *options, idxtype *edgecut, idxtype *part);
+void METIS_PartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt,
+                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options,
                    idxtype *edgecut, idxtype *part);
-void METIS_WPartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, 
-                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, 
-                   idxtype *options, idxtype *edgecut, idxtype *part); 
-void METIS_PartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, 
-                   idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, 
-                   idxtype *edgecut, idxtype *part); 
 
 
 
diff --git a/src/edgeMesh/edgeMesh.C b/src/edgeMesh/edgeMesh.C
index 7e2a397..fa00fe7 100644
--- a/src/edgeMesh/edgeMesh.C
+++ b/src/edgeMesh/edgeMesh.C
@@ -182,12 +182,12 @@ void Foam::edgeMesh::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (notNull(pointLst))
     {
         points_.transfer(pointLst());
     }
 
-    if (&edgeLst)
+    if (notNull(edgeLst))
     {
         edges_.transfer(edgeLst());
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.C b/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.C
index d70c040..0374f95 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.C
+++ b/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.C
@@ -150,7 +150,7 @@ void Foam::porosityModels::DarcyForchheimer::correct
     const scalarField& V = mesh_.V();
     scalarField& Udiag = UEqn.diag();
     vectorField& Usource = UEqn.source();
- 
+
     if (UEqn.dimensions() == dimForce)
     {
         const volScalarField& rho =
@@ -181,7 +181,7 @@ void Foam::porosityModels::DarcyForchheimer::correct
     const scalarField& V = mesh_.V();
     scalarField& Udiag = UEqn.diag();
     vectorField& Usource = UEqn.source();
- 
+
     apply(Udiag, Usource, V, rho, mu, U);
 }
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.H b/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.H
index 5110792..2f6f00b 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.H
+++ b/src/finiteVolume/cfdTools/general/porosityModel/DarcyForchheimer/DarcyForchheimer.H
@@ -170,7 +170,7 @@ public:
         virtual void correct
         (
             const fvVectorMatrix& UEqn,
-            volTensorField& AU            
+            volTensorField& AU
         ) const;
 
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.C b/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.C
index bcc8554..e63b203 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.C
+++ b/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.C
@@ -202,7 +202,7 @@ void Foam::porosityModels::fixedCoeff::correct
     const scalarField& V = mesh_.V();
     scalarField& Udiag = UEqn.diag();
     vectorField& Usource = UEqn.source();
- 
+
     scalar rho = 1.0;
     if (UEqn.dimensions() == dimForce)
     {
@@ -230,7 +230,7 @@ void Foam::porosityModels::fixedCoeff::correct
     {
         coeffs_.lookup("rhoRef") >> rho;
     }
- 
+
     apply(Udiag, Usource, V, U, rho);
 }
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.H b/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.H
index 1581318..345f0b6 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.H
+++ b/src/finiteVolume/cfdTools/general/porosityModel/fixedCoeff/fixedCoeff.H
@@ -147,7 +147,7 @@ public:
         virtual void correct
         (
             const fvVectorMatrix& UEqn,
-            volTensorField& AU            
+            volTensorField& AU
         ) const;
 
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModel.C b/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModel.C
index f940ff2..5aacf6f 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModel.C
+++ b/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModel.C
@@ -187,7 +187,7 @@ void Foam::porosityModel::addResistance
 (
     const fvVectorMatrix& UEqn,
     volTensorField& AU,
-    bool correctAUprocBC         
+    bool correctAUprocBC
 ) const
 {
     if (cellZoneIds_.empty())
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModelList.C b/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModelList.C
index df30285..ca38255 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModelList.C
+++ b/src/finiteVolume/cfdTools/general/porosityModel/porosityModel/porosityModelList.C
@@ -153,7 +153,7 @@ void Foam::porosityModelList::addResistance
 (
     const fvVectorMatrix& UEqn,
     volTensorField& AU,
-    bool correctAUprocBC         
+    bool correctAUprocBC
 ) const
 {
     forAll(*this, i)
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.C b/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.C
index 485f0be..b3134ec 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.C
+++ b/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.C
@@ -91,7 +91,7 @@ void Foam::porosityModels::powerLaw::correct
     const vectorField& U = UEqn.psi();
     const scalarField& V = mesh_.V();
     scalarField& Udiag = UEqn.diag();
- 
+
     if (UEqn.dimensions() == dimForce)
     {
         const volScalarField& rho =
@@ -116,7 +116,7 @@ void Foam::porosityModels::powerLaw::correct
     const vectorField& U = UEqn.psi();
     const scalarField& V = mesh_.V();
     scalarField& Udiag = UEqn.diag();
- 
+
     apply(Udiag, V, rho, U);
 }
 
diff --git a/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.H b/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.H
index 299335b..64fe5ff 100644
--- a/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.H
+++ b/src/finiteVolume/cfdTools/general/porosityModel/powerLaw/powerLaw.H
@@ -151,7 +151,7 @@ public:
         virtual void correct
         (
             const fvVectorMatrix& UEqn,
-            volTensorField& AU            
+            volTensorField& AU
         ) const;
 
 
diff --git a/src/finiteVolume/fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H b/src/finiteVolume/fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H
index 3d00735..6b9d2a5 100644
--- a/src/finiteVolume/fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H
+++ b/src/finiteVolume/fields/fvPatchFields/basic/fixedGradient/fixedGradientFvPatchField.H
@@ -47,7 +47,7 @@ Description
 
     \table
         Property     | Description             | Required    | Default value
-        gradient     | gradient                | yes         | 
+        gradient     | gradient                | yes         |
     \endtable
 
     Example of the boundary condition specification:
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H b/src/finiteVolume/fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H
index 8051261..de5e29d 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/flowRateInletVelocity/flowRateInletVelocityFvPatchVectorField.H
@@ -71,7 +71,7 @@ Description
         rhoInlet            1.0;
     }
     \endverbatim
-    
+
     The \c flowRate entry is a \c DataEntry type, meaning that it can be
     specified as constant, a polynomial fuction of time, and ...
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H b/src/finiteVolume/fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H
index 430ee1e..a0923e0 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/inletOutletTotalTemperature/inletOutletTotalTemperatureFvPatchScalarField.H
@@ -58,7 +58,7 @@ Description
         value           uniform 0;
     }
     \endverbatim
-   
+
 SeeAlso
     Foam::inletOutletFvPatchField
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/mappedFixedValue/mappedFixedValueFvPatchField.H b/src/finiteVolume/fields/fvPatchFields/derived/mappedFixedValue/mappedFixedValueFvPatchField.H
index 011ec5b..fdf1caa 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/mappedFixedValue/mappedFixedValueFvPatchField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/mappedFixedValue/mappedFixedValueFvPatchField.H
@@ -29,11 +29,11 @@ Group
 
 Description
     This boundary condition maps the value at a set of cells or patch faces
-    back to *this.  
+    back to *this.
 
     The sample mode is set by the underlying mapping engine, provided by the
     mappedPatchBase class.
-    
+
     \heading Patch usage
 
     \table
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H b/src/finiteVolume/fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H
index c98ad30..de65249 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/pressureDirectedInletVelocity/pressureDirectedInletVelocityFvPatchVectorField.H
@@ -54,7 +54,7 @@ Description
     \endverbatim
 
 Note
-    If reverse flow is possible or expected use the 
+    If reverse flow is possible or expected use the
     pressureDirectedInletOutletVelocityFvPatchVectorField condition instead.
 
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H b/src/finiteVolume/fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H
index cc114d7..5bb4074 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/rotatingPressureInletOutletVelocity/rotatingPressureInletOutletVelocityFvPatchVectorField.H
@@ -39,7 +39,7 @@ Description
         Property     | Description             | Required    | Default value
         phi          | flux field name         | no          | phi
         tangentialVelocity | tangential velocity field | no  |
-        omega        | angular velocty of the frame [rad/s] | yes    | 
+        omega        | angular velocty of the frame [rad/s] | yes    |
     \endtable
 
     Example of the boundary condition specification:
@@ -49,7 +49,7 @@ Description
         type            rotatingPressureInletOutletVelocity;
         phi             phi;
         tangentialVelocity uniform (0 0 0);
-        omega           100;        
+        omega           100;
     }
     \endverbatim
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H b/src/finiteVolume/fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H
index 22d806c..53f16ff 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/rotatingTotalPressure/rotatingTotalPressureFvPatchScalarField.H
@@ -41,7 +41,7 @@ Description
         psi          | compressibility field name | no       | none
         gamma        | ratio of specific heats (Cp/Cv) | yes |
         p0           | static pressure reference | yes       |
-        omega        | angular velocty of the frame [rad/s] | yes    | 
+        omega        | angular velocty of the frame [rad/s] | yes    |
     \endtable
 
     Example of the boundary condition specification:
@@ -55,7 +55,7 @@ Description
         psi             psi;
         gamma           1.4;
         p0              uniform 1e5;
-        omega           100;        
+        omega           100;
     }
     \endverbatim
 
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H b/src/finiteVolume/fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H
index a3d5d56..cba0050 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/rotatingWallVelocity/rotatingWallVelocityFvPatchVectorField.H
@@ -36,7 +36,7 @@ Description
         Property     | Description             | Required    | Default value
         origin       | origin of rotation in Cartesian co-ordinates | yes|
         axis         | axis of rotation        | yes         |
-        omega        | angular velocty of the frame [rad/s] | yes    | 
+        omega        | angular velocty of the frame [rad/s] | yes    |
     \endtable
 
     Example of the boundary condition specification:
@@ -52,7 +52,7 @@ Description
 
     The \c omega entry is a DataEntry type, able to describe time varying
     functions.
-    
+
 SeeAlso
     Foam::DataEntry
     Foam::fixedValueFvPatchField
diff --git a/src/finiteVolume/fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H b/src/finiteVolume/fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H
index 6f6ea27..a00814c 100644
--- a/src/finiteVolume/fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H
+++ b/src/finiteVolume/fields/fvPatchFields/derived/supersonicFreestream/supersonicFreestreamFvPatchVectorField.H
@@ -46,7 +46,7 @@ Description
         UInf         | free-stream velocity    | yes         |
         pInf         | free-stream pressure    | yes         |
         TInf         | free-stream temperature | yes         |
-        gamma        | heat capacity ratio (cp/Cv) | yes     | 
+        gamma        | heat capacity ratio (cp/Cv) | yes     |
     \endtable
 
     Example of the boundary condition specification:
diff --git a/src/finiteVolume/fields/fvPatchFields/fvPatchField/fvPatchField.C b/src/finiteVolume/fields/fvPatchFields/fvPatchField/fvPatchField.C
index e9c5790..1784439 100644
--- a/src/finiteVolume/fields/fvPatchFields/fvPatchField/fvPatchField.C
+++ b/src/finiteVolume/fields/fvPatchFields/fvPatchField/fvPatchField.C
@@ -78,14 +78,14 @@ Foam::fvPatchField<Type>::fvPatchField
     patchType_(ptf.patchType_)
 {
     // For unmapped faces set to internal field value (zero-gradient)
-    if (&iF && iF.size())
+    if (reinterpret_cast<const void*>(&iF) && iF.size())
     {
         Field<Type>& f = *this;
 
         if
         (
             mapper.direct()
-         && &mapper.directAddressing()
+         && reinterpret_cast<const void*>(&mapper.directAddressing())
          && mapper.directAddressing().size()
         )
         {
@@ -262,7 +262,7 @@ void Foam::fvPatchField<Type>::autoMap
         if
         (
             mapper.direct()
-         && &mapper.directAddressing()
+         && reinterpret_cast<const void*>(&mapper.directAddressing())
          && mapper.directAddressing().size()
         )
         {
diff --git a/src/fvAgglomerationMethods/Allwmake b/src/fvAgglomerationMethods/Allwmake
index abbcf46..2a07b74 100755
--- a/src/fvAgglomerationMethods/Allwmake
+++ b/src/fvAgglomerationMethods/Allwmake
@@ -3,11 +3,20 @@ cd ${0%/*} || exit 1    # run from this directory
 makeType=${1:-libso}
 set -x
 
-export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
+if [ "$(uname -s)" != "Darwin" ]; then
+	export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
 
-if [ -e "$FOAM_LIBBIN/libMGridGen.so" ]
-then
-    wmake $makeType MGridGenGamgAgglomeration
+	if [ -e "$FOAM_LIBBIN/libMGridGen.so" ]
+	then
+		wmake $makeType MGridGenGamgAgglomeration
+	fi
+else
+	export ParMGridGen=/usr/local/opt/parmgridgen
+
+	if [ -e "$ParMGridGen/lib/libmgrid.a" ]
+	then
+		wmake $makeType MGridGenGamgAgglomeration
+	fi
 fi
 
 wmake $makeType pairPatchAgglomeration
diff --git a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
index a58b65f..44bbdcb 100644
--- a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
+++ b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
@@ -5,6 +5,15 @@ TYPE_REAL=
 TYPE_REAL=-DTYPE_REAL
 #endif
 
+#if defined(darwin64)
+EXE_INC = \
+    -I$(LIB_SRC)/finiteVolume/lnInclude \
+    -I$(ParMGridGen)/include \
+    $(TYPE_REAL)
+
+LIB_LIBS = \
+    -L$(ParMGridGen)/lib -lmgrid
+#else
 EXE_INC = \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(ParMGridGen)/MGridGen/Lib/lnInclude \
@@ -13,3 +22,4 @@ EXE_INC = \
 
 LIB_LIBS = \
     -L$(FOAM_EXT_LIBBIN) -lMGridGen
+#endif
diff --git a/src/fvOptions/Make/options b/src/fvOptions/Make/options
index a98e673..e8de5c7 100644
--- a/src/fvOptions/Make/options
+++ b/src/fvOptions/Make/options
@@ -13,5 +13,4 @@ LIB_LIBS = \
     -lfiniteVolume \
     -lsampling \
     -lmeshTools \
-    /*-lsolidThermo*/ \
     -lcompressibleTurbulenceModel
diff --git a/src/lagrangian/coalCombustion/submodels/surfaceReactionModel/COxidationHurtMitchell/COxidationHurtMitchell.H b/src/lagrangian/coalCombustion/submodels/surfaceReactionModel/COxidationHurtMitchell/COxidationHurtMitchell.H
index cd78003..dcf71cc 100644
--- a/src/lagrangian/coalCombustion/submodels/surfaceReactionModel/COxidationHurtMitchell/COxidationHurtMitchell.H
+++ b/src/lagrangian/coalCombustion/submodels/surfaceReactionModel/COxidationHurtMitchell/COxidationHurtMitchell.H
@@ -41,7 +41,7 @@ Description
     Model validity:
         Gas temperature: Tc > 1500 K
         Particle sizes:  75 um -> 200 um
-        Pox > 0.3 atm        
+        Pox > 0.3 atm
 
 \*---------------------------------------------------------------------------*/
 
diff --git a/src/lagrangian/distributionModels/uniform/uniform.C b/src/lagrangian/distributionModels/uniform/uniform.C
index 4d1504b..c268166 100644
--- a/src/lagrangian/distributionModels/uniform/uniform.C
+++ b/src/lagrangian/distributionModels/uniform/uniform.C
@@ -47,8 +47,7 @@ Foam::distributionModels::uniform::uniform
 :
     distributionModel(typeName, dict, rndGen),
     minValue_(readScalar(distributionModelDict_.lookup("minValue"))),
-    maxValue_(readScalar(distributionModelDict_.lookup("maxValue"))),
-    range_(maxValue_ - minValue_)
+    maxValue_(readScalar(distributionModelDict_.lookup("maxValue")))
 {
     check();
 }
diff --git a/src/lagrangian/distributionModels/uniform/uniform.H b/src/lagrangian/distributionModels/uniform/uniform.H
index 5a8f665..524a86f 100644
--- a/src/lagrangian/distributionModels/uniform/uniform.H
+++ b/src/lagrangian/distributionModels/uniform/uniform.H
@@ -61,7 +61,7 @@ class uniform
         scalar maxValue_;
 
         //- Distribution range
-        scalar range_;
+        // scalar range_;
 
 
 public:
diff --git a/src/lagrangian/intermediate/submodels/Kinematic/InjectionModel/InjectionModel/InjectionModelList.H b/src/lagrangian/intermediate/submodels/Kinematic/InjectionModel/InjectionModel/InjectionModelList.H
index 22213e2..6875779 100644
--- a/src/lagrangian/intermediate/submodels/Kinematic/InjectionModel/InjectionModel/InjectionModelList.H
+++ b/src/lagrangian/intermediate/submodels/Kinematic/InjectionModel/InjectionModel/InjectionModelList.H
@@ -89,7 +89,7 @@ public:
 
             //- Return the maximum end-of-injection time
             scalar timeEnd() const;
- 
+
             //- Volume of parcels to introduce relative to SOI
             scalar volumeToInject(const scalar time0, const scalar time1);
 
diff --git a/src/lagrangian/spray/submodels/BreakupModel/PilchErdman/PilchErdman.H b/src/lagrangian/spray/submodels/BreakupModel/PilchErdman/PilchErdman.H
index 69190de..09d1f3f 100644
--- a/src/lagrangian/spray/submodels/BreakupModel/PilchErdman/PilchErdman.H
+++ b/src/lagrangian/spray/submodels/BreakupModel/PilchErdman/PilchErdman.H
@@ -51,7 +51,7 @@ Description
     The authors suggest that:
         compressible flow   : B1 = 0.75*1.0; B2 = 3*0.116
         incompressible flow : B1 = 0.75*0.5; B2 = 3*0.0758
-        
+
 
 \*---------------------------------------------------------------------------*/
 
diff --git a/src/meshTools/momentOfInertia/volumeIntegration/volInt.c b/src/meshTools/momentOfInertia/volumeIntegration/volInt.c
index 7601655..9e8db56 100644
--- a/src/meshTools/momentOfInertia/volumeIntegration/volInt.c
+++ b/src/meshTools/momentOfInertia/volumeIntegration/volInt.c
@@ -34,8 +34,8 @@
 			Thanks to Zoran Popovic for catching this one.
 
 	27 May 1997     Corrected sign error in translation of inertia
-	                product terms to center of mass frame.  Changes 
-			confined to function main().  Thanks to 
+	                product terms to center of mass frame.  Changes
+			confined to function main().  Thanks to
 			Chris Hecker.
 */
 
@@ -123,16 +123,16 @@ void readPolyhedron(char *name, POLYHEDRON *p)
   double dx1, dy1, dz1, dx2, dy2, dz2, nx, ny, nz, len;
   FACE *f;
 
-  
+
   if (!(fp = fopen(name, "r"))) {
     printf("i/o error\n");
     exit(1);
   }
-  
+
   fscanf(fp, "%d", &p->numVerts);
   printf("Reading in %d vertices\n", p->numVerts);
   for (i = 0; i < p->numVerts; i++)
-    fscanf(fp, "%lf %lf %lf", 
+    fscanf(fp, "%lf %lf %lf",
 	   &p->verts[i][X], &p->verts[i][Y], &p->verts[i][Z]);
 
   fscanf(fp, "%d", &p->numFaces);
@@ -196,7 +196,7 @@ void compProjectionIntegrals(FACE *f)
     db = b1 - b0;
     a0_2 = a0 * a0; a0_3 = a0_2 * a0; a0_4 = a0_3 * a0;
     b0_2 = b0 * b0; b0_3 = b0_2 * b0; b0_4 = b0_3 * b0;
-    a1_2 = a1 * a1; a1_3 = a1_2 * a1; 
+    a1_2 = a1 * a1; a1_3 = a1_2 * a1;
     b1_2 = b1 * b1; b1_3 = b1_2 * b1;
 
     C1 = a1 + a0;
@@ -253,7 +253,7 @@ compFaceIntegrals(FACE *f)
 
   Faaa = k1 * Paaa;
   Fbbb = k1 * Pbbb;
-  Fccc = -k4 * (CUBE(n[A])*Paaa + 3*SQR(n[A])*n[B]*Paab 
+  Fccc = -k4 * (CUBE(n[A])*Paaa + 3*SQR(n[A])*n[B]*Paab
 	   + 3*n[A]*SQR(n[B])*Pabb + CUBE(n[B])*Pbbb
 	   + 3*w*(SQR(n[A])*Paa + 2*n[A]*n[B]*Pab + SQR(n[B])*Pbb)
 	   + w*w*(3*(n[A]*Pa + n[B]*Pb) + w*P1));
@@ -270,8 +270,8 @@ void compVolumeIntegrals(POLYHEDRON *p)
   double nx, ny, nz;
   int i;
 
-  T0 = T1[X] = T1[Y] = T1[Z] 
-     = T2[X] = T2[Y] = T2[Z] 
+  T0 = T1[X] = T1[Y] = T1[Z]
+     = T2[X] = T2[Y] = T2[Z]
      = TP[X] = TP[Y] = TP[Z] = 0;
 
   for (i = 0; i < p->numFaces; i++) {
@@ -336,7 +336,7 @@ int main(int argc, char *argv[])
   printf("Tx =   %+20.6f\n", T1[X]);
   printf("Ty =   %+20.6f\n", T1[Y]);
   printf("Tz =   %+20.6f\n\n", T1[Z]);
-  
+
   printf("Txx =  %+20.6f\n", T2[X]);
   printf("Tyy =  %+20.6f\n", T2[Y]);
   printf("Tzz =  %+20.6f\n\n", T2[Z]);
@@ -366,9 +366,9 @@ int main(int argc, char *argv[])
   J[X][X] -= mass * (r[Y]*r[Y] + r[Z]*r[Z]);
   J[Y][Y] -= mass * (r[Z]*r[Z] + r[X]*r[X]);
   J[Z][Z] -= mass * (r[X]*r[X] + r[Y]*r[Y]);
-  J[X][Y] = J[Y][X] += mass * r[X] * r[Y]; 
-  J[Y][Z] = J[Z][Y] += mass * r[Y] * r[Z]; 
-  J[Z][X] = J[X][Z] += mass * r[Z] * r[X]; 
+  J[X][Y] = J[Y][X] += mass * r[X] * r[Y];
+  J[Y][Z] = J[Z][Y] += mass * r[Y] * r[Z];
+  J[Z][X] = J[X][Z] += mass * r[Z] * r[X];
 
   printf("center of mass:  (%+12.6f,%+12.6f,%+12.6f)\n\n", r[X], r[Y], r[Z]);
 
@@ -376,5 +376,5 @@ int main(int argc, char *argv[])
   printf("%+15.6f  %+15.6f  %+15.6f\n", J[X][X], J[X][Y], J[X][Z]);
   printf("%+15.6f  %+15.6f  %+15.6f\n", J[Y][X], J[Y][Y], J[Y][Z]);
   printf("%+15.6f  %+15.6f  %+15.6f\n\n", J[Z][X], J[Z][Y], J[Z][Z]);
-  
+
 }
diff --git a/src/parallel/decompose/Allwmake b/src/parallel/decompose/Allwmake
index 5cea1fb..2d37549 100755
--- a/src/parallel/decompose/Allwmake
+++ b/src/parallel/decompose/Allwmake
@@ -47,13 +47,7 @@ then
 
     if [ -d "$FOAM_LIBBIN/$FOAM_MPI" ]
     then
-        #- Bit of a hack: ptscotch 6 requires scotch linked as well as. Can be
-        #  removed once ptscotch declares dependency on scotch itself.
-        if [ "$SCOTCH_VERSION" = "scotch_6.0.0" ]
-        then
-            export LINK_FLAGS="-lscotch"
-        fi
-
+		export LINK_FLAGS="-lscotch"
         wmakeMpiLib ptscotchDecomp
     fi
 else
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
index acdebd8..b40b720 100644
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -3,10 +3,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
-    -I$(SCOTCH_ARCH_PATH)/include/$(FOAM_MPI) \
-    -I/usr/include/scotch \
+    -I$(SCOTCH_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit ${LINK_FLAGS} -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lptscotch -lptscotcherrexit ${LINK_FLAGS}
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
index 3bb11fb..23701f5 100644
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -7,10 +7,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lscotch -lscotcherrexit
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSource.H b/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSource.H
index 15efc23..785fcd0 100644
--- a/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSource.H
+++ b/src/postProcessing/functionObjects/field/fieldValues/faceSource/faceSource.H
@@ -211,14 +211,14 @@ private:
         //- Set faces according to sampledSurface
         void sampledSurfaceFaces(const dictionary&);
 
-        //- Combine mesh faces and points from multiple processors 
+        //- Combine mesh faces and points from multiple processors
         void combineMeshGeometry
         (
             faceList& faces,
             pointField& points
         ) const;
 
-        //- Combine surface faces and points from multiple processors 
+        //- Combine surface faces and points from multiple processors
         void combineSurfaceGeometry
         (
             faceList& faces,
diff --git a/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelCollection.C b/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelCollection.C
index d11f2d1..6d0a148 100644
--- a/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelCollection.C
+++ b/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelCollection.C
@@ -53,7 +53,7 @@ namespace pyrolysisModels
 pyrolysisModelCollection::pyrolysisModelCollection(const fvMesh& mesh)
 :
     PtrList<pyrolysisModel>()
-    
+
 {
     IOdictionary pyrolysisZonesDict
     (
diff --git a/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelNew.C b/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelNew.C
index 0e1a507..223405f 100644
--- a/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelNew.C
+++ b/src/regionModels/pyrolysisModels/pyrolysisModel/pyrolysisModelNew.C
@@ -115,7 +115,7 @@ autoPtr<pyrolysisModel> pyrolysisModel::New
     (
         cstrIter()
         (
-            modelType, 
+            modelType,
             mesh,
             dict,
             regionType
diff --git a/src/regionModels/thermalBaffleModels/noThermo/noThermo.C b/src/regionModels/thermalBaffleModels/noThermo/noThermo.C
index e5205db..d603203 100644
--- a/src/regionModels/thermalBaffleModels/noThermo/noThermo.C
+++ b/src/regionModels/thermalBaffleModels/noThermo/noThermo.C
@@ -151,7 +151,7 @@ const solidThermo& noThermo::thermo() const
     FatalErrorIn("const volScalarField& noThermo::T() const")
         << "T field not available for " << type()
         << abort(FatalError);
-    return *reinterpret_cast<const solidThermo*>(NULL);
+    return NullObjectRef<solidThermo>();
 }
 
 
diff --git a/src/renumber/SloanRenumber/Make/options b/src/renumber/SloanRenumber/Make/options
index 492a3ae..f22a1e6 100644
--- a/src/renumber/SloanRenumber/Make/options
+++ b/src/renumber/SloanRenumber/Make/options
@@ -1,12 +1,17 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(BOOST_ARCH_PATH)/include \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(BOOST_ARCH_PATH)/lib -lboost_thread \
+    -L$(BOOST_ARCH_PATH)/lib \
     -lmeshTools \
     -ldecompositionMethods \
     -lrenumberMethods
+
+ifneq ("$(wildcard $(BOOST_ARCH_PATH)/lib/libboost_thread-mt.dylib)","")
+LIB_LIBS += -lboost_thread-mt
+else
+LIB_LIBS += -lboost_thread
+endif
diff --git a/src/sampling/cuttingPlane/cuttingPlane.C b/src/sampling/cuttingPlane/cuttingPlane.C
index 87f004a..03f29dd 100644
--- a/src/sampling/cuttingPlane/cuttingPlane.C
+++ b/src/sampling/cuttingPlane/cuttingPlane.C
@@ -51,7 +51,7 @@ void Foam::cuttingPlane::calcCutCells
     const edgeList& edges = mesh.edges();
 
     label listSize = cellEdges.size();
-    if (&cellIdLabels)
+    if (notNull(cellIdLabels))
     {
         listSize = cellIdLabels.size();
     }
@@ -64,7 +64,7 @@ void Foam::cuttingPlane::calcCutCells
     for (label listI = 0; listI < listSize; ++listI)
     {
         label cellI = listI;
-        if (&cellIdLabels)
+        if (notNull(cellIdLabels))
         {
             cellI = cellIdLabels[listI];
         }
@@ -400,7 +400,7 @@ void Foam::cuttingPlane::remapFaces
 )
 {
     // recalculate the cells cut
-    if (&faceMap && faceMap.size())
+    if (notNull(faceMap) && faceMap.size())
     {
         MeshStorage::remapFaces(faceMap);
 
diff --git a/src/sampling/sampledSurface/sampledPatch/sampledPatch.C b/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
index da2d90c..bbf6290 100644
--- a/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
+++ b/src/sampling/sampledSurface/sampledPatch/sampledPatch.C
@@ -203,7 +203,7 @@ bool Foam::sampledPatch::update()
 void Foam::sampledPatch::remapFaces(const labelUList& faceMap)
 {
     // recalculate the cells cut
-    if (&faceMap && faceMap.size())
+    if (notNull(faceMap) && faceMap.size())
     {
         MeshStorage::remapFaces(faceMap);
         patchFaceLabels_ = labelList
diff --git a/src/sampling/sampledSurface/writers/nastran/nastranSurfaceWriter.C b/src/sampling/sampledSurface/writers/nastran/nastranSurfaceWriter.C
index eaa16fe..f18c8f1 100644
--- a/src/sampling/sampledSurface/writers/nastran/nastranSurfaceWriter.C
+++ b/src/sampling/sampledSurface/writers/nastran/nastranSurfaceWriter.C
@@ -111,7 +111,7 @@ void Foam::nastranSurfaceWriter::writeCoord
             os.unsetf(ios_base::left);
             os.setf(ios_base::right);
             os  << setw(8) << pointI + 1
-                << "        " 
+                << "        "
                 << setw(8) << p.x()
                 << setw(8) << p.y()
                 << setw(8) << p.z()
diff --git a/src/surfMesh/MeshedSurface/MeshedSurface.C b/src/surfMesh/MeshedSurface/MeshedSurface.C
index 43719de..c053662 100644
--- a/src/surfMesh/MeshedSurface/MeshedSurface.C
+++ b/src/surfMesh/MeshedSurface/MeshedSurface.C
@@ -433,7 +433,7 @@ void Foam::MeshedSurface<Face>::remapFaces
 )
 {
     // recalculate the zone start/size
-    if (&faceMap && faceMap.size())
+    if (notNull(faceMap) && faceMap.size())
     {
         surfZoneList& zones = storedZones();
 
@@ -526,17 +526,17 @@ void Foam::MeshedSurface<Face>::reset
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (notNull(pointLst))
     {
         storedPoints().transfer(pointLst());
     }
 
-    if (&faceLst)
+    if (notNull(faceLst))
     {
         storedFaces().transfer(faceLst());
     }
 
-    if (&zoneLst)
+    if (notNull(zoneLst))
     {
         storedZones().transfer(zoneLst());
     }
@@ -555,17 +555,17 @@ void Foam::MeshedSurface<Face>::reset
 
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&pointLst)
+    if (notNull(pointLst))
     {
         storedPoints().transfer(pointLst());
     }
 
-    if (&faceLst)
+    if (notNull(faceLst))
     {
         storedFaces().transfer(faceLst());
     }
 
-    if (&zoneLst)
+    if (notNull(zoneLst))
     {
         storedZones().transfer(zoneLst());
     }
@@ -860,7 +860,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     // nothing to do
     if (nTri <= faceLst.size())
     {
-        if (&faceMapOut)
+        if (reinterpret_cast<const void*>(&faceMapOut))
         {
             faceMapOut.clear();
         }
@@ -871,7 +871,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     List<label> faceMap;
 
     // reuse storage from optional faceMap
-    if (&faceMapOut)
+    if (reinterpret_cast<const void*>(&faceMapOut))
     {
         faceMap.transfer(faceMapOut);
     }
@@ -928,7 +928,7 @@ Foam::label Foam::MeshedSurface<Face>::triangulate
     remapFaces(faceMap);
 
     // optionally return the faceMap
-    if (&faceMapOut)
+    if (reinterpret_cast<const void*>(&faceMapOut))
     {
         faceMapOut.transfer(faceMap);
     }
diff --git a/src/surfMesh/MeshedSurface/MeshedSurface.H b/src/surfMesh/MeshedSurface/MeshedSurface.H
index 2170781..f52ca82 100644
--- a/src/surfMesh/MeshedSurface/MeshedSurface.H
+++ b/src/surfMesh/MeshedSurface/MeshedSurface.H
@@ -469,7 +469,7 @@ inline label MeshedSurface<triFace>::triangulate()
 template<>
 inline label MeshedSurface<triFace>::triangulate(List<label>& faceMap)
 {
-    if (&faceMap)
+    if (notNull(faceMap))
     {
         faceMap.clear();
     }
diff --git a/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C b/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
index 1a97d5d..c8ca9b7 100644
--- a/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
+++ b/src/surfMesh/MeshedSurfaceAllocator/MeshedSurfaceIOAllocator.C
@@ -88,12 +88,12 @@ void Foam::MeshedSurfaceIOAllocator::resetFaces
     const Xfer<surfZoneList>& zones
 )
 {
-    if (&faces)
+    if (notNull(faces))
     {
         faces_.transfer(faces());
     }
 
-    if (&zones)
+    if (notNull(zones))
     {
         zones_.transfer(zones());
     }
@@ -109,7 +109,7 @@ void Foam::MeshedSurfaceIOAllocator::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (notNull(points))
     {
         points_.transfer(points());
     }
@@ -127,7 +127,7 @@ void Foam::MeshedSurfaceIOAllocator::reset
 {
     // Take over new primitive data.
     // Optimized to avoid overwriting data at all
-    if (&points)
+    if (notNull(points))
     {
         points_.transfer(points());
     }
diff --git a/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C b/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
index 7f6de73..8c562ef 100644
--- a/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
+++ b/src/surfMesh/UnsortedMeshedSurface/UnsortedMeshedSurface.C
@@ -401,7 +401,7 @@ void Foam::UnsortedMeshedSurface<Face>::remapFaces
 )
 {
     // re-assign the zone Ids
-    if (&faceMap && faceMap.size())
+    if (notNull(faceMap) && faceMap.size())
     {
         if (zoneToc_.empty())
         {
@@ -612,7 +612,7 @@ void Foam::UnsortedMeshedSurface<Face>::reset
         Xfer<surfZoneList>()
     );
 
-    if (&zoneIds)
+    if (notNull(zoneIds))
     {
         zoneIds_.transfer(zoneIds());
     }
@@ -634,7 +634,7 @@ void Foam::UnsortedMeshedSurface<Face>::reset
         Xfer<surfZoneList>()
     );
 
-    if (&zoneIds)
+    if (notNull(zoneIds))
     {
         zoneIds_.transfer(zoneIds());
     }
diff --git a/src/surfMesh/surfMesh/surfMesh.C b/src/surfMesh/surfMesh/surfMesh.C
index 88a7427..4740948 100644
--- a/src/surfMesh/surfMesh/surfMesh.C
+++ b/src/surfMesh/surfMesh/surfMesh.C
@@ -209,7 +209,7 @@ Foam::surfMesh::surfMesh
     }
 
     // We can also send Xfer<..>::null just to initialize without allocating
-    if (&surf)
+    if (notNull(surf))
     {
         transfer(surf());
     }
diff --git a/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C b/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
index 63dd057..f18daf0 100644
--- a/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
+++ b/src/thermophysicalModels/reactionThermo/chemistryReaders/chemkinReader/chemkinReader.C
@@ -400,6 +400,14 @@ void Foam::chemkinReader::addPressureDependentReaction
 
         default:
         {
+            FatalErrorIn("chemkinReader::addPressureDependentReaction")
+                << "Fall-off function type "
+                << fallOffFunctionNames[fofType]
+                << " on line " << lineNo_-1
+                << " not implemented"
+                << exit(FatalError);
+
+            /*
             if (fofType < 4)
             {
                 FatalErrorIn("chemkinReader::addPressureDependentReaction")
@@ -416,6 +424,7 @@ void Foam::chemkinReader::addPressureDependentReaction
                     << " on line " << lineNo_-1
                     << exit(FatalError);
             }
+            */
         }
     }
 }
diff --git a/src/thermophysicalModels/specie/reaction/Reactions/Reaction/Reaction.C b/src/thermophysicalModels/specie/reaction/Reactions/Reaction/Reaction.C
index 2a8a5ca..16df3ae 100644
--- a/src/thermophysicalModels/specie/reaction/Reactions/Reaction/Reaction.C
+++ b/src/thermophysicalModels/specie/reaction/Reactions/Reaction/Reaction.C
@@ -503,7 +503,7 @@ const Foam::speciesTable& Foam::Reaction<ReactionThermo>::gasSpecies() const
         "const speciesTable& gasSpecies() const"
         " for this reaction"
     );
-    return *reinterpret_cast<speciesTable*>(0);
+    return NullObjectRef<speciesTable>();
 }
 
 
@@ -516,7 +516,7 @@ Foam::Reaction<ReactionThermo>::glhs() const
         "inline const List<typename Reaction<ReactionThermo>::specieCoeffs>&"
         "Reaction<ReactionThermo>::glhs()"
     );
-    return *reinterpret_cast<List<specieCoeffs>*>(0);
+    return NullObjectRef<List<specieCoeffs> >();
 }
 
 
@@ -529,7 +529,7 @@ Foam::Reaction<ReactionThermo>::grhs() const
         "inline const List<typename Reaction<ReactionThermo>::specieCoeffs>&"
         "Reaction<ReactionThermo>::grhs()"
     );
-    return *reinterpret_cast<List<specieCoeffs>*>(0);
+    return NullObjectRef<List<specieCoeffs> >();
 }
 
 // ************************************************************************* //
diff --git a/src/turbulenceModels/compressible/LES/DESModel/DESModelDoc.H b/src/turbulenceModels/compressible/LES/DESModel/DESModelDoc.H
index e9deb32..e7bb541 100644
--- a/src/turbulenceModels/compressible/LES/DESModel/DESModelDoc.H
+++ b/src/turbulenceModels/compressible/LES/DESModel/DESModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpCmpTurbulence
     This group contains compressible DES models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/compressible/LES/GenEddyVisc/GenEddyVisc.H b/src/turbulenceModels/compressible/LES/GenEddyVisc/GenEddyVisc.H
index d4af6e5..68ce924 100644
--- a/src/turbulenceModels/compressible/LES/GenEddyVisc/GenEddyVisc.H
+++ b/src/turbulenceModels/compressible/LES/GenEddyVisc/GenEddyVisc.H
@@ -116,7 +116,7 @@ public:
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "epsilon",
                         runTime_.timeName(),
                         mesh_,
diff --git a/src/turbulenceModels/compressible/LES/GenSGSStress/GenSGSStress.H b/src/turbulenceModels/compressible/LES/GenSGSStress/GenSGSStress.H
index 44eef6d..1e84390 100644
--- a/src/turbulenceModels/compressible/LES/GenSGSStress/GenSGSStress.H
+++ b/src/turbulenceModels/compressible/LES/GenSGSStress/GenSGSStress.H
@@ -117,7 +117,7 @@ public:
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "k",
                         runTime_.timeName(),
                         mesh_,
@@ -139,7 +139,7 @@ public:
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "epsilon",
                         runTime_.timeName(),
                         mesh_,
diff --git a/src/turbulenceModels/compressible/LES/LESModel/LESModelDoc.H b/src/turbulenceModels/compressible/LES/LESModel/LESModelDoc.H
index ac8c52e..3f1d1c1 100644
--- a/src/turbulenceModels/compressible/LES/LESModel/LESModelDoc.H
+++ b/src/turbulenceModels/compressible/LES/LESModel/LESModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpCmpTurbulence
     This group contains compressible LES models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/compressible/RAS/RASModel/RASModelDoc.H b/src/turbulenceModels/compressible/RAS/RASModel/RASModelDoc.H
index 53757f8..300be13 100644
--- a/src/turbulenceModels/compressible/RAS/RASModel/RASModelDoc.H
+++ b/src/turbulenceModels/compressible/RAS/RASModel/RASModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpCmpTurbulence
     This group contains compressible RAS models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H b/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
index 63aa24b..4d0d5f3 100644
--- a/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
+++ b/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
@@ -36,7 +36,7 @@ Description
         \f[
             \epsilon_p = \frac{C_{\mu}^{0.75} k^{1.5}}{L}
         \f]
-   
+
     where
 
     \vartable
diff --git a/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H b/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
index cafd2d9..0f3484c 100644
--- a/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
+++ b/src/turbulenceModels/compressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
@@ -35,7 +35,7 @@ Description
         \f[
             \omega_p = \frac{k^{0.5}}{C_{\mu}^{0.25} L}
         \f]
-   
+
     where
 
     \vartable
diff --git a/src/turbulenceModels/compressible/turbulenceModel/turbulenceModelDoc.H b/src/turbulenceModels/compressible/turbulenceModel/turbulenceModelDoc.H
index 17bc210..b3bd051 100644
--- a/src/turbulenceModels/compressible/turbulenceModel/turbulenceModelDoc.H
+++ b/src/turbulenceModels/compressible/turbulenceModel/turbulenceModelDoc.H
@@ -27,5 +27,5 @@ License
 @{
     This group contains compressible turbulence models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/incompressible/LES/DESModel/DESModelDoc.H b/src/turbulenceModels/incompressible/LES/DESModel/DESModelDoc.H
index 5311d09..d100318 100644
--- a/src/turbulenceModels/incompressible/LES/DESModel/DESModelDoc.H
+++ b/src/turbulenceModels/incompressible/LES/DESModel/DESModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpIcoTurbulence
     This group contains incompressible DES models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/incompressible/LES/GenEddyVisc/GenEddyVisc.H b/src/turbulenceModels/incompressible/LES/GenEddyVisc/GenEddyVisc.H
index e1dc9c2..0cd340a 100644
--- a/src/turbulenceModels/incompressible/LES/GenEddyVisc/GenEddyVisc.H
+++ b/src/turbulenceModels/incompressible/LES/GenEddyVisc/GenEddyVisc.H
@@ -112,7 +112,7 @@ public:
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "epsilon",
                         runTime_.timeName(),
                         mesh_,
diff --git a/src/turbulenceModels/incompressible/LES/GenSGSStress/GenSGSStress.H b/src/turbulenceModels/incompressible/LES/GenSGSStress/GenSGSStress.H
index 4f24f79..8d94ed1 100644
--- a/src/turbulenceModels/incompressible/LES/GenSGSStress/GenSGSStress.H
+++ b/src/turbulenceModels/incompressible/LES/GenSGSStress/GenSGSStress.H
@@ -112,7 +112,7 @@ public:
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "k",
                         runTime_.timeName(),
                         mesh_,
@@ -128,13 +128,13 @@ public:
         virtual tmp<volScalarField> epsilon() const
         {
             const volScalarField K(k());
-            
+
             return tmp<volScalarField>
             (
                 new volScalarField
                 (
                     IOobject
-                    (   
+                    (
                         "epsilon",
                         runTime_.timeName(),
                         mesh_,
diff --git a/src/turbulenceModels/incompressible/LES/LESModel/LESModelDoc.H b/src/turbulenceModels/incompressible/LES/LESModel/LESModelDoc.H
index 9b400e2..8784545 100644
--- a/src/turbulenceModels/incompressible/LES/LESModel/LESModelDoc.H
+++ b/src/turbulenceModels/incompressible/LES/LESModel/LESModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpIcoTurbulence
     This group contains incompressible LES models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/incompressible/RAS/RASModel/RASModelDoc.H b/src/turbulenceModels/incompressible/RAS/RASModel/RASModelDoc.H
index 2161656..f1bd133 100644
--- a/src/turbulenceModels/incompressible/RAS/RASModel/RASModelDoc.H
+++ b/src/turbulenceModels/incompressible/RAS/RASModel/RASModelDoc.H
@@ -28,5 +28,5 @@ License
     \ingroup grpIcoTurbulence
     This group contains incompressible RAS models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/atmBoundaryLayerInletEpsilon/atmBoundaryLayerInletEpsilonFvPatchScalarField.H b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/atmBoundaryLayerInletEpsilon/atmBoundaryLayerInletEpsilonFvPatchScalarField.H
index b94500a..b5f7c71 100644
--- a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/atmBoundaryLayerInletEpsilon/atmBoundaryLayerInletEpsilonFvPatchScalarField.H
+++ b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/atmBoundaryLayerInletEpsilon/atmBoundaryLayerInletEpsilonFvPatchScalarField.H
@@ -45,7 +45,7 @@ Description
         z_0     | surface roughness length [m]
         z_g     | minimum vlaue in z direction [m]
     \endvartable
- 
+
     and:
 
         \f[
diff --git a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentHeatFluxTemperature/turbulentHeatFluxTemperatureFvPatchScalarField.H b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentHeatFluxTemperature/turbulentHeatFluxTemperatureFvPatchScalarField.H
index 59b8106..68b6b2c 100644
--- a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentHeatFluxTemperature/turbulentHeatFluxTemperatureFvPatchScalarField.H
+++ b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentHeatFluxTemperature/turbulentHeatFluxTemperatureFvPatchScalarField.H
@@ -57,7 +57,7 @@ Note
     - it is assumed that the units of \c alphaEff are [kg/m/s]
     - the specific heat capcaity is read from the transport dictionary entry
       \c Cp0
-    
+
 SourceFiles
     turbulentHeatFluxTemperatureFvPatchScalarField.C
 
diff --git a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
index 1349631..db0e865 100644
--- a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
+++ b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.H
@@ -36,7 +36,7 @@ Description
         \f[
             \epsilon_p = \frac{C_{\mu}^{0.75} k^{1.5}}{L}
         \f]
-   
+
     where
 
     \vartable
diff --git a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
index 9fdff8d..249e3af 100644
--- a/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
+++ b/src/turbulenceModels/incompressible/RAS/derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.H
@@ -35,7 +35,7 @@ Description
         \f[
             \omega_p = \frac{k^{0.5}}{C_{\mu}^{0.25} L}
         \f]
-   
+
     where
 
     \vartable
diff --git a/src/turbulenceModels/incompressible/turbulenceModel/turbulenceModelDoc.H b/src/turbulenceModels/incompressible/turbulenceModel/turbulenceModelDoc.H
index f9751dc..739af73 100644
--- a/src/turbulenceModels/incompressible/turbulenceModel/turbulenceModelDoc.H
+++ b/src/turbulenceModels/incompressible/turbulenceModel/turbulenceModelDoc.H
@@ -27,5 +27,5 @@ License
 @{
     This group contains incompressible turbulence models.
 @}
-    
+
 \*---------------------------------------------------------------------------*/
diff --git a/wmake/Makefile b/wmake/Makefile
index 96e1885..7de8c1a 100644
--- a/wmake/Makefile
+++ b/wmake/Makefile
@@ -91,7 +91,11 @@ EXE_DEP         = $(OBJECTS_DIR)/options
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(shell uname -s),Darwin)
+SO              = dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
diff --git a/wmake/rules/darwin64Clang/c b/wmake/rules/darwin64Clang/c
new file mode 100644
index 0000000..9a3e872
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c
@@ -0,0 +1,16 @@
+.SUFFIXES: .c .h
+
+cWARN        = -Wall
+
+cc          = xcrun clang -m64
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $$SOURCE -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -Xlinker -dylib -Xlinker -undefined -Xlinker suppress
+LINKEXE     = $(cc) -Xlinker -execute
diff --git a/wmake/rules/darwin64Clang/c++ b/wmake/rules/darwin64Clang/c++
new file mode 100644
index 0000000..b50faed
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++
@@ -0,0 +1,29 @@
+.SUFFIXES: .C .cxx .cc .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wno-overloaded-virtual \
+              -Wno-c++11-extensions -Wno-unused-variable \
+	      -Wno-unused-local-typedef
+
+CC          = xcrun clang++ -arch x86_64
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $$SOURCE -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -Xlinker -dylib \
+				-Xlinker -flat_namespace \
+				-Xlinker -undefined \
+				-Xlinker suppress
+
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker -execute \
+				-Xlinker -undefined \
+				-Xlinker dynamic_lookup
diff --git a/wmake/rules/darwin64Clang/c++Debug b/wmake/rules/darwin64Clang/c++Debug
new file mode 100644
index 0000000..1c63335
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -g -DFULLDEBUG
+c++OPT      = -O0
diff --git a/wmake/rules/darwin64Clang/c++Opt b/wmake/rules/darwin64Clang/c++Opt
new file mode 100644
index 0000000..3363be8
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Opt
@@ -0,0 +1,3 @@
+#c++DBUG     = -O0 -DFULLDEBUG -g
+c++DBUG     =
+c++OPT      = -O3
diff --git a/wmake/rules/darwin64Clang/c++Prof b/wmake/rules/darwin64Clang/c++Prof
new file mode 100644
index 0000000..3bda4da
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/darwin64Clang/cDebug b/wmake/rules/darwin64Clang/cDebug
new file mode 100644
index 0000000..7b7adf1
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
diff --git a/wmake/rules/darwin64Clang/cOpt b/wmake/rules/darwin64Clang/cOpt
new file mode 100644
index 0000000..1731870
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cOpt
@@ -0,0 +1,2 @@
+cDBUG       =
+cOPT        = -O3
diff --git a/wmake/rules/darwin64Clang/cProf b/wmake/rules/darwin64Clang/cProf
new file mode 100644
index 0000000..ca3ac9b
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/darwin64Clang/general b/wmake/rules/darwin64Clang/general
new file mode 100644
index 0000000..243cb7d
--- /dev/null
+++ b/wmake/rules/darwin64Clang/general
@@ -0,0 +1,8 @@
+CPP        = cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
