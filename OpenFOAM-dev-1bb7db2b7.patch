 .gitignore                                         |   1 +
 Allwmake                                           |   6 +-
 applications/Allwmake                              |   3 +-
 .../mesh/generation/snappyHexMesh/Make/options     |   1 -
 .../mesh/manipulation/renumberMesh/Allwmake        |  13 +-
 .../mesh/manipulation/renumberMesh/Make/options    |   1 -
 .../postProcessing/graphics/PV3Readers/Allwmake    |   2 +
 .../postProcessing/graphics/PVReaders/Allwmake     |   2 +
 bin/foamInstallationTest                           |  21 +-
 bin/foamJob                                        |   6 +
 bin/foamMonitor                                    |  11 +-
 bin/paraFoam                                       |   5 +
 bin/tools/RunFunctions                             |  22 +-
 etc/bashrc                                         |  83 +++++--
 etc/config.sh/mac/CGAL                             |  69 ++++++
 etc/config.sh/mac/functions                        | 133 +++++++++++
 etc/config.sh/mac/metis                            |  44 ++++
 etc/config.sh/mac/paraview                         |  16 ++
 etc/config.sh/mac/scotch                           |  47 ++++
 etc/config.sh/mpi                                  |   6 +-
 etc/config.sh/settings                             |  16 +-
 src/Allwmake                                       |   3 +-
 src/OSspecific/POSIX/POSIX.C                       |  42 ++++
 src/OSspecific/POSIX/clockTime/clockTime.H         |   3 +
 src/OSspecific/POSIX/printStack.C                  |  72 +++++-
 src/OSspecific/POSIX/signals/sigFpe.C              |  90 +++++++-
 src/OSspecific/POSIX/signals/sigFpe.H              |  14 +-
 src/OpenFOAM/Make/files                            |   6 +
 src/OpenFOAM/db/IOobject/IOobjectI.H               |   5 +-
 src/OpenFOAM/db/IOstreams/IOstreams.H              |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.C    |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.H    |   4 +
 src/OpenFOAM/primitives/Scalar/doubleFloat.H       |  15 ++
 src/OpenFOAM/primitives/ints/int/int.H             |   8 +
 src/OpenFOAM/primitives/ints/long/long.C           |  50 +++++
 src/OpenFOAM/primitives/ints/long/long.H           | 138 ++++++++++++
 src/OpenFOAM/primitives/ints/long/longIO.C         | 104 +++++++++
 src/OpenFOAM/primitives/ints/ulong/ulong.C         |  52 +++++
 src/OpenFOAM/primitives/ints/ulong/ulong.H         | 138 ++++++++++++
 src/OpenFOAM/primitives/ints/ulong/ulongIO.C       | 101 +++++++++
 src/fvAgglomerationMethods/Allwmake                |   9 +-
 .../MGridGenGamgAgglomeration/Make/options         |  16 +-
 src/parallel/decompose/Allwmake                    |   4 +-
 src/parallel/decompose/metisDecomp/Allwmake        |  12 +-
 src/parallel/decompose/metisDecomp/Make/options    |   1 -
 src/parallel/decompose/ptscotchDecomp/Make/options |  10 +-
 src/parallel/decompose/scotchDecomp/Make/options   |   9 +-
 src/renumber/SloanRenumber/Make/options            |  14 +-
 wmake/makefiles/apps                               |   7 +-
 wmake/makefiles/files                              |  14 +-
 wmake/makefiles/general                            |  76 +++----
 wmake/rules/General/CGAL                           |   9 +-
 wmake/rules/General/X                              |   2 +
 wmake/rules/General/bison                          |  16 +-
 wmake/rules/General/btyacc                         |   9 +-
 wmake/rules/General/btyacc++                       |   9 +-
 wmake/rules/General/byacc                          |   9 +-
 wmake/rules/General/flex                           |   6 +-
 wmake/rules/General/flex++                         |   6 +-
 wmake/rules/General/general                        |  38 ++--
 wmake/rules/General/moc                            |   6 +-
 wmake/rules/General/mplib                          |   2 +
 wmake/rules/General/mplibMPICH                     |   2 +
 wmake/rules/General/mplibMPICH-GM                  |   2 +
 wmake/rules/General/mplibOPENMPI                   |   1 +
 wmake/rules/General/mplibQSMPI                     |   2 +
 wmake/rules/General/mplibSGIMPI                    |   2 +
 wmake/rules/General/mplibSYSTEMMPI                 |   2 +
 wmake/rules/General/mplibSYSTEMOPENMPI             |   2 +
 wmake/rules/General/standard                       |   4 +-
 wmake/rules/General/transform                      |  30 +--
 wmake/rules/General/version                        |  14 +-
 wmake/rules/General/yacc                           |  16 +-
 wmake/rules/darwin64Clang/c                        |  23 ++
 wmake/rules/darwin64Clang/c++                      |  35 +++
 wmake/rules/darwin64Clang/c++Debug                 |   4 +
 wmake/rules/darwin64Clang/c++Opt                   |   5 +
 wmake/rules/darwin64Clang/c++Prof                  |   4 +
 wmake/rules/darwin64Clang/cDebug                   |   4 +
 wmake/rules/darwin64Clang/cOpt                     |   4 +
 wmake/rules/darwin64Clang/cProf                    |   4 +
 wmake/rules/darwin64Clang/general                  |  12 +
 wmake/rules/linux64Clang/c                         |   2 +
 wmake/rules/linux64Clang/c++                       |   6 +-
 wmake/rules/linux64Clang/c++Debug                  |   2 +
 wmake/rules/linux64Clang/c++Opt                    |   2 +
 wmake/rules/linux64Clang/c++Prof                   |   2 +
 wmake/rules/linux64Clang/cDebug                    |   2 +
 wmake/rules/linux64Clang/cOpt                      |   2 +
 wmake/rules/linux64Clang/cProf                     |   2 +
 wmake/rules/linux64Clang/general                   |   2 +
 wmake/rules/linux64Clang/mplibHPMPI                |   2 +
 wmake/rules/linux64Clang/mplibINTELMPI             |   2 +
 wmake/rules/linux64Gcc/c                           |   2 +
 wmake/rules/linux64Gcc/c++                         |   4 +-
 wmake/rules/linux64Gcc/c++Debug                    |   2 +
 wmake/rules/linux64Gcc/c++Opt                      |   2 +
 wmake/rules/linux64Gcc/c++Prof                     |   2 +
 wmake/rules/linux64Gcc/cDebug                      |   2 +
 wmake/rules/linux64Gcc/cOpt                        |   2 +
 wmake/rules/linux64Gcc/cProf                       |   2 +
 wmake/rules/linux64Gcc/general                     |   2 +
 wmake/rules/linux64Gcc/mplibHPMPI                  |   2 +
 wmake/rules/linux64Gcc/mplibINTELMPI               |   2 +
 wmake/rules/linux64GccKNL/c++                      |   2 +-
 wmake/rules/linux64Icc/c++                         |   4 +-
 wmake/rules/linux64IccKNL/c++                      |   2 +-
 wmake/rules/linux64IccKNL/c++Opt                   |   2 +-
 wmake/rules/linuxARM7Gcc/c++                       |   2 +-
 wmake/rules/linuxClang/c++                         |   6 +-
 wmake/rules/linuxGcc/c++                           |   2 +-
 wmake/rules/linuxIA64Gcc/c++                       |   2 +-
 wmake/rules/linuxIA64Icc/c++                       |   2 +-
 wmake/rules/linuxIcc/c++                           |   4 +-
 wmake/rules/linuxPPC64Gcc/c++                      |   2 +-
 wmake/rules/linuxPPC64leGcc/c++                    |   2 +-
 wmake/rules/solaris64Gcc/c++                       |   2 +-
 wmake/rules/solarisGcc/c++                         |   2 +-
 wmake/scripts/AllwmakeParseArguments               | 153 ++++++++-----
 wmake/scripts/wmakeFunctions                       |  57 +----
 wmake/src/Makefile                                 |  20 +-
 wmake/src/wmkdep.l                                 |  16 +-
 wmake/wclean                                       |  36 ++-
 wmake/wcleanLnIncludeAll                           |  26 +--
 wmake/wmake                                        | 248 ++++++++-------------
 wmake/wmakeCheckPwd                                |   4 +-
 wmake/wmakeCollect                                 | 172 --------------
 wmake/wmakeLnInclude                               |  52 +++--
 wmake/wmakeLnIncludeAll                            | 100 ++-------
 wmake/wmakePrintBuild                              |   5 +-
 wmake/wrmdep                                       |  23 +-
 131 files changed, 1977 insertions(+), 838 deletions(-)

diff --git a/.gitignore b/.gitignore
index 92f3a658f..ca52d92ee 100644
--- a/.gitignore
+++ b/.gitignore
@@ -37,6 +37,7 @@ linux*Gcc*/
 linux*Icc*/
 solaris*Gcc*/
 SunOS*Gcc*/
+darwin*Clang*/
 platforms/
 
 # Reinstate wmake/rules that might look like build directories
diff --git a/Allwmake b/Allwmake
index 3f6a7523d..b165ebafd 100755
--- a/Allwmake
+++ b/Allwmake
@@ -12,11 +12,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 # Compile wmake support applications
 (cd wmake/src && make)
@@ -26,7 +27,8 @@ if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
     $WM_THIRD_PARTY_DIR/Allwmake
 else
-    echo "Allwmake: no ThirdParty directory found - skipping"
+	[ "$(uname -s)" = "Darwin" ] \
+		|| echo "Allwmake: no ThirdParty directory found - skipping"
 fi
 
 # Compile OpenFOAM libraries and applications
diff --git a/applications/Allwmake b/applications/Allwmake
index 2b725832b..f44d76664 100755
--- a/applications/Allwmake
+++ b/applications/Allwmake
@@ -12,11 +12,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR/applications" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 wmake -all $targetType solvers
 wmake -all $targetType utilities
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
index b50c6396e..0fa291c8e 100644
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/snappyHexMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
index ee135cc37..dd9948097 100755
--- a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
@@ -7,19 +7,24 @@ cd ${0%/*} || exit 1    # Run from this directory
 export COMPILE_FLAGS=''
 export LINK_FLAGS=''
 
-if [ -f "${FOAM_LIBBIN}/libSloanRenumber.so" ]
+_soExt=so
+[ "$(uname -s)" = "Darwin" ] && _soExt=dylib
+
+if [ -f "${FOAM_LIBBIN}/libSloanRenumber.$_soExt" ]
 then
-    echo "Found libSloanRenumber.so  --  enabling Sloan renumbering support."
+    echo "Found libSloanRenumber.$soExt  --  enabling Sloan renumbering support."
     export LINK_FLAGS="${LINK_FLAGS} -lSloanRenumber"
 fi
 
-if [ -f "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.so" ]
+if [ -f "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.$_soExt" ]
 then
-    echo "Found libzoltanRenumber.so  --  enabling zoltan renumbering support."
+    echo "Found libzoltanRenumber.$_soExt  --  enabling zoltan renumbering support."
     export COMPILE_FLAGS="-DFOAM_USE_ZOLTAN"
     export LINK_FLAGS="${LINK_FLAGS} -lzoltanRenumber -L${ZOLTAN_ARCH_PATH}/lib -lzoltan"
 fi
 
 wmake $targetType
 
+unset _soExt
+
 #------------------------------------------------------------------------------
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Make/options b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
index ef0651050..720011d74 100644
--- a/applications/utilities/mesh/manipulation/renumberMesh/Make/options
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     ${COMPILE_FLAGS} \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
diff --git a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
index 5567103c5..ae0701fe7 100755
--- a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
@@ -4,6 +4,8 @@ cd ${0%/*} || exit 1    # Run from this directory
 # Parse arguments for library compilation
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
+[ "$(uname -s)" = "Darwin" ] && exit 0
+
 case "$ParaView_VERSION" in
 3*)
     if [ -d "$ParaView_DIR" -a -r "$ParaView_DIR" ]
diff --git a/applications/utilities/postProcessing/graphics/PVReaders/Allwmake b/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
index c32dbb6fe..4d790f9d0 100755
--- a/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
@@ -4,6 +4,8 @@ cd ${0%/*} || exit 1    # Run from this directory
 # Parse arguments for library compilation
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
+[ "$(uname -s)" = "Darwin" ] && exit 0
+
 case "$ParaView_VERSION" in
 4* | 5*)
     if [ -d "$ParaView_DIR" -a -r "$ParaView_DIR" ]
diff --git a/bin/foamInstallationTest b/bin/foamInstallationTest
index 17b285a5a..f11e61e4f 100755
--- a/bin/foamInstallationTest
+++ b/bin/foamInstallationTest
@@ -306,13 +306,23 @@ reportExecutable()
         VERSION=`$APP_PATH --version | head -1`
         ;;
     tar)
-        VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
-        ;;
+		case "$OSTYPE" in
+		Darwin)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f2`
+			;;
+		*)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
+			;;
+		esac
+		;;
     gzip)
         case "$OSTYPE" in
         SunOS)
             VERSION=`$1 --version 2>&1 | grep gzip | cut -d" " -f2`
             ;;
+		Darwin)
+            VERSION=`$1 --version 2>&1`
+			;;
         *)
             VERSION=`$1 --version | head -1 | cut -d" " -f2`
             ;;
@@ -341,6 +351,7 @@ reportExecutable()
 checkOpenFOAMEnvironment()
 {
     [ -d "$WM_PROJECT_INST_DIR" ] && [ -d "$WM_THIRD_PARTY_DIR" ] || {
+		[ "$(uname -s)" = "Darwin" ] && return 0
         echo ""
         echo "FATAL ERROR: OpenFOAM environment not configured."
         echo ""
@@ -388,7 +399,7 @@ checkHostName()
 checkOS()
 {
     case "$OSTYPE" in
-    Linux | LinuxAMD64 | SunOS )
+    Linux | LinuxAMD64 | SunOS | Darwin )
         echo "`fixlen OS: $WIDTH` $OSTYPE version $(uname -r)"
         ;;
     *)
@@ -429,7 +440,7 @@ echo "$COL1 $COL2 $COL3      $COL5"
 hline
 reportEnv '$WM_PROJECT_INST_DIR' 'noPath' "yes"
 reportEnv '$WM_PROJECT_USER_DIR' 'noPath' "no"
-reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
+[ "$(uname -s)" = "Darwin" ] || reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
 hline
 
 #------------------------------------------------------------------------------
@@ -468,7 +479,7 @@ reportExecutable flex
 reportExecutable "$WM_CC"
 reportExecutable "$WM_CXX"
 reportExecutable gzip
-if [ "$OSTYPE" = Linux ]
+if [ "$OSTYPE" = Linux -o "$OSTYPE" = "Darwin" ]
 then
     reportExecutable tar
 else
diff --git a/bin/foamJob b/bin/foamJob
index 6646e5dd8..2dff30b80 100755
--- a/bin/foamJob
+++ b/bin/foamJob
@@ -277,6 +277,12 @@ then
     fi
 
 else
+	# Check if we are on El Capitan
+    if test "$(uname -s)" = "Darwin" && \
+        { test "$(uname -r | cut -d. -f1)" -gt 15; }
+    then
+        APPLICATION="foamExec $APPLICATION"
+    fi
     #
     # Run (on single processor)
     #
diff --git a/bin/foamMonitor b/bin/foamMonitor
index 8ae19858b..b7b8d1ef0 100755
--- a/bin/foamMonitor
+++ b/bin/foamMonitor
@@ -57,7 +57,12 @@ USAGE
 
 plotFileHeader() {
     cat<<EOF
-set term x11 1 font "helvetica,17" linewidth 1.5 persist noraise
+if (strstrt(GPVAL_TERMINALS, 'wxt')) {
+    selected_terminal = 'wxt'
+} else {
+    selected_terminal = 'x11'
+}
+set term selected_terminal 1 font "helvetica,17" linewidth 1.5 persist noraise
 $LOGSCALE
 $YRANGE
 set title "Data Monitoring"
@@ -82,6 +87,8 @@ LOGSCALE=""
 YRANGE=""
 GNUPLOT=$(which gnuplot)
 ! [ "x$GNUPLOT" = "x" ] || usage "Gnuplot not installed"
+STAT="stat --format=%Y"
+[ "$(uname -s)" = "Darwin" ] && STAT="stat -f %m"
 
 # parse options
 while [ "$#" -gt 0 ]
@@ -169,7 +176,7 @@ PID=$!
 
 while true
 do
-    MODTIME=$(stat --format=%Y $FILE)
+    MODTIME=$($STAT $FILE)
     IDLEAGO=$(expr $(date +%s) - $IDLE)
     test "$MODTIME" -gt "$IDLEAGO" || break
     sleep $REFRESH
diff --git a/bin/paraFoam b/bin/paraFoam
index 84b82ecdb..e965e6970 100755
--- a/bin/paraFoam
+++ b/bin/paraFoam
@@ -72,6 +72,11 @@ extension=OpenFOAM
 
 requirePV=1
 
+[ "$(uname -s)" = "Darwin" ] && {
+extension=foam
+requirePV=0
+}
+
 # Parse options
 while [ "$#" -gt 0 ]
 do
diff --git a/bin/tools/RunFunctions b/bin/tools/RunFunctions
index ed101f97d..769ee9462 100644
--- a/bin/tools/RunFunctions
+++ b/bin/tools/RunFunctions
@@ -28,6 +28,18 @@
 #     Miscellaneous functions for running tutorial cases
 #------------------------------------------------------------------------------
 
+isSIPEnabled()
+{
+    $(which -s csrutil) && {
+    [ $(csrutil status | awk '{print $5}' | tr -d ".") = "enabled" ] \
+        && return 0
+    }
+    return 1
+}
+
+# Workaround for cleared DYLD_LIBRARY_PATH
+[ "$(uname -s)" = "Darwin" ] && [ isSIPEnabled ] && . $WM_PROJECT_DIR/etc/bashrc
+
 isTest()
 {
     for i in "$@"; do
@@ -46,7 +58,9 @@ getNumberOfProcessors()
 
 getApplication()
 {
-    sed -ne 's/^ *application\s*\([a-zA-Z]*\)\s*;.*$/\1/p' system/controlDict
+    grep application system/controlDict \
+        | awk '{print $2}' \
+        | tr -d ";"
 }
 
 runApplication()
@@ -64,7 +78,7 @@ runApplication()
                 LOG_IGNORE=true
                 LOG_APPEND=true
                 ;;
-            -overwrite|-o)
+            -overwrite|-o|-f)
                 LOG_IGNORE=true
                 ;;
             -suffix|-s)
@@ -111,7 +125,7 @@ runParallel()
                 LOG_IGNORE=true
                 LOG_APPEND=true
                 ;;
-            -overwrite|-o)
+            -overwrite|-o|-f)
                 LOG_IGNORE=true
                 ;;
             -suffix|-s)
@@ -168,4 +182,4 @@ cloneCase()
     fi
 }
 
-#------------------------------------------------------------------------------
+# vim: set ft=sh et sw=4 ts=4 sts=4:
diff --git a/etc/bashrc b/etc/bashrc
index 6ab6418c9..a530c8d72 100644
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -113,9 +113,22 @@ foamOldDirs="$WM_PROJECT_DIR $WM_THIRD_PARTY_DIR \
 export WM_PROJECT_INST_DIR=$FOAM_INST_DIR
 export WM_PROJECT_DIR=$WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION
 
+# Check if we are building OpenFOAM on OS X
+_foamOnOSX ()
+{
+    # For portability we do not rely on $?
+    if [ "$(uname -s)" = "Darwin" ]
+    then
+        return 0
+    else
+        return 1
+    fi
+}
+
 # Location of third-party software
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
+_foamOnOSX || \
+	export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
 
 # Location of site-specific templates etc
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -135,6 +148,9 @@ export WM_PROJECT_USER_DIR=$HOME/$WM_PROJECT/$USER-$WM_PROJECT_VERSION
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 . $WM_PROJECT_DIR/etc/config.sh/functions
 
+# Additional function for OS X
+_foamOnOSX && . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
 # Add in preset user or site preferences:
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile prefs.sh`
 
@@ -148,17 +164,30 @@ _foamEval $@
 foamClean=$WM_PROJECT_DIR/bin/foamCleanPath
 
 #- Clean PATH
-cleaned=`$foamClean "$PATH" "$foamOldDirs"` && PATH="$cleaned"
+cleaned=$($foamClean "$PATH" "$foamOldDirs") && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
-    && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+	cleaned=$($foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs") \
+		&& DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=$($foamClean "$LD_LIBRARY_PATH" "$foamOldDirs") \
+        && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH
-cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
+cleaned=$($foamClean "$MANPATH" "$foamOldDirs") && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
 
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 # Source project setup files
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -169,13 +198,24 @@ _foamSource $WM_PROJECT_DIR/etc/config.sh/aliases
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mpi`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools`
+if _foamOnOSX
+then
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mac/paraview`
+else
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools`
+fi
+
 
 if [ ! -z "$FOAMY_HEX_MESH" ]
 then
-    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL`
+    if _foamOnOSX
+    then
+        _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mac/CGAL`
+    else
+        _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL`
+    fi
 fi
 
 
@@ -184,13 +224,26 @@ fi
 #- Clean PATH
 cleaned=`$foamClean "$PATH"` && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+    cleaned=`$foamClean "$DYLD_LIBRARY_PATH"` && DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH (trailing ':' to find system pages)
 cleaned=`$foamClean "$MANPATH"`: && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
+
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 #- Clean LD_PRELOAD
 if [ -n "$LD_PRELOAD" ]
@@ -209,4 +262,6 @@ unset cleaned foamClean foamOldDirs
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 . $WM_PROJECT_DIR/etc/config.sh/functions
 
+_foamOnOSX && . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
 #------------------------------------------------------------------------------
diff --git a/etc/config.sh/mac/CGAL b/etc/config.sh/mac/CGAL
new file mode 100644
index 000000000..3e5304369
--- /dev/null
+++ b/etc/config.sh/mac/CGAL
@@ -0,0 +1,69 @@
+# CGAL configuration for OS X
+
+if [ -n "$SOURCE_CGAL_VERSIONS_ONLY" ]
+then
+    . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+    if [ "x$(_foamBrew)" = "xY" ]
+    then
+        _prefix=$(_foamBrewPrefix)
+        boost_version="boost-$(_foamGetPackageVersion boost)"
+        export BOOST_ARCH_PATH="$_prefix/opt/boost"
+        unset _prefix
+    elif [ "x$(_foamPort)" = "xY" ]
+    then
+        _prefix=$(_foamPortPrefix)
+        boost_version=$(_foamGetPackageVersion boost)
+        export BOOST_ARCH_PATH="$_prefix"
+        unset _prefix
+    else
+        boost_version=boost-unknown
+        export BOOST_ARCH_PATH=/usr/local
+    fi
+    unset boost_version
+    . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+else
+    if [ "x$(_foamBrew)" = "xY" ]
+    then
+        _prefix=$(_foamBrewPrefix)
+
+        boost_version="boost-$(_foamGetPackageVersion boost)"
+        cgal_version="CGAL-$(_foamGetPackageVersion cgal)"
+
+        export BOOST_ARCH_PATH="$_prefix/opt/boost"
+        export CGAL_ARCH_PATH="$_prefix/opt/cgal"
+        export GMP_ARCH_PATH="$_prefix/opt/gmp"
+        export MPFR_ARCH_PATH="$_prefix/opt/mpfr"
+
+        unset _prefix
+    elif [ "x$(_foamPort)" = "xY" ]
+    then
+        _prefix=$(_foamPortPrefix)
+
+        boost_version=$(_foamGetPackageVersion boost)
+        cgal_version=$(_foamGetPackageVersion cgal)
+
+        export BOOST_ARCH_PATH="$_prefix"
+        export CGAL_ARCH_PATH="$_prefix"
+        export GMP_ARCH_PATH="$_prefix"
+        export MPFR_ARCH_PATH="$_prefix"
+
+        unset _prefix
+    else
+        boost_version=boost-unknown
+        cgal_version=CGAL-unknown
+
+        export BOOST_ARCH_PATH=/usr/local
+        export CGAL_ARCH_PATH=/usr/local
+    fi
+
+    if [ "$FOAM_VERBOSE" -a "$PS1" ]
+    then
+        echo "Using CGAL and boost" 1>&2
+        echo "    $cgal_version at $CGAL_ARCH_PATH" 1>&2
+        echo "    $boost_version at $BOOST_ARCH_PATH" 1>&2
+    fi
+    unset boost_version cgal_version
+fi
+
+
+# vim: set ft=sh:
diff --git a/etc/config.sh/mac/functions b/etc/config.sh/mac/functions
new file mode 100644
index 000000000..e5e70e700
--- /dev/null
+++ b/etc/config.sh/mac/functions
@@ -0,0 +1,133 @@
+# Additional functions for OS X
+
+if [ -z "$WM_BASH_FUNCTIONS_MAC" ]
+then
+    WM_BASH_FUNCTIONS_MAC=loaded
+
+    # Prefix to DYLD_LIBRARY_PATH
+    _foamAddLib ()
+    {
+        while [ $# -ge 1 ]
+        do
+            export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
+            shift
+        done
+    }
+
+    _foamBrew ()
+    {
+        if $(which -s brew)
+        then
+            echo Y
+            return 0
+        else
+            echo N
+            return 1
+        fi
+    }
+
+    _foamPort ()
+    {
+        if $(which -s port)
+        then
+            echo Y
+            return 0
+        else
+            echo N
+            return 1
+        fi
+    }
+
+    _foamPortPrefix ()
+    {
+        echo "$(dirname $(dirname $(which port)))"
+    }
+
+    _foamBrewPrefix ()
+    {
+        echo $(brew --prefix)
+    }
+
+    _foamGetPackageVersion ()
+    {
+        local version="?"
+        local ret=0
+        local pkg="$1"
+
+        if [ "x$(_foamBrew)" = "xY" ]
+        then
+            local prefix="$(_foamBrewPrefix)"
+            if [ -d "$prefix/opt/$pkg" ]
+            then
+                version="$(basename $(readlink "$prefix/opt/$pkg"))"
+            elif [ -d "$prefix/opt/${pkg}64" ]
+            then
+                version="$(basename $(readlink "$prefix/opt/${pkg}64"))"
+            else
+                ret=1
+            fi
+        elif [ "x$(_foamPort)" = "xY" ]
+        then
+            version="0.0.x"
+        else
+            ret=1
+        fi
+        echo $version
+        return $ret
+    }
+
+    _foamGetPackageArchPath ()
+    {
+        local arch_path="/usr/local"
+        local ret=0
+        local pkg="$1"
+        if [ "x$(_foamBrew)" = "xY" ]
+        then
+            local prefix="$(_foamBrewPrefix)"
+            if [ -d "$prefix/opt/$pkg" ]
+            then
+                arch_path="$prefix/opt/$pkg"
+            elif [ -d "$prefix/opt/${pkg}64" ]
+            then
+                arch_path="$prefix/opt/${pkg}64"
+            else
+                ret=1
+            fi
+        elif [ "x$(_foamPort)" = "xY" ]
+        then
+            arch_path="$(_foamPortPrefix)"
+        else
+            ret=1
+        fi
+        echo $arch_path
+        return $ret
+    }
+
+    _foamIncreaseMaxOpenFiles ()
+    {
+        # Default value
+        local lim=4096
+
+        # Reset if parameter passed
+        [ -n "$1" ] && lim="$1"
+
+        # Silencing the errors
+        local current_limit=$(ulimit -n)
+        if [ "$current_limit" = "unlimited" ]
+        then
+            return 0
+        elif [ "$current_limit" -lt "$lim" ]
+        then
+            ulimit -n "$lim" > /dev/null 2>&1
+            return 0
+        fi
+        return 0
+    }
+else
+    unset WM_BASH_FUNCTIONS_MAC
+    unset _foamAddLib _foamBrew _foamPort _foamPortPrefix _foamBrewPrefix \
+        _foamGetPackageVersion _foamGetPackageArchPath \
+        _foamIncreaseMaxOpenFiles
+fi
+
+# vim: set ft=sh:
diff --git a/etc/config.sh/mac/metis b/etc/config.sh/mac/metis
new file mode 100644
index 000000000..bb87346f7
--- /dev/null
+++ b/etc/config.sh/mac/metis
@@ -0,0 +1,44 @@
+#----------------------------------*-sh-*--------------------------------------
+# =========                 |
+# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+#  \\    /   O peration     |
+#   \\  /    A nd           | Copyright (C) 2013-2016 OpenFOAM Foundation
+#    \\/     M anipulation  |
+#------------------------------------------------------------------------------
+# License
+#     This file is part of OpenFOAM.
+#
+#     OpenFOAM is free software: you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by
+#     the Free Software Foundation, either version 3 of the License, or
+#     (at your option) any later version.
+#
+#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+#     for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+#
+# File
+#     etc/config.sh/metis
+#
+# Description
+#     Setup file for metis include/libraries.
+#     Sourced during wmake process only.
+#
+# Note
+#     A csh version is not needed, since the values here are only sourced
+#     during the wmake process
+#
+#------------------------------------------------------------------------------
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+export METIS_VERSION=$(_foamGetPackageVersion metis)
+export METIS_ARCH_PATH=$(_foamGetPackageArchPath metis)
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+#------------------------------------------------------------------------------
diff --git a/etc/config.sh/mac/paraview b/etc/config.sh/mac/paraview
new file mode 100644
index 000000000..fe379b349
--- /dev/null
+++ b/etc/config.sh/mac/paraview
@@ -0,0 +1,16 @@
+if [ -d /Applications/Paraview*.app ];
+then
+    [ "$FOAM_VERBOSE" -a "$PS1" ] && echo Using /Applications/Paraview*.app
+
+    paraview () {
+        /Applications/Paraview*.app/Contents/MacOS/paraview "$@"
+    }
+
+    export -f paraview
+else
+    echo
+    echo "Please download binary Paraview release from"
+    echo "http://paraview.org and install it in /Applications"
+    echo "folder."
+    echo
+fi
diff --git a/etc/config.sh/mac/scotch b/etc/config.sh/mac/scotch
new file mode 100644
index 000000000..e62931c9b
--- /dev/null
+++ b/etc/config.sh/mac/scotch
@@ -0,0 +1,47 @@
+#----------------------------------*-sh-*--------------------------------------
+# =========                 |
+# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+#  \\    /   O peration     |
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
+#    \\/     M anipulation  |
+#------------------------------------------------------------------------------
+# License
+#     This file is part of OpenFOAM.
+#
+#     OpenFOAM is free software: you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by
+#     the Free Software Foundation, either version 3 of the License, or
+#     (at your option) any later version.
+#
+#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+#     for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+#
+# File
+#     etc/config.sh/scotch
+#
+# Description
+#     Setup file for scotch include/libraries.
+#     Sourced during wmake process only.
+#
+# Note
+#     A csh version is not needed, since the values here are only sourced
+#     during the wmake process
+#
+#     If Scotch is to be entirely disabled, either rename this file or create
+#     an empty one with the same name at a user or site location.
+#
+#------------------------------------------------------------------------------
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+export SCOTCH_VERSION=$(_foamGetPackageVersion scotch)
+export SCOTCH_ARCH_PATH=$(_foamGetPackageArchPath scotch)
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+#------------------------------------------------------------------------------
diff --git a/etc/config.sh/mpi b/etc/config.sh/mpi
index 9a5c7775c..afaef0a91 100644
--- a/etc/config.sh/mpi
+++ b/etc/config.sh/mpi
@@ -49,7 +49,7 @@ SYSTEMOPENMPI)
     # include files and libraries.
     export MPI_ARCH_PATH="${libDir%/*}"
 
-    _foamAddLib     $libDir
+    _foamOnOSX || _foamAddLib     $libDir
     unset libDir
     ;;
 
@@ -66,8 +66,8 @@ OPENMPI)
     _foamAddPath    $MPI_ARCH_PATH/bin
 
     # 64-bit on OpenSuSE 12.1 uses lib64 others use lib
-    _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
-    _foamAddLib     $MPI_ARCH_PATH/lib
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib
 
     _foamAddMan     $MPI_ARCH_PATH/share/man
     ;;
diff --git a/etc/config.sh/settings b/etc/config.sh/settings
index 64d675d6d..75e6a7374 100644
--- a/etc/config.sh/settings
+++ b/etc/config.sh/settings
@@ -127,6 +127,13 @@ SunOS)
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+    WM_ARCH=darwin64
+    export WM_COMPILER_LIB_ARCH=64
+    export WM_CC='clang'
+    export WM_CXX='clang++'
+    ;;
+
 *)    # An unsupported operating system
     /bin/cat <<USAGE 1>&2
 
@@ -199,7 +206,12 @@ unset siteDir
 
 _foamAddPath $FOAM_USER_APPBIN:$FOAM_SITE_APPBIN:$FOAM_APPBIN
 # Make sure to pick up dummy versions of external libraries last
-_foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+if [ -n "$FOAM_EXT_LIBBIN" ]
+then
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+else
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_LIBBIN/dummy
+fi
 
 # Compiler settings
 # ~~~~~~~~~~~~~~~~~
@@ -292,4 +304,6 @@ system)
     ;;
 esac
 
+_foamOnOSX && _foamIncreaseMaxOpenFiles 4096
+
 #------------------------------------------------------------------------------
diff --git a/src/Allwmake b/src/Allwmake
index 0e0ef5692..17a32a910 100755
--- a/src/Allwmake
+++ b/src/Allwmake
@@ -12,11 +12,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 # Update OpenFOAM version strings if required
 wmakePrintBuild -check || wrmo OpenFOAM/global/global.o 2>/dev/null
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
index 52305ec98..9392e6157 100644
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,11 @@ Description
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <mach-o/dyld.h>
+#else
 #include <link.h>
+#endif
 
 #include <netinet/in.h>
 
@@ -528,9 +532,15 @@ double Foam::highResLastModified(const fileName& name)
     fileStat fileStatus(name);
     if (fileStatus.isValid())
     {
+#if defined(darwin64)
+        return
+            fileStatus.status().st_mtime
+          + 1e-9*fileStatus.status().st_atimespec.tv_nsec;
+#else
         return
             fileStatus.status().st_mtime
           + 1e-9*fileStatus.status().st_atim.tv_nsec;
+#endif
     }
     else
     {
@@ -1047,6 +1057,20 @@ void* Foam::dlOpen(const fileName& lib, const bool check)
             << " : dlopen of " << lib << std::endl;
     }
     void* handle = ::dlopen(lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+#if defined(darwin64)
+    if (!handle && lib.ext() == "so")
+    {
+        fileName fallback_lib = lib.lessExt() + ".dylib";
+        if (check)
+        {
+            WarningIn("dlOpen(const fileName&, const bool)")
+                << "dlOpen: using fallback library name "
+                << fallback_lib
+                << endl;
+        }
+        handle = ::dlopen(fallback_lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+    }
+#endif
 
     if (!handle && check)
     {
@@ -1133,7 +1157,24 @@ bool Foam::dlSymFound(void* handle, const std::string& symbol)
     }
 }
 
+#if defined(darwin64)
+Foam::fileNameList Foam::dlLoaded()
+{
+    DynamicList<fileName> libs;
+    for(uint32_t cnt = 0; cnt < _dyld_image_count(); ++cnt)
+    {
+	libs.append(_dyld_get_image_name(cnt));
+    }
 
+    if (POSIX::debug)
+    {
+        std::cout
+            << "dlLoaded()"
+            << " : determined loaded libraries :" << libs.size() << std::endl;
+    }
+    return libs;
+}
+#else
 static int collectLibsCallback
 (
     struct dl_phdr_info *info,
@@ -1160,6 +1201,7 @@ Foam::fileNameList Foam::dlLoaded()
     }
     return libs;
 }
+#endif
 
 
 void Foam::osRandomSeed(const label seed)
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
index 8708ba94b..65f046c18 100644
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@ SourceFiles
 #define clockTime_H
 
 #include <sys/types.h>
+#if defined(darwin64)
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
index 660f82dae..aaf94dea0 100644
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -27,11 +27,17 @@ License
 #include "OStringStream.H"
 #include "OSspecific.H"
 #include "IFstream.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#endif
 
 #include <inttypes.h>
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <regex.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -100,6 +106,7 @@ void printSourceFileAndLine
     uintptr_t address = uintptr_t(addr);
     word myAddress = addressToWord(address);
 
+#if ! defined(darwin64)
     if (filename.ext() == "so")
     {
         // Convert address into offset into dynamic library
@@ -107,32 +114,79 @@ void printSourceFileAndLine
         intptr_t relativeAddress = address - offset;
         myAddress = addressToWord(relativeAddress);
     }
+#endif
 
     if (filename[0] == '/')
     {
         string line = pOpen
         (
+#if ! defined(darwin64)
             "addr2line -f --demangle=auto --exe "
           + filename
           + " "
           + myAddress,
             1
+#else
+            "echo 'image lookup -a "
+          + myAddress
+          + " "
+          + filename
+          + "'"
+          + " | xcrun lldb "
+          + "-O 'target create --no-dependents -a x86_64 "
+          + filename
+          + "' -o '"
+          + "target modules load -f "
+          + filename
+          + " __TEXT "
+          + addressToWord(reinterpret_cast<const uintptr_t>(info->dli_fbase))
+          + "' 2> /dev/null"
+          + " | tail -1"
+#endif
         );
 
-        if (line == "")
+#if defined(darwin64)
         {
-            os  << " addr2line failed";
+            const char *buf = line.c_str();
+            regex_t re;
+            regmatch_t mt[3];
+            int st;
+
+            regcomp(&re, ".\\+at \\(.\\+\\):\\(\\d\\+\\)", REG_ENHANCED);
+            st = regexec(&re, buf, 3, mt, 0);
+
+            if (st == REG_NOMATCH)
+            {
+                line = "??:0";
+            }
+            else
+            {
+                size_t len = mt[1].rm_eo - mt[1].rm_so;
+                string fname(buf + mt[1].rm_so, len);
+                len = mt[2].rm_eo - mt[2].rm_so;
+                string lnum(buf + mt[2].rm_so, len);
+                line = fname + ":" + lnum;
+            }
+            regfree(&re);
         }
-        else if (line == "??:0")
+#endif
+
+        if (line == "")
         {
-            os  << " in " << filename;
+            os  << " addr2line failed";
         }
         else
         {
+            word location_preposition = " at ";
+            if (line == "??:0")
+            {
+                line = filename;
+                location_preposition = " in ";
+            }
             string cwdLine(line.replaceAll(cwd() + '/', ""));
             string homeLine(cwdLine.replaceAll(home(), '~'));
 
-            os  << " at " << homeLine.c_str();
+            os  << location_preposition << homeLine.c_str();
         }
     }
 }
@@ -156,9 +210,9 @@ fileName absolutePath(const char* fn)
 }
 
 
-word demangleSymbol(const char* sn)
+string demangleSymbol(const char* sn)
 {
-    word res;
+    string res;
     int st;
     char* cxx_sname = abi::__cxa_demangle
     (
@@ -170,12 +224,12 @@ word demangleSymbol(const char* sn)
 
     if (st == 0 && cxx_sname)
     {
-        res = word(cxx_sname);
+        res = string(cxx_sname);
         free(cxx_sname);
     }
     else
     {
-        res = word(sn);
+        res = string(sn);
     }
 
     return res;
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
index 848510361..a47e01959 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -39,6 +39,13 @@ License
     #include <sigfpe.h>
 #endif
 
+#if defined(darwin64)
+#include <xmmintrin.h>
+#include <malloc/malloc.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#endif
+
 #include <limits>
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
@@ -52,6 +59,30 @@ void Foam::sigFpe::fillNan(UList<scalar>& lst)
 
 bool Foam::sigFpe::mallocNanActive_ = false;
 
+#if defined(darwin64)
+void *(*Foam::sigFpe::oldMalloc_)(struct _malloc_zone_t *zone, size_t size)
+	= NULL;
+
+void *Foam::sigFpe::nanMalloc_(struct _malloc_zone_t *zone, size_t size)
+{
+    void *result;
+
+    result = oldMalloc_(zone, size);
+
+    if (mallocNanActive_)
+    {
+        UList<scalar> lst
+        (
+            reinterpret_cast<scalar*>(result),
+            size/sizeof(scalar)
+        );
+        fillNan(lst);
+    }
+
+    return result;
+}
+#endif
+
 
 #ifdef LINUX
 extern "C"
@@ -86,11 +117,15 @@ void* Foam::sigFpe::mallocNan(size_t size)
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(darwin64)
 void Foam::sigFpe::sigHandler(int)
 {
     // Reset old handling
+#if defined(darwin64)
+    if (sigaction(SIGFPE, nullptr, nullptr) < 0)
+#else
     if (sigaction(SIGFPE, &oldAction_, nullptr) < 0)
+#endif
     {
         FatalErrorInFunction
             << "Cannot reset SIGFPE trapping"
@@ -139,10 +174,24 @@ Foam::sigFpe::~sigFpe()
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX) || defined(darwin64)
         // Disable initialization to NaN
         mallocNanActive_ = false;
         #endif
+
+        #if defined(darwin64)
+        // Restoring old malloc handler
+        if (oldMalloc_ != NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+
+            if (zone != NULL)
+            {
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE);
+                zone->malloc = oldMalloc_;
+                mprotect(zone, getpagesize(), PROT_READ);
+            }
+        }
+        #endif
     }
 }
 
@@ -162,21 +211,31 @@ void Foam::sigFpe::set(const bool verbose)
     {
         bool supported = false;
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         supported = true;
 
+        #if defined(LINUX_GNUC)
         feenableexcept
         (
             FE_DIVBYZERO
           | FE_INVALID
           | FE_OVERFLOW
         );
+        #endif  // LINUX_GNUC
+        #if defined(darwin64)
+        _mm_setcsr(_MM_MASK_MASK &~
+                   (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO));
+        #endif
 
         struct sigaction newAction;
         newAction.sa_handler = sigHandler;
         newAction.sa_flags = SA_NODEFER;
         sigemptyset(&newAction.sa_mask);
+        #if defined(darwin64)
+        if (sigaction(SIGFPE, &newAction, NULL) < 0)
+        #else
         if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+        #endif
         {
             FatalErrorInFunction
                 << "Cannot set SIGFPE trapping"
@@ -226,10 +285,33 @@ void Foam::sigFpe::set(const bool verbose)
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX)
         mallocNanActive_ = true;
         #endif
 
+        #if defined(darwin64)
+        malloc_zone_t *zone = malloc_default_zone();
+
+        if (zone != NULL)
+        {
+            oldMalloc_ = zone->malloc;
+            if
+            (
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE) == 0
+            )
+            {
+                zone->malloc = nanMalloc_;
+                if
+                (
+                    mprotect(zone, getpagesize(), PROT_READ) == 0
+                )
+                {
+                    mallocNanActive_ = true;
+                }
+            }
+        }
+        #endif
+
         if (verbose)
         {
             if (mallocNanActive_)
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
index 14dbcaeb8..4b603273b 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -54,6 +54,10 @@ SourceFiles
     #define LINUX_GNUC
 #endif
 
+#if defined(__APPLE__)
+#include <malloc/malloc.h>
+#endif
+
 #include "UList.H"
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
@@ -72,10 +76,16 @@ class sigFpe
         //- Saved old signal trapping setting
         static struct sigaction oldAction_;
 
+#if defined(darwin64)
+        static void *(*oldMalloc_)(struct _malloc_zone_t *zone, size_t size);
+
+        static void *nanMalloc_(struct _malloc_zone_t *zone, size_t size);
+#endif
+
 
     // Static data members
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         //- Handler for caught signals
         static void sigHandler(int);
         #endif
@@ -103,7 +113,7 @@ public:
         //- Flag to indicate mallocNan is enabled
         static bool mallocNanActive_;
 
-        #ifdef LINUX
+        #if defined(LINUX)
         //- Malloc function which initializes to NaN
         static void* mallocNan(size_t size);
         #endif
diff --git a/src/OpenFOAM/Make/files b/src/OpenFOAM/Make/files
index 116f890db..e209c8062 100644
--- a/src/OpenFOAM/Make/files
+++ b/src/OpenFOAM/Make/files
@@ -33,6 +33,12 @@ $(ints)/label/label.C
 $(ints)/uLabel/uLabel.C
 $(ints)/lists/labelIOList.C
 $(ints)/lists/labelListIOList.C
+#if defined(__APPLE__) && defined(__clang__)
+$(ints)/long/long.C
+$(ints)/long/longIO.C
+$(ints)/ulong/ulong.C
+$(ints)/ulong/ulongIO.C
+#endif
 
 primitives/Scalar/doubleScalar/doubleScalar.C
 primitives/Scalar/floatScalar/floatScalar.C
diff --git a/src/OpenFOAM/db/IOobject/IOobjectI.H b/src/OpenFOAM/db/IOobject/IOobjectI.H
index ed831092a..a57f4b893 100644
--- a/src/OpenFOAM/db/IOobject/IOobjectI.H
+++ b/src/OpenFOAM/db/IOobject/IOobjectI.H
@@ -108,11 +108,12 @@ template<class Stream>
 inline Stream& Foam::IOobject::writeEndDivider(Stream& os)
 {
     os  << "\n\n"
-        "// *****************************************"
-        "******************************** //\n";
+        "// ***************** vim: set ft=foam et sw=4 ts=4 sts=4: "
+        "****************** //\n";
 
     return os;
 }
 
 
+
 // ************************************************************************* //
diff --git a/src/OpenFOAM/db/IOstreams/IOstreams.H b/src/OpenFOAM/db/IOstreams/IOstreams.H
index 438133dcd..64b7f9f45 100644
--- a/src/OpenFOAM/db/IOstreams/IOstreams.H
+++ b/src/OpenFOAM/db/IOstreams/IOstreams.H
@@ -41,6 +41,10 @@ Description
 #include "char.H"
 #include "int.H"
 #include "uint.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#include "long.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 // Global predefined streams for standard input, output
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
index 1537c8c4c..e978428ac 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -317,7 +317,11 @@ Foam::fileName Foam::dynamicCode::codeRelPath() const
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
+#if defined(darwin64)
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
     return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+#endif
 }
 
 
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
index 852ba6d9d..cecf678c4 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
@@ -221,7 +221,11 @@ public:
         //  Corresponds to codeRoot()/libSubDir()/lib\<codeName\>.so
         fileName libPath() const
         {
+#if defined(darwin64)
+            return codeRoot_/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
             return codeRoot_/libSubDir_/"lib" + codeName_ + ".so";
+#endif
         }
 
         //- Path for specified code name relative to \$FOAM_CASE
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
index 57373e0b2..b5605863e 100644
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,15 @@ License
 
 #include <cmath>
 
+#if defined(darwin64)
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -87,6 +96,12 @@ MAXMINPOW(float, float, int)
 MAXMINPOW(float, int, float)
 MAXMINPOW(float, float, long)
 MAXMINPOW(float, long, float)
+#if defined(darwin64) && defined(__clang__) && WM_LABEL_SIZE == 64
+MAXMINPOW(double, int64_t, double)
+MAXMINPOW(float, int64_t, float)
+MAXMINPOW(double, double, int64_t)
+MAXMINPOW(float, float, int64_t)
+#endif
 
 #undef MAXMINPOW
 
diff --git a/src/OpenFOAM/primitives/ints/int/int.H b/src/OpenFOAM/primitives/ints/int/int.H
index a3ab4b5ac..84940bd70 100644
--- a/src/OpenFOAM/primitives/ints/int/int.H
+++ b/src/OpenFOAM/primitives/ints/int/int.H
@@ -37,6 +37,10 @@ SourceFiles
 
 #include "int32.H"
 #include "int64.H"
+#if defined(darwin64) && defined(__clang__)
+#include "long.H"
+#include "ulong.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -63,6 +67,10 @@ MAXMIN(int32_t, int32_t, int32_t)
 MAXMIN(int64_t, int64_t, int32_t)
 MAXMIN(int64_t, int32_t, int64_t)
 MAXMIN(int64_t, int64_t, int64_t)
+#if defined(darwin64) && defined(__clang__)
+MAXMIN(long, long, long)
+MAXMIN(unsigned long, unsigned long, unsigned long)
+#endif
 
 
 // * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
diff --git a/src/OpenFOAM/primitives/ints/long/long.C b/src/OpenFOAM/primitives/ints/long/long.C
new file mode 100644
index 000000000..e7b78c3d1
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.C
@@ -0,0 +1,50 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "long.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const long Foam::pTraits<long>::zero = 0;
+const long Foam::pTraits<long>::one = 1;
+const long Foam::pTraits<long>::min = LONG_MIN;
+const long Foam::pTraits<long>::max = LONG_MAX;
+const long Foam::pTraits<long>::rootMin = pTraits<long>::min;
+const long Foam::pTraits<long>::rootMax = pTraits<long>::max;
+
+const char* Foam::pTraits<long>::componentNames[] = { "x" };
+
+Foam::pTraits<long>::pTraits(const long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/long.H b/src/OpenFOAM/primitives/ints/long/long.H
new file mode 100644
index 000000000..f8a3146b9
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    long
+
+Description
+    long integer
+
+SourceFiles
+    long.C
+    longIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef long_H
+#define long_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef LONG_MIN
+#define LONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an long
+word name(const long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+long readLong(Istream&);
+bool read(const char*, long&);
+Istream& operator>>(Istream&, long&);
+Ostream& operator<<(Ostream&, const long);
+
+//- Template specialization for pTraits<long>
+template<>
+class pTraits<long>
+{
+    long p_;
+
+public:
+
+    //- Component type
+    typedef long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of int64_t is 0
+            nComponents = 1  //!< Number of components in int64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const long zero;
+        static const long one;
+        static const long min;
+        static const long max;
+        static const long rootMax;
+        static const long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the long value
+        operator long() const
+        {
+            return p_;
+        }
+
+        //- Access to the long value
+        operator long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/longIO.C b/src/OpenFOAM/primitives/ints/long/longIO.C
new file mode 100644
index 000000000..9ee12352d
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/longIO.C
@@ -0,0 +1,104 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "long.H"
+#include "IOstreams.H"
+
+#include <inttypes.h>
+#include <sstream>
+#include <cerrno>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = long(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, long&)", is)
+            << "wrong token type - expected long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, long&)");
+
+    return is;
+}
+
+
+long Foam::readLong(Istream& is)
+{
+    long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, long& s)
+{
+    char *endptr = NULL;
+    errno = 0;
+    s = strtol(buf, &endptr, 10);
+    return (*endptr == 0) && (errno == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.C b/src/OpenFOAM/primitives/ints/ulong/ulong.C
new file mode 100644
index 000000000..afcedbdf2
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.C
@@ -0,0 +1,52 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "ulong.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const unsigned long Foam::pTraits<unsigned long>::zero = 0;
+const unsigned long Foam::pTraits<unsigned long>::one = 1;
+const unsigned long Foam::pTraits<unsigned long>::min = ULONG_MIN;
+const unsigned long Foam::pTraits<unsigned long>::max = ULONG_MAX;
+const unsigned long Foam::pTraits<unsigned long>::rootMin =
+    pTraits<unsigned long>::min;
+const unsigned long Foam::pTraits<unsigned long>::rootMax =
+    pTraits<unsigned long>::max;
+
+const char* Foam::pTraits<unsigned long>::componentNames[] = { "x" };
+
+Foam::pTraits<unsigned long>::pTraits(const unsigned long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<unsigned long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.H b/src/OpenFOAM/primitives/ints/ulong/ulong.H
new file mode 100644
index 000000000..95b21b2bf
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    unisgned long
+
+Description
+    unsigned long integer
+
+SourceFiles
+    ulong.C
+    ulongIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef ulong_H
+#define ulong_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef ULONG_MIN
+#define ULONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an unsigned long
+word name(const unsigned long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+unsigned long readUlong(Istream&);
+bool read(const char*, unsigned long&);
+Istream& operator>>(Istream&, unsigned long&);
+Ostream& operator<<(Ostream&, const unsigned long);
+
+//- Template specialization for pTraits<unsigned long>
+template<>
+class pTraits<unsigned long>
+{
+    unsigned long p_;
+
+public:
+
+    //- Component type
+    typedef unsigned long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of uint64_t is 0
+            nComponents = 1  //!< Number of components in uint64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const unsigned long zero;
+        static const unsigned long one;
+        static const unsigned long min;
+        static const unsigned long max;
+        static const unsigned long rootMax;
+        static const unsigned long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const unsigned long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the uint64_t value
+        operator unsigned long() const
+        {
+            return p_;
+        }
+
+        //- Access to the uint value
+        operator unsigned long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulongIO.C b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
new file mode 100644
index 000000000..aa62c6110
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
@@ -0,0 +1,101 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "ulong.H"
+#include "IOstreams.H"
+
+#include <sstream>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const unsigned long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, unsigned long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = static_cast<unsigned long>(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, unsigned long&)", is)
+            << "wrong token type - expected unsigned long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, unsigned long&)");
+
+    return is;
+}
+
+
+unsigned long Foam::readUlong(Istream& is)
+{
+    unsigned long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, unsigned long& s)
+{
+    char *endptr = NULL;
+    s = strtoul(buf, &endptr, 10);
+    return (*endptr == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const unsigned long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const unsigned long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/fvAgglomerationMethods/Allwmake b/src/fvAgglomerationMethods/Allwmake
index dcef4328c..64e2b3dbd 100755
--- a/src/fvAgglomerationMethods/Allwmake
+++ b/src/fvAgglomerationMethods/Allwmake
@@ -6,9 +6,14 @@ cd ${0%/*} || exit 1    # Run from this directory
 
 export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
 
-if [ -e "$FOAM_LIBBIN/libMGridGen.so" ]
+if [ "$(uname -s)" = "Darwin" ]
 then
-    wmake $targetType MGridGenGamgAgglomeration
+	[ -e "/usr/local/opt/parmgridgen/lib/libmgrid.a" \
+		-a "$WM_LABEL_SIZE" -ne "64" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
+else
+	[ -e "$FOAM_LIBBIN/libMGridGen.so" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
 fi
 
 wmake $targetType pairPatchAgglomeration
diff --git a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
index a58b65fb7..a135bafea 100644
--- a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
+++ b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
@@ -7,9 +7,17 @@ TYPE_REAL=-DTYPE_REAL
 
 EXE_INC = \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
-    -I$(ParMGridGen)/MGridGen/Lib/lnInclude \
-    -I$(ParMGridGen)/MGridGen/IMlib/lnInclude \
     $(TYPE_REAL)
 
-LIB_LIBS = \
-    -L$(FOAM_EXT_LIBBIN) -lMGridGen
+LIB_LIBS =
+
+ifeq ($(shell uname -s),Darwin)
+    LIB_LIBS = -L/usr/local/opt/parmgridgen/lib -lmgrid
+    EXE_INC += -I/usr/local/opt/parmgridgen/include
+else
+	LIB_LIBS = -L$(FOAM_EXT_LIBBIN) -lMGridGen
+    EXE_INC += -I$(ParMGridGen)/MGridGen/Lib/lnInclude
+    EXE_INC += -I$(ParMGridGen)/MGridGen/IMlib/lnInclude
+endif
+
+/* vim:set ft=make sw=4 ts=4 et: */
diff --git a/src/parallel/decompose/Allwmake b/src/parallel/decompose/Allwmake
index 20a3d4dfc..f3ffb364c 100755
--- a/src/parallel/decompose/Allwmake
+++ b/src/parallel/decompose/Allwmake
@@ -6,7 +6,9 @@ cd ${0%/*} || exit 1    # Run from this directory
 
 
 # Get SCOTCH_VERSION, SCOTCH_ARCH_PATH
-if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config.sh/scotch`
+_scotchConf="config.sh/scotch"
+[ "$(uname -s)" = "Darwin" ] && _scotchConf="config.sh/mac/scotch"
+if settings=`$WM_PROJECT_DIR/bin/foamEtcFile "$_scotchConf"`
 then
     . $settings
     echo "    using SCOTCH_ARCH_PATH=$SCOTCH_ARCH_PATH"
diff --git a/src/parallel/decompose/metisDecomp/Allwmake b/src/parallel/decompose/metisDecomp/Allwmake
index c52b1e52a..1792444a7 100755
--- a/src/parallel/decompose/metisDecomp/Allwmake
+++ b/src/parallel/decompose/metisDecomp/Allwmake
@@ -4,12 +4,19 @@ cd ${0%/*} || exit 1    # Run from this directory
 # Parse arguments for library compilation
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
+_soExt="so"
+_metisConf="config.sh/metis"
+[ "$(uname -s)" = "Darwin" ] && {
+_soExt="dylib"
+_metisConf="config.sh/mac/metis"
+}
+
 # get METIS_VERSION, METIS_ARCH_PATH
-if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config.sh/metis`
+if settings=`$WM_PROJECT_DIR/bin/foamEtcFile "$_metisConf"`
 then
     . $settings
     echo "    using METIS_ARCH_PATH=$METIS_ARCH_PATH"
-    if [ -r $METIS_ARCH_PATH/lib/libmetis.so ]
+    if [ -r $METIS_ARCH_PATH/lib/libmetis.$_soExt ]
     then
         wmake $targetType
     fi
@@ -19,5 +26,6 @@ else
     echo
 fi
 
+unset _soExt _metisConf
 
 #------------------------------------------------------------------------------
diff --git a/src/parallel/decompose/metisDecomp/Make/options b/src/parallel/decompose/metisDecomp/Make/options
index 8acd678fd..d4dfa96ba 100644
--- a/src/parallel/decompose/metisDecomp/Make/options
+++ b/src/parallel/decompose/metisDecomp/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(METIS_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
index cb407ec6b..92c68814d 100644
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -3,15 +3,15 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ARCH_PATH)/include/$(FOAM_MPI) \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
     -L$(SCOTCH_ARCH_PATH)/lib \
-    -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) \
     -lptscotch \
     -lptscotcherrexit \
-    -lscotch \
-    -lrt
+    -lscotch
+
+ifneq ("$(shell uname -s)","Darwin")
+LIB_LIBS += -lrt
+endif
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
index d2cc77069..4627d4905 100644
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -8,12 +8,13 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 EXE_INC = \
     $(PFLAGS) $(PINC) \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
     -L$(SCOTCH_ARCH_PATH)/lib \
-    -L$(FOAM_EXT_LIBBIN) \
     -lscotch \
-    -lscotcherrexit \
-    -lrt
+    -lscotcherrexit
+
+ifneq ("$(shell uname -s)","Darwin")
+LIB_LIBS += -lrt
+endif
diff --git a/src/renumber/SloanRenumber/Make/options b/src/renumber/SloanRenumber/Make/options
index cf6e54861..e3b7efff8 100644
--- a/src/renumber/SloanRenumber/Make/options
+++ b/src/renumber/SloanRenumber/Make/options
@@ -5,7 +5,19 @@ EXE_INC = \
     -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(BOOST_ARCH_PATH)/lib -lboost_system \
+    -L$(BOOST_ARCH_PATH)/lib \
     -lmeshTools \
     -ldecompositionMethods \
     -lrenumberMethods
+
+ifeq ("$(shell uname -s)","Darwin")
+SO = dylib
+else
+SO = so
+endif
+
+ifneq ("$(wildcard $(BOOST_ARCH_PATH)/lib/libboost_system-mt.$(SO))","")
+LIB_LIBS += -lboost_system-mt
+else
+LIB_LIBS += -lboost_system
+endif
diff --git a/wmake/makefiles/apps b/wmake/makefiles/apps
index d871a2a83..38837a3a3 100644
--- a/wmake/makefiles/apps
+++ b/wmake/makefiles/apps
@@ -1,8 +1,8 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -38,5 +38,4 @@ application: $(FOAM_APPS)
 $(FOAM_APPS):
 	+@wmake -all $(TARGET) $@
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/makefiles/files b/wmake/makefiles/files
index 21b43c719..bd121240d 100644
--- a/wmake/makefiles/files
+++ b/wmake/makefiles/files
@@ -1,4 +1,4 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
@@ -59,19 +59,19 @@ $(OPTIONS) : $(MAKE_DIR)/options
 $(SFILES): $(MAKE_DIR)/files
 	@$(CPP) $(GFLAGS) $(MAKE_DIR)/files | sed -e 's@   *@ @g' > $(FILES)
 	# Find all macro definitions in the files
-	@grep "=" $(FILES) > $(VARS)
+	@grep --colour=never "=" $(FILES) > $(VARS)
 	echo "SOURCE = " > $(SFILES)
 	# Remove all macro definitions from the files list
-	@grep -v "=" $(FILES) >> $(SFILES)
+	@grep --colour=never -v "=" $(FILES) >> $(SFILES)
 	@rm -f $(FILES)
 	# Add a newline to files to ensure the last line is followed by a newline
 	@echo "" >> $(SFILES)
 	# Remove commented lines, blank lines, and trailing blanks from files
-	@sed -i -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
+	@sed -i~ -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
 	# Add backslashes
-	@sed -i -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@sed -i~ -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@rm $(SFILES)~
 
 $(VARS): $(SFILES)
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/makefiles/general b/wmake/makefiles/general
index c4085123a..767b6a57f 100644
--- a/wmake/makefiles/general
+++ b/wmake/makefiles/general
@@ -1,4 +1,4 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
@@ -80,7 +80,11 @@ LIB_LIBS        =
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(shell uname -s),Darwin)
+SO		= dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
@@ -88,7 +92,6 @@ EXE             = $(WM_PROJECT).out
 # Standalone executable
 SEXE            = a.out
 
-
 #------------------------------------------------------------------------------
 # Set compilation and dependency building rules
 #------------------------------------------------------------------------------
@@ -100,7 +103,7 @@ include $(GENERAL_RULES)/general
 #------------------------------------------------------------------------------
 # Include PROJECT directory tree file and
 # source, object and dependency list files.
-# These are constructed by makefiles/files
+# These are constructed by MakefileFiles
 #------------------------------------------------------------------------------
 
 include $(OBJECTS_DIR)/options
@@ -128,67 +131,56 @@ LIB_HEADER_DIRS = \
 # Define link statements for executables
 #------------------------------------------------------------------------------
 
-.PHONY: all
-all: $(EXE)
-	@:
-
-.PHONY: silent
-silent:
-	@:
-
 $(EXE): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(EXE)
-	$(call QUIET_MESSAGE,ld,$(EXE))
-	$E $(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
-	    $(LINK_LIBS) $(GLIBS) -o $(EXE)
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
+		$(LINK_LIBS) $(GLIBS) -o $(EXE)
 
-.PHONY: exe
-exe: $(SEXE) | silent
+exe:    $(SEXE)
+	$(call WM_REPORT,$(SEXE))
 
-$(SEXE): $(OBJECTS)
+$(SEXE):$(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(SEXE)
-	$(call QUIET_MESSAGE,ld,$(SEXE))
-	$E $(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
-	    $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
-
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
+		$(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
 
 #------------------------------------------------------------------------------
 # Define link statements for libraries
 #------------------------------------------------------------------------------
 
-.PHONY: objects
-objects: $(OBJECTS) | silent
+objects: $(OBJECTS)
 
-.PHONY: libso
-libso: $(LIB).$(SO) | silent
+libso:  $(LIB).$(SO)
+	$(call WM_REPORT,$(LIB).$(SO))
 
 $(LIB).$(SO): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
-	$(call QUIET_MESSAGE,ld,$(LIB).$(SO))
-	$E $(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).$(SO)))
+	$(AT)$(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
 
-.PHONY: lib
-lib: $(LIB).a | silent
+lib:    $(LIB).a
+	$(call WM_REPORT,$(LIB).a)
 
 $(LIB).a: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).a
-	$(call QUIET_MESSAGE,ar,$(LIB))
-	$E $(AR) $(ARFLAGS) $(LIB).a $(OBJECTS)
-	$(call QUIET_MESSAGE,ranlib,$(notdir $(LIB)))
-	$E $(RANLIB) $(LIB).a
+	$(call WM_MESSAGE,AR,$(notdir $(LIB)))
+	$(AT)$(AR) $(ARFLAGS) $(notdir $(LIB)).a $(OBJECTS)
+	$(call WM_MESSAGE,RANLIB,$(notdir $(LIB)))
+	$(AT)$(RANLIB) $(LIB).a
 
-.PHONY: libo
-libo: $(LIB).o | silent
+libo:   $(LIB).o
+	$(call WM_REPORT,$(LIB).o)
 
 $(LIB).o: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).o
-	$(call QUIET_MESSAGE,ld,$(LIB).o)
-	$E $(LD) -r -o $(LIB).o $(OBJECTS)
-
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).o))
+	$(AT)$(LD) -r -o $(LIB).o $(OBJECTS)
 
 #------------------------------------------------------------------------------
 # Set rule to create the include directory for libraries
@@ -202,7 +194,7 @@ lnInclude: $(MAKE_DIR)/files $(MAKE_DIR)/options
 # Declare all object files depend on $(OBJECTS_DIR)/options
 #------------------------------------------------------------------------------
 
-$(OBJECTS): $(OBJECTS_DIR)/options
+$(OBJECTS) : $(OBJECTS_DIR)/options
 $(foreach S,$(SOURCE),$(eval $(OBJECTS_DIR)/$(basename $S).o : $(OBJECTS_DIR)/$S.dep))
 
 
@@ -220,4 +212,4 @@ ifeq ($(findstring lnInclude,$(MAKECMDGOALS))$(findstring updatedep,$(MAKECMDGOA
 endif
 
 
-#----------------------------- vim: set ft=make: ------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/CGAL b/wmake/rules/General/CGAL
index 8097684ee..16425295f 100644
--- a/wmake/rules/General/CGAL
+++ b/wmake/rules/General/CGAL
@@ -2,13 +2,14 @@ CGAL_INC = \
     -I$(CGAL_ARCH_PATH)/include \
     -I$(MPFR_ARCH_PATH)/include \
     -I$(GMP_ARCH_PATH)/include \
-    -I$(BOOST_ARCH_PATH)/include \
-    -I/usr/include
+    -I$(BOOST_ARCH_PATH)/include
 
 CGAL_LIBS = \
-    -L$(MPFR_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) \
-    -L$(GMP_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) \
+    -L$(MPFR_ARCH_PATH)/lib \
+    -L$(GMP_ARCH_PATH)/lib \
     -L$(BOOST_ARCH_PATH)/lib \
     -L$(CGAL_ARCH_PATH)/lib \
     -lCGAL \
     -lmpfr
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/X b/wmake/rules/General/X
index f55fa8b32..01e1df850 100644
--- a/wmake/rules/General/X
+++ b/wmake/rules/General/X
@@ -3,3 +3,5 @@
 XFLAGS     =
 XINC       = $(XFLAGS) -I/usr/include/X11
 XLIBS      = -lXext -lX11
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/bison b/wmake/rules/General/bison
index 590996c95..dce8a189c 100644
--- a/wmake/rules/General/bison
+++ b/wmake/rules/General/bison
@@ -1,13 +1,9 @@
 SUFFIXES += .y .Y
 
-ytoo = $E $(call QUIET_MESSAGE,bison,$(<F)) \
-    $(WM_SCHEDULER) bison -v -d -y $< $(AND) \
-    mv y.tab.c $(@D)/$(<F).c $(AND) \
-    mv y.tab.h $(@D)/$(<F).h $(AND) \
-    $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+ytoo = $(call WM_MESSAGE,yy,$<); $(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/$(<F).h ; \
+     $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
 
-Ytoo = $E $(call QUIET_MESSAGE,bison,$(<F)) \
-    $(WM_SCHEDULER) bison -v -d -y $< $(AND) \
-    mv y.tab.c $(@D)/$(<F).C $(AND) \
-    mv y.tab.h $(@D)/$(<F).H $(AND) \
-    $(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+Ytoo = $(call WM_MESSAGE,YY,$<); $(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
+     $(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc b/wmake/rules/General/btyacc
index b8b26e002..7c2922bee 100644
--- a/wmake/rules/General/btyacc
+++ b/wmake/rules/General/btyacc
@@ -1,7 +1,6 @@
 SUFFIXES += .y
 
-ytoo = $E $(call QUIET_MESSAGE,btyacc,$(<F)) \
-    $(WM_SCHEDULER) btyacc -v -d $(SKELETON) $< $(AND) \
-    mv y_tab.c $(@D)/$(<F).C $(AND) \
-    mv y_tab.h $(@D)/$(<F).H $(AND) \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+ytoo = $(call WM_MESSAGE,yy,$<); $(AT)btyacc -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
+     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc++ b/wmake/rules/General/btyacc++
index fdbbf7845..de7550ad5 100644
--- a/wmake/rules/General/btyacc++
+++ b/wmake/rules/General/btyacc++
@@ -1,7 +1,6 @@
 SUFFIXES += .Y
 
-Ytoo = $E $(call QUIET_MESSAGE,btyacc++,$(<F)) \
-    $(WM_SCHEDULER) btyacc++ -v -d $(SKELETON) $< $(AND) \
-    mv y_tab.c $(@D)/$(<F).C $(AND) \
-    mv y_tab.h $(@D)/$(<F).H $(AND) \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+Ytoo = $(call WM_MESSAGE,YY,$<); $(AT)btyacc++ -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
+     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/byacc b/wmake/rules/General/byacc
index 093d28745..803b7bac5 100644
--- a/wmake/rules/General/byacc
+++ b/wmake/rules/General/byacc
@@ -1,7 +1,6 @@
 SUFFIXES += .y
 
-ytoo = $E $(call QUIET_MESSAGE,byacc,$(<F)) \
-    $(WM_SCHEDULER) byacc -v $(YYPREFIX) -d $< $(AND) \
-    mv y.tab.c $(@D)/$(<F).C $(AND) \
-    mv y.tab.h $(@D)/$(<F).H $(AND) \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+ytoo = $(call WM_MESSAGE,yy,$<); $(AT)byacc -v $(YYPREFIX) -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
+     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex b/wmake/rules/General/flex
index 4029b97b1..a910e7924 100644
--- a/wmake/rules/General/flex
+++ b/wmake/rules/General/flex
@@ -1,5 +1,5 @@
 SUFFIXES += .l
 
-ltoo = $E $(call QUIET_MESSAGE,flex,$(<F)) \
-    $(WM_SCHEDULER) flex -o $(@D)/$(<F).c $< $(AND) \
-    $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+ltoo = $(call WM_MESSAGE,ll,$<); $(AT)flex -o $(@D)/$(<F).c $< ; $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex++ b/wmake/rules/General/flex++
index dcea7ec72..128a6bb81 100644
--- a/wmake/rules/General/flex++
+++ b/wmake/rules/General/flex++
@@ -1,5 +1,5 @@
 SUFFIXES += .L
 
-Ltoo = $E $(call QUIET_MESSAGE,flex++,$(<F)) \
-    $(WM_SCHEDULER) flex -+ -o$(@D)/$(<F).C -f $< $(AND) \
-    $(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+Ltoo = $(call WM_MESSAGE,LL,$<); flex -+ -o$(@D)/$(<F).C -f $< ; $(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/general b/wmake/rules/General/general
index 8cee0bce3..7d7552f5c 100644
--- a/wmake/rules/General/general
+++ b/wmake/rules/General/general
@@ -1,10 +1,27 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 
-AR         = ar
-ARFLAGS    = cr
-RANLIB     = ranlib
-CPP        = cpp
-LD         = ld
+ifeq ("$(V)","0")
+WM_MESSAGE = @echo "  $1	$2"
+MESSAGE = echo "  $1	$2"
+WM_REPORT = @echo ">> $(notdir $1)"
+AT = @
+else
+MESSAGE = true
+WM_MESSAGE =
+WM_REPORT = @echo \'$1\' is up to date.
+AT =
+endif
+
+XCRUN =
+ifeq ("$(shell uname -s)","Darwin")
+XCRUN = xcrun
+endif
+
+AR         = $(XCRUN) ar
+ARFLAGS    = $(XCRUN) cr
+RANLIB     = $(XCRUN) ranlib
+CPP        = $(XCRUN) cpp
+LD         = $(XCRUN) ld
 
 GFLAGS     = -D$(WM_ARCH) -DWM_ARCH_OPTION=$(WM_ARCH_OPTION) \
              -DWM_$(WM_PRECISION_OPTION) -DWM_LABEL_SIZE=$(WM_LABEL_SIZE)
@@ -18,17 +35,10 @@ DEFAULT_RULES   = $(WM_DIR)/rules/$(WM_ARCH)$(COMPILER_TYPE)
 RULES           = $(WM_DIR)/rules/$(WM_ARCH)$(WM_COMPILER)
 WMAKE_BIN       = $(WM_DIR)/platforms/$(WM_ARCH)$(WM_COMPILER)
 
-ifeq ($(WM_SCHEDULER),)
-    AND = &&
-else
-    AND = '&&'
-endif
-
 include $(DEFAULT_RULES)/general
 include $(DEFAULT_RULES)/$(WM_LINK_LANGUAGE)
 -include $(RULES)/general
 -include $(RULES)/$(WM_LINK_LANGUAGE)
 include $(GENERAL_RULES)/transform
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/moc b/wmake/rules/General/moc
index 1a0d4160c..38ec7e61a 100644
--- a/wmake/rules/General/moc
+++ b/wmake/rules/General/moc
@@ -1,5 +1,5 @@
 SUFFIXES += .qt
 
-qttoo = $E $(call QUIET_MESSAGE,moc,$(<F)) \
-       $(WM_SCHEDULER) $(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C $(AND) \
-       $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+qttoo = $(call WM_MESSAGE,MOC,$<); $(AT)$(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C ; $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplib b/wmake/rules/General/mplib
index 294bd8615..8ccb07f1c 100644
--- a/wmake/rules/General/mplib
+++ b/wmake/rules/General/mplib
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       =
 PLIBS      =
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH b/wmake/rules/General/mplibMPICH
index 611641afb..9bf21ec32 100644
--- a/wmake/rules/General/mplibMPICH
+++ b/wmake/rules/General/mplibMPICH
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -lrt
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH-GM b/wmake/rules/General/mplibMPICH-GM
index 1921318a0..6c569ec52 100644
--- a/wmake/rules/General/mplibMPICH-GM
+++ b/wmake/rules/General/mplibMPICH-GM
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -L$(GM_LIB_PATH) -lgm
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibOPENMPI b/wmake/rules/General/mplibOPENMPI
index f1f889992..216ce5604 100644
--- a/wmake/rules/General/mplibOPENMPI
+++ b/wmake/rules/General/mplibOPENMPI
@@ -1,3 +1,4 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpi
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibQSMPI b/wmake/rules/General/mplibQSMPI
index aa15c1b51..d54766dd1 100644
--- a/wmake/rules/General/mplibQSMPI
+++ b/wmake/rules/General/mplibQSMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSGIMPI b/wmake/rules/General/mplibSGIMPI
index 205b9406c..4fda8eebb 100644
--- a/wmake/rules/General/mplibSGIMPI
+++ b/wmake/rules/General/mplibSGIMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DSGIMPI -DMPI_NO_CPPBIND
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMMPI b/wmake/rules/General/mplibSYSTEMMPI
index a0d3d3098..112530e3c 100644
--- a/wmake/rules/General/mplibSYSTEMMPI
+++ b/wmake/rules/General/mplibSYSTEMMPI
@@ -3,3 +3,5 @@
 PFLAGS     = $(MPI_ARCH_FLAGS)
 PINC       = $(MPI_ARCH_INC)
 PLIBS      = $(MPI_ARCH_LIBS)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMOPENMPI b/wmake/rules/General/mplibSYSTEMOPENMPI
index 639c8ce27..c0854b737 100644
--- a/wmake/rules/General/mplibSYSTEMOPENMPI
+++ b/wmake/rules/General/mplibSYSTEMOPENMPI
@@ -3,3 +3,5 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = $(shell mpicc --showme:compile)
 PLIBS      = $(shell mpicc --showme:link)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/standard b/wmake/rules/General/standard
index 0aa968940..253434530 100644
--- a/wmake/rules/General/standard
+++ b/wmake/rules/General/standard
@@ -1,4 +1,4 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 
 SUFFIXES=
 
@@ -11,4 +11,4 @@ include $(GENERAL_RULES)/bison
 include $(GENERAL_RULES)/moc
 include $(GENERAL_RULES)/X
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/transform b/wmake/rules/General/transform
index 165c4a1f4..5e06256e2 100644
--- a/wmake/rules/General/transform
+++ b/wmake/rules/General/transform
@@ -1,35 +1,17 @@
-#----------------------------*- makefile-gmake -*------------------------------
-
-ifneq ("$(WM_QUIET)","")
-    E=@
-    define QUIET_MESSAGE
-        @echo "    $1: $2";
-    endef
-    define VERBOSE_MESSAGE
-    endef
-else
-    E=
-    define QUIET_MESSAGE
-    endef
-    define VERBOSE_MESSAGE
-        @echo "$1 $2";
-    endef
-endif
+#-------------------------------*- makefile -*---------------------------------
 
 define DEFINE_TRANSFORM
 $(OBJECTS_DIR)/%.o : %$1
-	$(call QUIET_MESSAGE,$(subst .,,$(1))too,$(value <F))
-	$E $$($(subst .,,$(1))too)
+	$(call WM_MESSAGE,CC,$(value <F))
+	$(AT)$$($(subst .,,$(1))too)
 endef
 
 $(foreach s,$(SUFFIXES),$(eval $(call DEFINE_TRANSFORM,$(s))))
 
 $(OBJECTS_DIR)/%.dep : %
-	$(call QUIET_MESSAGE,wmkdep,$(<F))
-	$(call VERBOSE_MESSAGE,Making dependency list for source file,$(<F))
 	@$(WM_SCRIPTS)/makeTargetDir $@
+	$(call WM_MESSAGE,DEP,$(notdir $<))
 	@$(WMAKE_BIN)/wmkdep -I$(*D) $(LIB_HEADER_DIRS) $< | \
-		sed -e 's,^$(WM_PROJECT_DIR)/,$$(WM_PROJECT_DIR)/,' \
-			-e 's,^$(WM_THIRD_PARTY_DIR)/,$$(WM_THIRD_PARTY_DIR)/,' > $@
+	    sed 's,$(WM_PROJECT_DIR),$$(WM_PROJECT_DIR),' > $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/version b/wmake/rules/General/version
index ef3aa5c37..911ab5d4e 100644
--- a/wmake/rules/General/version
+++ b/wmake/rules/General/version
@@ -1,12 +1,12 @@
-#----------------------------*- makefile-gmake -*------------------------------
+#-------------------------------*- makefile -*---------------------------------
 
 SUFFIXES += .Cver
 
 # Update version strings in C++ file and in $WM_PROJECT_DIR/.build file
-Cvertoo = \
-    sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
-        -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
-        $< > $(@D)/$(<F).C; \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+Cvertoo = sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
+	  -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
+	  $< > $(@D)/$(<F).C; \
+	  $(call MESSAGE,CC,$(notdir $(@D)/$(<F).C)); \
+	  $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/yacc b/wmake/rules/General/yacc
index 0daacdbb8..7b6f69977 100644
--- a/wmake/rules/General/yacc
+++ b/wmake/rules/General/yacc
@@ -1,13 +1,9 @@
 SUFFIXES += .y .Y
 
-ytoo = $E $(call QUIET_MESSAGE,yacc,$(<F)) \
-    $(WM_SCHEDULER) yacc -v -d $< $(AND) \
-    mv y.tab.c $(@D)/$(<F).c $(AND) \
-    mv y.tab.h $(@D)/parser.h $(AND) \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
+ytoo = $(call WM_MESSAGE,YY); $(AT)yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/parser.h ; \
+       $(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
 
-Ytoo = $E $(call QUIET_MESSAGE,yacc,$(<F)) \
-    $(WM_SCHEDULER) yacc -v -d $< $(AND) \
-    mv y.tab.c $(@D)/$(<F).C $(AND) \
-    mv y.tab.h $(@D)/parser.H $(AND) \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+Ytoo = $(call WM_MESSAGE,YY); $(AT)yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/parser.H ; \
+       $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c b/wmake/rules/darwin64Clang/c
new file mode 100644
index 000000000..5aeb7e525
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c
@@ -0,0 +1,23 @@
+SUFFIXES += .c
+
+cWARN        = -Wall
+
+cc          = xcrun cc -arch x86_64
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+cFLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(cc) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++ b/wmake/rules/darwin64Clang/c++
new file mode 100644
index 000000000..817522da0
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++
@@ -0,0 +1,35 @@
+SUFFIXES += .C
+SUFFIXES += .cxx
+SUFFIXES += .cc
+SUFFIXES += .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wno-overloaded-virtual \
+              -Wno-unused-variable -Wno-unused-local-typedef -Wno-invalid-offsetof \
+	      -Wno-deprecated-register -Wno-undefined-var-template
+
+c++LESSWARN = -Wno-shift-negative-value
+
+CC          = xcrun c++ -arch x86_64 -std=c++14
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+c++FLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(CC) $(c++FLAGS) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Debug b/wmake/rules/darwin64Clang/c++Debug
new file mode 100644
index 000000000..0ed0af6c0
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Debug
@@ -0,0 +1,4 @@
+c++DBUG    = -g -DFULLDEBUG
+c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Opt b/wmake/rules/darwin64Clang/c++Opt
new file mode 100644
index 000000000..db785436b
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Opt
@@ -0,0 +1,5 @@
+#c++DBUG     = -O0 -DFULLDEBUG -g
+c++DBUG     =
+c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Prof b/wmake/rules/darwin64Clang/c++Prof
new file mode 100644
index 000000000..f86e0d9f9
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Prof
@@ -0,0 +1,4 @@
+c++DBUG    = -gline-tables-only
+c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cDebug b/wmake/rules/darwin64Clang/cDebug
new file mode 100644
index 000000000..d45598959
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cDebug
@@ -0,0 +1,4 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cOpt b/wmake/rules/darwin64Clang/cOpt
new file mode 100644
index 000000000..0c2e03c5e
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cOpt
@@ -0,0 +1,4 @@
+cDBUG       =
+cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cProf b/wmake/rules/darwin64Clang/cProf
new file mode 100644
index 000000000..864f043d5
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cProf
@@ -0,0 +1,4 @@
+cDBUG       = -pg
+cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/general b/wmake/rules/darwin64Clang/general
new file mode 100644
index 000000000..9de78f276
--- /dev/null
+++ b/wmake/rules/darwin64Clang/general
@@ -0,0 +1,12 @@
+CPP        = xcrun cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+OSX_SDK_PATH = $(shell xcrun --show-sdk-path)
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c b/wmake/rules/linux64Clang/c
index b743e3f68..fdaa07204 100644
--- a/wmake/rules/linux64Clang/c
+++ b/wmake/rules/linux64Clang/c
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++ b/wmake/rules/linux64Clang/c++
index 014eff346..4bb059bbc 100644
--- a/wmake/rules/linux64Clang/c++
+++ b/wmake/rules/linux64Clang/c++
@@ -1,11 +1,11 @@
 SUFFIXES += .C
 
-c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-undefined-var-template
+c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-c++11-extensions
 
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-tautological-undefined-compare -Wno-shift-negative-value
 
-CC          = clang++ -std=c++11 -m64
+CC          = clang++ -std=c++0x -m64
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Debug b/wmake/rules/linux64Clang/c++Debug
index 1c63335a3..0ed0af6c0 100644
--- a/wmake/rules/linux64Clang/c++Debug
+++ b/wmake/rules/linux64Clang/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -g -DFULLDEBUG
 c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Opt b/wmake/rules/linux64Clang/c++Opt
index 2aedabd62..a741879a5 100644
--- a/wmake/rules/linux64Clang/c++Opt
+++ b/wmake/rules/linux64Clang/c++Opt
@@ -1,2 +1,4 @@
 c++DBUG     =
 c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Prof b/wmake/rules/linux64Clang/c++Prof
index 3bda4dad5..e2b16ef3b 100644
--- a/wmake/rules/linux64Clang/c++Prof
+++ b/wmake/rules/linux64Clang/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cDebug b/wmake/rules/linux64Clang/cDebug
index 7b7adf10d..d45598959 100644
--- a/wmake/rules/linux64Clang/cDebug
+++ b/wmake/rules/linux64Clang/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -g -DFULLDEBUG
 cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cOpt b/wmake/rules/linux64Clang/cOpt
index 17318709f..0c2e03c5e 100644
--- a/wmake/rules/linux64Clang/cOpt
+++ b/wmake/rules/linux64Clang/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cProf b/wmake/rules/linux64Clang/cProf
index ca3ac9bf5..864f043d5 100644
--- a/wmake/rules/linux64Clang/cProf
+++ b/wmake/rules/linux64Clang/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/general b/wmake/rules/linux64Clang/general
index 1002cb169..6065b1306 100644
--- a/wmake/rules/linux64Clang/general
+++ b/wmake/rules/linux64Clang/general
@@ -6,3 +6,5 @@ include $(GENERAL_RULES)/standard
 
 include $(DEFAULT_RULES)/c
 include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibHPMPI b/wmake/rules/linux64Clang/mplibHPMPI
index d7c4b0cf3..57cba69c4 100644
--- a/wmake/rules/linux64Clang/mplibHPMPI
+++ b/wmake/rules/linux64Clang/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibINTELMPI b/wmake/rules/linux64Clang/mplibINTELMPI
index 278e0b0f2..634628d12 100644
--- a/wmake/rules/linux64Clang/mplibINTELMPI
+++ b/wmake/rules/linux64Clang/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c b/wmake/rules/linux64Gcc/c
index 1097b3a59..6dd2f9ac0 100644
--- a/wmake/rules/linux64Gcc/c
+++ b/wmake/rules/linux64Gcc/c
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++ b/wmake/rules/linux64Gcc/c++
index fd17d5b80..a4a0c0d73 100644
--- a/wmake/rules/linux64Gcc/c++
+++ b/wmake/rules/linux64Gcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11 -m64
+CC          = g++ -std=c++0x -m64
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared -Xlinker --add-needed -Xlinker --no-as-needed
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Xlinker --no-as-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Debug b/wmake/rules/linux64Gcc/c++Debug
index 19bdb9c33..bcc9059e9 100644
--- a/wmake/rules/linux64Gcc/c++Debug
+++ b/wmake/rules/linux64Gcc/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -ggdb3 -DFULLDEBUG
 c++OPT      = -O0 -fdefault-inline
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Opt b/wmake/rules/linux64Gcc/c++Opt
index 599e6aba6..5b0c3960b 100644
--- a/wmake/rules/linux64Gcc/c++Opt
+++ b/wmake/rules/linux64Gcc/c++Opt
@@ -2,3 +2,5 @@ c++DBUG     =
 c++OPT      = -O3
 
 ROUNDING_MATH = -frounding-math
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Prof b/wmake/rules/linux64Gcc/c++Prof
index 3bda4dad5..e2b16ef3b 100644
--- a/wmake/rules/linux64Gcc/c++Prof
+++ b/wmake/rules/linux64Gcc/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cDebug b/wmake/rules/linux64Gcc/cDebug
index 72b638f45..4bd3224bc 100644
--- a/wmake/rules/linux64Gcc/cDebug
+++ b/wmake/rules/linux64Gcc/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -ggdb -DFULLDEBUG
 cOPT        = -O1 -fdefault-inline -finline-functions
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cOpt b/wmake/rules/linux64Gcc/cOpt
index 17318709f..0c2e03c5e 100644
--- a/wmake/rules/linux64Gcc/cOpt
+++ b/wmake/rules/linux64Gcc/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cProf b/wmake/rules/linux64Gcc/cProf
index ca3ac9bf5..864f043d5 100644
--- a/wmake/rules/linux64Gcc/cProf
+++ b/wmake/rules/linux64Gcc/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/general b/wmake/rules/linux64Gcc/general
index 1002cb169..6065b1306 100644
--- a/wmake/rules/linux64Gcc/general
+++ b/wmake/rules/linux64Gcc/general
@@ -6,3 +6,5 @@ include $(GENERAL_RULES)/standard
 
 include $(DEFAULT_RULES)/c
 include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibHPMPI b/wmake/rules/linux64Gcc/mplibHPMPI
index d7c4b0cf3..57cba69c4 100644
--- a/wmake/rules/linux64Gcc/mplibHPMPI
+++ b/wmake/rules/linux64Gcc/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibINTELMPI b/wmake/rules/linux64Gcc/mplibINTELMPI
index 278e0b0f2..634628d12 100644
--- a/wmake/rules/linux64Gcc/mplibINTELMPI
+++ b/wmake/rules/linux64Gcc/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64GccKNL/c++ b/wmake/rules/linux64GccKNL/c++
index 22537b048..ed1ad0de5 100644
--- a/wmake/rules/linux64GccKNL/c++
+++ b/wmake/rules/linux64GccKNL/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11 -m64 -march=knl -DvectorMachine
+CC          = g++ -std=c++0x -m64 -march=knl -DvectorMachine -DKNL
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linux64Icc/c++ b/wmake/rules/linux64Icc/c++
index aed1dbbd9..1cf106e2b 100644
--- a/wmake/rules/linux64Icc/c++
+++ b/wmake/rules/linux64Icc/c++
@@ -1,12 +1,12 @@
 SUFFIXES += .C
 
 c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof \
-              -diag-disable 327,654,1125,2289,2304,11062,11074,11076
+              -diag-disable 654,1125,2304
 
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
-CC          = icpc -std=c++11 -fp-trap=common -fp-model precise
+CC          = icpc -std=c++0x -fp-trap=common -fp-model precise
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linux64IccKNL/c++ b/wmake/rules/linux64IccKNL/c++
index 377d60238..1cef03338 100644
--- a/wmake/rules/linux64IccKNL/c++
+++ b/wmake/rules/linux64IccKNL/c++
@@ -6,7 +6,7 @@ c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invali
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
-CC          = icpc -std=c++11 -xmic-avx512 -DvectorMachine -fp-trap=common -fp-model precise -fp-speculation=safe
+CC          = icpc -std=c++0x -fp-trap=common -fp-model precise -fp-speculation=safe -DKNL
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linux64IccKNL/c++Opt b/wmake/rules/linux64IccKNL/c++Opt
index 2aedabd62..6f6344805 100644
--- a/wmake/rules/linux64IccKNL/c++Opt
+++ b/wmake/rules/linux64IccKNL/c++Opt
@@ -1,2 +1,2 @@
 c++DBUG     =
-c++OPT      = -O3
+c++OPT      = -O3 -DvectorMachine -xmic-avx512
diff --git a/wmake/rules/linuxARM7Gcc/c++ b/wmake/rules/linuxARM7Gcc/c++
index 0a7cc5b7f..80fccf271 100644
--- a/wmake/rules/linuxARM7Gcc/c++
+++ b/wmake/rules/linuxARM7Gcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11
+CC          = g++ -std=c++0x
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxClang/c++ b/wmake/rules/linuxClang/c++
index 746cdb13b..b029fbcfd 100644
--- a/wmake/rules/linuxClang/c++
+++ b/wmake/rules/linuxClang/c++
@@ -1,11 +1,11 @@
 SUFFIXES += .C
 
-c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-undefined-var-template
+c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-c++11-extensions
 
 # Suppress some warnings for flex++ and CGAL
-c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-tautological-undefined-compare -Wno-shift-negative-value
+c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedef -Wno-tautological-undefined-compare -Wno-shift-negative-value
 
-CC          = clang++ -std=c++11 -m32
+CC          = clang++ -std=c++0x -m32
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxGcc/c++ b/wmake/rules/linuxGcc/c++
index 38201d2c5..c1c34a841 100644
--- a/wmake/rules/linuxGcc/c++
+++ b/wmake/rules/linuxGcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11 -m32
+CC          = g++ -std=c++0x -m32
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxIA64Gcc/c++ b/wmake/rules/linuxIA64Gcc/c++
index 2f8c58892..6d152ecd1 100644
--- a/wmake/rules/linuxIA64Gcc/c++
+++ b/wmake/rules/linuxIA64Gcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11
+CC          = g++ -std=c++0x
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxIA64Icc/c++ b/wmake/rules/linuxIA64Icc/c++
index f2f7278db..a8a9341e1 100644
--- a/wmake/rules/linuxIA64Icc/c++
+++ b/wmake/rules/linuxIA64Icc/c++
@@ -6,7 +6,7 @@ c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invali
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
-CC          = icpc -std=c++11
+CC          = icpc -std=c++0x
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxIcc/c++ b/wmake/rules/linuxIcc/c++
index 79f3cf93d..88976144c 100644
--- a/wmake/rules/linuxIcc/c++
+++ b/wmake/rules/linuxIcc/c++
@@ -1,12 +1,12 @@
 SUFFIXES += .C
 
 c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof \
-              -diag-disable 327,654,1125,2289,2304,11062,11074,11076
+              -diag-disable 2304
 
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
-CC          = icpc -std=c++11 -fp-trap=common -fp-model precise
+CC          = icpc -std=c++0x -fp-trap=common -fp-model precise
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxPPC64Gcc/c++ b/wmake/rules/linuxPPC64Gcc/c++
index b32a38f19..7c3307938 100644
--- a/wmake/rules/linuxPPC64Gcc/c++
+++ b/wmake/rules/linuxPPC64Gcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11 -m64 -mcpu=power5+
+CC          = g++ -std=c++0x -m64 -mcpu=power5+
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/linuxPPC64leGcc/c++ b/wmake/rules/linuxPPC64leGcc/c++
index e97ed991a..805f82182 100644
--- a/wmake/rules/linuxPPC64leGcc/c++
+++ b/wmake/rules/linuxPPC64leGcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -std=c++11 -m64 -mcpu=power8
+CC          = g++ -std=c++0x -m64 -mcpu=power8
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/solaris64Gcc/c++ b/wmake/rules/solaris64Gcc/c++
index 20b9a0136..324522f10 100644
--- a/wmake/rules/solaris64Gcc/c++
+++ b/wmake/rules/solaris64Gcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN =
 
-CC          = g++ -std=c++11 -m64
+CC          = g++ -std=c++0x -m64
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/rules/solarisGcc/c++ b/wmake/rules/solarisGcc/c++
index cc4f8fd71..d8e968fb9 100644
--- a/wmake/rules/solarisGcc/c++
+++ b/wmake/rules/solarisGcc/c++
@@ -5,7 +5,7 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN =
 
-CC          = g++ -std=c++11
+CC          = g++ -std=c++0x
 
 include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
diff --git a/wmake/scripts/AllwmakeParseArguments b/wmake/scripts/AllwmakeParseArguments
index 0736876ad..c1722e484 100644
--- a/wmake/scripts/AllwmakeParseArguments
+++ b/wmake/scripts/AllwmakeParseArguments
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2014-2017 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2014-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -28,21 +28,18 @@
 #     Allwmake argument parser
 #
 # Usage
+#     # Declare the targetType and set to default for library building
+#     targetType=libso      # lib, libo or libso
+#
+#     # Declare genDoc and set to default if documentation building is supported
+#     genDoc=0              # 0 or 1
+#
 #     # Parse the arguments by sourcing this script
 #     . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
 
-if [ -z "$WM_PROJECT_DIR" ]
-then
-    echo "$Script error: The OpenFOAM environment is not set."
-    echo "    Check the OpenFOAM entries in your dot-files and source them."
-    echo "    If in doubt, please read:"
-    echo "       http://openfoam.org/download/source/setting-environment"
-    exit 1
-fi
-
 usage() {
     exec 1>&2
     while [ "$#" -ge 1 ]; do echo "$1"; shift; done
@@ -52,68 +49,122 @@ usage() {
 
 Usage: $Script [OPTIONS]
 
-Executing $Script is equivalent to
-
-   wmake -all [OPTIONS]
+options:
+  -h or -help       Print list of Allwmake options
+  -k or -non-stop   Compile without stopping when errors occur
+  -j                Compile using all local cores/hyperthreads
+  -jN or -j N       Compile using N cores/hyperthreads
+  -no-scheduler     Compile without wmakeScheduler
+  -update           Update lnInclude directories, dep files, remove deprecated
+                    files and directories
 USAGE
 
-    wmake -help
+    # Print options for building code documentation
+    test -n "$genDoc" && cat<<USAGE_DOC
+  doc               Compile code documentation (requires Doxygen)
+USAGE_DOC
+
+    # Print options for building libraries
+    test -n "$targetType" && cat<<USAGE_LIB
+  lib               Compile statically linked archive lib (.a)
+  libo              Compile statically linked lib (.o)
+  libso             Compile dynamically linked lib (.so)
+  dep               Compile dependency files
+USAGE_LIB
+
     exit 1
 }
 
 
 #------------------------------------------------------------------------------
-# Parse the arguments and options
+# Set WM_NCOMPPROCS to number of cores on local machine
 #------------------------------------------------------------------------------
 
-fromWmake=
-qOpt=
+setWM_NCOMPPROCS()
+{
+    if [ -r /proc/cpuinfo ]
+    then
+        WM_NCOMPPROCS=$(egrep "^processor" /proc/cpuinfo | wc -l)
+    elif [ -x /usr/sbin/sysctl -a -n "$(sysctl -q -n hw.ncpu)" ]
+    then
+        WM_NCOMPPROCS=$(sysctl -n hw.ncpu)
+    else
+        WM_NCOMPPROCS=1
+    fi
+
+    export WM_NCOMPPROCS
+}
 
-for arg in "$@"
-do
-    # Remove arg
-    shift
 
-    case "$arg" in
+#------------------------------------------------------------------------------
+# Parse the arguments and options
+#------------------------------------------------------------------------------
+
+while [ "$#" -gt 0 ]
+do
+    case "$1" in
+        # Print help
         -h | -help)
             usage
-            exit 0
             ;;
-        # Check if called from wmake to avoid recusion
-        -fromWmake)
-            fromWmake="fromWmake"
+        # Parallel compilation on all cores of local machine
+        -j)
+            setWM_NCOMPPROCS
+            test $# -ge 2 && expr $2 + 1 > /dev/null 2>&1 \
+                && shift && export WM_NCOMPPROCS=$1
+            echo "Compiling enabled on $WM_NCOMPPROCS cores"
+            ;;
+        # Parallel compilation on specified number of cores
+        -j*)
+            export WM_NCOMPPROCS=${1#-j}
+            echo "Compiling enabled on $WM_NCOMPPROCS cores"
+            ;;
+        # Non-stop compilation, ignoring errors
+        -k | -non-stop)
+            export WM_CONTINUE_ON_ERROR=1
+            ;;
+        # Disable scheduled parallel compilation
+        -no-scheduler)
+            unset WM_SCHEDULER
             ;;
-        -q)
-            qOpt="-q"
-            # Permanently remove arg
-            continue
+        # Meant to be used following a pull, this will:
+        # - remove dep files that depend on deleted files;
+        # - remove stale dep files;
+        # - update lnInclude directories;
+        # - remove empty directories, along with deprecated object directories
+        #   and respective binaries.
+        -update)
+            wrmdep -update
+            wrmdep -old
+            wmakeLnIncludeAll
+            wclean empty
+
+            # Set WM_UPDATE_DEPENDENCIES, so that wmake will pick up on it
+            export WM_UPDATE_DEPENDENCIES=yes
             ;;
-        # Target type
-        lib | libo | libso | dep | objects)
-            targetType=$arg
+        # Generate documentation
+        doc)
+            test -n "$genDoc" || usage "invalid option '$1'"
+            genDoc=1
+            ;;
+        # Specify target type
+        lib | libo | libso | dep)
+            test -n "$targetType" || usage "invalid option '$1'"
+            targetType=$1
+            ;;
+        --)
+            shift
+            break
+            ;;
+        -* | *)
+            usage "invalid option '$1'"
             ;;
     esac
-
-    # Re-insert arg
-    set -- "$@" "$arg"
+    shift
 done
 
 
 #------------------------------------------------------------------------------
-# Execute wmake -all if not called from wmake
-#------------------------------------------------------------------------------
-
-if [ -z "$fromWmake" ]
-then
-    exec wmake -all $qOpt $*
-else
-    # Print command
-    [ -z "$targetType" ] || targetSpace=" "
-    echo "$Script $targetType$targetSpace$(echo $PWD | sed s%$WM_PROJECT_DIR/%% )"
-fi
-
-
-#------------------------------------------------------------------------------
 # If WM_CONTINUE_ON_ERROR not set activate the shell option "stop on error"
 #------------------------------------------------------------------------------
 
@@ -127,7 +178,7 @@ fi
 # Cleanup local variables and functions
 #------------------------------------------------------------------------------
 
-unset Script usage fromWmake
+unset Script usage setWM_NCOMPPROCS
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/scripts/wmakeFunctions b/wmake/scripts/wmakeFunctions
index 0262350c2..9828ee4ef 100755
--- a/wmake/scripts/wmakeFunctions
+++ b/wmake/scripts/wmakeFunctions
@@ -35,7 +35,7 @@
 
 checkEnv()
 {
-    for envar in WM_OPTIONS WM_LINK_LANGUAGE WM_DIR WM_PROJECT_DIR
+    for envar in WM_OPTIONS WM_DIR WM_PROJECT_DIR
     do
         eval test "\$$envar" || {
             echo "$Script error: environment variable \$$envar not set" 1>&2
@@ -79,39 +79,13 @@ findTarget()
     fi
 }
 
-cdSource()
-{
-    if [ ! -d $MakeDir ]
-    then
-        echo "$Script: '$MakeDir' directory does not exist in $PWD" 1>&2
-        echo "    Searching up directories tree for Make directory"
-
-        findTarget .
-        targetType=
-
-        if [ "$dir" ]
-        then
-            cd $dir 2>/dev/null || {
-                echo "$Script error: could not change to directory '$dir'" 1>&2
-                exit 1
-            }
-        fi
-    fi
-
-
-    [ -r $MakeDir/files ] || {
-        echo "$Script error: file '$MakeDir/files' does not exist in $PWD" 1>&2
-        exit 1
-    }
-}
-
 findObjectDir()
 {
     expandPath $WM_PROJECT_DIR
     wmpdir=$exPath
     expandPath $1
 
-    if echo $exPath | grep "$wmpdir" > /dev/null
+    if echo $exPath | grep --colour=never "$wmpdir" > /dev/null
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
         objectsDir=$platformPath$(echo $exPath | sed s%$wmpdir%% )
@@ -128,25 +102,12 @@ findObjectDir()
     fi
 }
 
-if [ -n "$BASH_VERSION" ]; then
-    depToSource()
-    {
-        sourceFile=${depFile%.dep}
-        sourceFile="${sourceFile/platforms\/${WM_OPTIONS}\//}"
-        sourceFile="${sourceFile/Make\/${WM_OPTIONS}\//}"
-        sourceFile="${sourceFile/platforms\/${WM_OPTIONS}${WM_MPLIB}\//}"
-        sourceFile="${sourceFile/Make\/${WM_OPTIONS}${WM_MPLIB}\//}"
-    }
-else
-    depToSource()
-    {
-        sourceFile=$(echo ${depFile%.dep} |                 \
-            sed -e s%platforms/${WM_OPTIONS}/%%             \
-                -e s%Make/${WM_OPTIONS}/%%                  \
-                -e s%platforms/${WM_OPTIONS}${WM_MPLIB}/%%  \
-                -e s%Make/${WM_OPTIONS}${WM_MPLIB}/%% )
-    }
-fi
-
+depToSource()
+{
+    sourceFile=$(echo ${depFile%.dep} | \
+        sed -e s%platforms/${WM_OPTIONS}/%% -e s%Make/${WM_OPTIONS}/%% \
+            -e s%platforms/${WM_OPTIONS}${WM_MPLIB}/%% \
+            -e s%Make/${WM_OPTIONS}${WM_MPLIB}/%% )
+}
 
 #------------------------------------------------------------------------------
diff --git a/wmake/src/Makefile b/wmake/src/Makefile
index 9ced8251c..eb7e2734c 100644
--- a/wmake/src/Makefile
+++ b/wmake/src/Makefile
@@ -49,9 +49,15 @@ SHELL      = /bin/sh
 # Locally set optimized compilation
 WM_COMPILE_OPTION = Opt
 
+V = 1
+ifneq ("$(WM_QUIET_RULES)","")
+V = 0
+endif
+
 GENERAL_RULES   = $(WM_DIR)/rules/General
 include $(GENERAL_RULES)/general
 
+cFLAGS += -Wno-unused-function
 
 #------------------------------------------------------------------------------
 # Targets
@@ -60,18 +66,20 @@ include $(GENERAL_RULES)/general
 all:  $(WMAKE_BIN)/dirToString $(WMAKE_BIN)/wmkdep
 
 clean:
-	@E rm -f $(WMAKE_BIN)/* 2>/dev/null
+	rm -f $(WMAKE_BIN)/* 2>/dev/null
+
 
 $(WMAKE_BIN)/dirToString: dirToString.c
 	@mkdir -p $(WMAKE_BIN)
-	$(call QUIET_MESSAGE,compile,$<)
-	$E $(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
+	$(call WM_MESSAGE,cc,dirToString.c)
+	$(AT)$(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
+
 
 $(WMAKE_BIN)/wmkdep: wmkdep.l
 	@mkdir -p $(WMAKE_BIN)
-	$(call QUIET_MESSAGE,lex,$<)
-	$E flex wmkdep.l; \
-	$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
+	$(call WM_MESSAGE,ll,$<)
+	$(AT)flex $<
+	$(AT)$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
 	@rm -f lex.yy.c 2>/dev/null
 
 
diff --git a/wmake/src/wmkdep.l b/wmake/src/wmkdep.l
index b0b48d105..d5ad12f26 100644
--- a/wmake/src/wmkdep.l
+++ b/wmake/src/wmkdep.l
@@ -47,6 +47,7 @@ Usage
 #include <sys/types.h>
 #include <dirent.h>
 #include <errno.h>
+#include <libgen.h>
 
 void nextFile(const char* fileName);
 void importFile(const char* fileName);
@@ -145,7 +146,7 @@ const char* bufferPaths[FILE_STACK_SIZE];
 int main(int argc, char* argv[])
 {
     char *basePos, *dotPos;
-    int i, silent;
+    int i;
 
     if (argc == 1)
     {
@@ -154,6 +155,19 @@ int main(int argc, char* argv[])
     }
 
     sourceFile = strdup(argv[argc-1]);
+/*
+    verbose = (strncmp(argv[1], "-v", 2) == 0);
+    if (verbose)
+    {
+        fprintf(stderr, "Making dependency list for source file %s\n",
+	        sourceFile);
+    }
+    else
+    {
+        fprintf(stderr, " [DEP] %s\n", basename(sourceFile));
+    }
+*/
+
 
     if ((basePos = strrchr(sourceFile, '/')) == NULL)
     {
diff --git a/wmake/wclean b/wmake/wclean
index a2161a88c..996777d06 100755
--- a/wmake/wclean
+++ b/wmake/wclean
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2017 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -122,22 +122,12 @@ then
         }
     fi
 
-    # Print command
-    [ -z "$targetType" ] || targetSpace=" "
-    echo "$Script $targetType$targetSpace${dir:-.}"
+    # Provide some feedback
+    echo "$Script ${dir:-./}"
 fi
 
 
 #------------------------------------------------------------------------------
-# If target not specified search up the directory tree for the Make
-# sub-directory, check the existence of the 'files' file and clean there if
-# present
-# ------------------------------------------------------------------------------
-
-[ -n "$targetType" ] || cdSource
-
-
-#------------------------------------------------------------------------------
 # Remove empty sub-directories and exit
 #------------------------------------------------------------------------------
 
@@ -145,16 +135,18 @@ if [ "$targetType" = empty ]
 then
     # First pass: clean up empty source code directories
 
-    echo "Removing empty directories..."
+    echo "Searching for empty directories..."
 
     # Get sub-directories avoiding particular directories
     for dir in $(find . -mindepth 1 -maxdepth 1 \
                         -type d \( -name .git -prune -o -print \) )
     do
-        echo "    searching: $dir"
+        echo "check dir: $dir"
         find $dir -depth -type d -empty -exec rmdir {} \; -print
     done
 
+    echo "Search for empty directories complete."
+
     # Second pass: clean up object directories with WM_PROJECT_DIR that don't
     # have respective source code folders, along with the respective binaries
 
@@ -165,7 +157,7 @@ then
 
         if [ -d $objectsDir ]
         then
-            echo "    Removing redundant object directories in $objectsDir"
+            echo "Searching for deprecated object directories at: $objectsDir"
 
             find $objectsDir -name 'variables' -print | \
             while read variablesFile
@@ -179,10 +171,10 @@ then
                 then
                     # Delete the respective binary first
                     binaryFile=$(cat $variablesFile |
-                                grep -e '^ *\(EXE\|LIB\) *= *' )
+                                grep --colour=never -e '^ *\(EXE\|LIB\) *= *' )
 
                     # Catch all file extension (o,a,so,?+) for libraries
-                    if echo $binaryFile | grep -qe '^ *LIB *= *'
+                    if echo $binaryFile | grep --colour=never -qe '^ *LIB *= *'
                     then
                         binaryFile="${binaryFile}.*"
                     fi
@@ -205,6 +197,8 @@ then
                     rm -rvf $depFile 2>/dev/null
                 fi
             done
+
+            echo "Search for deprecated object directories complete."
         fi
     fi
 
@@ -231,7 +225,7 @@ then
         for dir in `find . \( -type d -a -name Make \)`
         do
             dir=${dir%/Make} # Parent directory - trim /Make from the end
-
+            echo $dir
             # If Allwclean exists execute otherwise wclean
             if [ -e "$dir/Allwclean" ]
             then
@@ -254,7 +248,7 @@ unset targetType
 if [ -d $MakeDir ]
 then
     objectsDir=$MakeDir/$WM_OPTIONS
-    if [ $(echo $PWD | grep "$WM_PROJECT_DIR") ]
+    if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
         objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
@@ -277,7 +271,7 @@ fi
 # Cleanup local variables and functions
 #------------------------------------------------------------------------------
 
-unset Script usage MakeDir
+unset Script usage
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wcleanLnIncludeAll b/wmake/wcleanLnIncludeAll
index b67247d3b..a1673d53b 100755
--- a/wmake/wcleanLnIncludeAll
+++ b/wmake/wcleanLnIncludeAll
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2017 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -34,17 +34,9 @@
 ##------------------------------------------------------------------------------
 Script=${0##*/}
 
-# Source the wmake functions
-. ${0%/*}/scripts/wmakeFunctions
-
-#------------------------------------------------------------------------------
-# Parse arguments and options
-#------------------------------------------------------------------------------
-
 # Default to the CWD
 if [ "$#" -eq 0 ]
 then
-    # Add the CWD to the arguments
     set -- .
 elif [ "$1" = "-h" -o "$1" = "-help" ]
 then
@@ -56,20 +48,6 @@ then
 fi
 
 
-#------------------------------------------------------------------------------
-# Search up the directory tree for the Make sub-directory,
-# check the existence of the 'files' file and clean there if present
-#------------------------------------------------------------------------------
-
-# Need to add an option or special logic to control cdSource
-# MakeDir=Make
-# cdSource
-
-
-#------------------------------------------------------------------------------
-# Search for all lnInclude directories and delete them
-#------------------------------------------------------------------------------
-
 for dir
 do
     if [ -d "$dir" ]
@@ -86,7 +64,7 @@ done
 # Cleanup local variables and functions
 #------------------------------------------------------------------------------
 
-unset Script MakeDir
+unset Script
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wmake b/wmake/wmake
index 38564f258..9756386bc 100755
--- a/wmake/wmake
+++ b/wmake/wmake
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 #------------------------------------------------------------------------------
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
@@ -49,15 +49,12 @@
 #         wdep -h
 #
 # See also
-#     wmakeLnInclude, wmakeLnIncludeAll, wmakeCollect, wdep, wrmdep, wrmo,
+#     wmakeLnInclude, wmakeLnIncludeAll, wdep, wrmdep, wrmo,
 #     wclean, wcleanPlatform, wcleanLnIncludeAll
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
 
-# Source the wmake functions
-. ${0%/*}/scripts/wmakeFunctions
-
 usage() {
     exec 1>&2
     while [ "$#" -ge 1 ]; do echo "$1"; shift; done
@@ -67,15 +64,9 @@ Usage: $Script [OPTION] [dir]
        $Script [OPTION] target [dir [MakeDir]]
 
 options:
-  -s | -silent      Quiet mode (does not echo commands)
-  -a | -all         wmake all sub-directories, running Allwmake if present
-  -q | -queue       wmakeCollect all sub-directories, running Allwmake if present
-  -k or -non-stop   Compile without stopping when errors occur
-  -j                Compile using all local cores/hyperthreads
-  -jN or -j N       Compile using N cores/hyperthreads
-  -no-scheduler     Compile without wmakeScheduler
-  -update           Update lnInclude directories, dep files, remove deprecated
-                    files and directories
+  -q | -quiet       Be quiet (use more terse output)
+  -s | -silent      Run make in 'silent' mode (do not echo commands)
+  -a | -all         Run wmake in all subdirectories
   -h | -help        Print the usage
 
 
@@ -86,15 +77,13 @@ The 'target' is a Makefile target:
   e.g., platforms/linux64GccDPOpt/.../fvMesh.o
 
 or a special target:
-  all               wmake all sub-directories, running Allwmake if present
-  queue             wmakeCollect all sub-directories, running Allwmake if present
+  all               wmake all subdirectories, running Allwmake files if present
   exe               Compile statically linked executable
   lib               Compile statically linked archive lib (.a)
   libo              Compile statically linked lib (.o)
   libso             Compile dynamically linked lib (.so)
   dep               Compile lnInclude and dependencies only
   updatedep         Compile dependencies only (in case of broken dependencies)
-  objects           Compile but not link
 
 USAGE
     exit 1
@@ -106,88 +95,39 @@ make="make"
 
 
 #------------------------------------------------------------------------------
-# Set WM_NCOMPPROCS to number of cores on local machine
-#------------------------------------------------------------------------------
-
-useAllCores()
-{
-    if [ -r /proc/cpuinfo ]
-    then
-        WM_NCOMPPROCS=$(egrep "^processor" /proc/cpuinfo | wc -l)
-    else
-        WM_NCOMPPROCS=1
-    fi
-
-    export WM_NCOMPPROCS
-}
-
-
-#------------------------------------------------------------------------------
 # Parse arguments and options
 #------------------------------------------------------------------------------
 
 # Default to compiling the local target only
 all=
-update=
+# Default to be noisy if WM_QUIET_RULES is not set
+quiet=
+[ -n "$WM_QUIET_RULES" ] && quiet="V=0"
 
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-        # Print help
-        -h | -help)
-            usage
-            ;;
-        -s | -silent)
-            export WM_QUIET=1
-            ;;
-        -a | -all | all)
-            all="all"
-            ;;
-        -q | -queue | queue)
-            all="queue"
-            ;;
-        # Parallel compilation on all cores of local machine
-        -j)
-            useAllCores
-            test $# -ge 2 && expr $2 + 1 > /dev/null 2>&1 \
-                && shift && export WM_NCOMPPROCS=$1
-            echo "Compiling enabled on $WM_NCOMPPROCS cores"
-            ;;
-        # Parallel compilation on specified number of cores
-        -j*)
-            export WM_NCOMPPROCS=${1#-j}
-            echo "Compiling enabled on $WM_NCOMPPROCS cores"
-            ;;
-        # Non-stop compilation, ignoring errors
-        -k | -non-stop)
-            export WM_CONTINUE_ON_ERROR=1
-            ;;
-        # Disable scheduled parallel compilation
-        -no-scheduler)
-            unset WM_SCHEDULER
-            ;;
-        # Meant to be used following a pull, this will:
-        # - remove dep files that depend on deleted files;
-        # - remove stale dep files;
-        # - update lnInclude directories;
-        # - remove empty directories, along with deprecated object directories
-        #   and respective binaries.
-        -update)
-            update="true"
-            [ -z "$all" ] && all="all"
-            ;;
-        --)
-            shift
-            break
-            ;;
-        -*)
-            usage "unknown option: '$*'"
-            ;;
-        *)
-            break
-            ;;
+    -h | -help)
+        usage
+        ;;
+    -q | -quiet)
+        quiet="V=0"
+        ;;
+    -s | -silent)
+        make="$make -s"
+        shift
+        ;;
+    -a | -all | all)
+        all="all"
+        shift
+        ;;
+    -*)
+        usage "unknown option: '$*'"
+        ;;
+    *)
+        break
+        ;;
     esac
-    shift
 done
 
 
@@ -195,7 +135,14 @@ done
 # Check environment variables
 #------------------------------------------------------------------------------
 
-checkEnv
+for envar in WM_OPTIONS WM_LINK_LANGUAGE WM_DIR
+do
+    eval test "\$$envar" || {
+        echo "$Script error: environment variable \$$envar not set" 1>&2
+        exit 1
+    }
+done
+
 
 # When compiling anything but a standalone exe WM_PROJECT and WM_PROJECT_DIR
 # must be set
@@ -221,8 +168,6 @@ fi
 
 if [ "$WM_NCOMPPROCS" ]
 then
-    parOpt="-j $WM_NCOMPPROCS"
-
     if [ "$WM_NCOMPPROCS" -gt 1 -a ! "$MAKEFLAGS" ]
     then
         lockDir=$HOME/.$WM_PROJECT/.wmake
@@ -234,7 +179,7 @@ then
             mkdir -p $lockDir
         fi
 
-        make="$make --no-print-directory $parOpt"
+        make="$make --no-print-directory -j "$WM_NCOMPPROCS
     fi
 fi
 
@@ -268,24 +213,6 @@ then
             exit 1
         }
     fi
-
-    # Print command
-    [ -z "$targetType" ] || targetSpace=" "
-    echo "$Script $targetType$targetSpace${dir:-.}"
-fi
-
-
-#------------------------------------------------------------------------------
-# Recurse the source tree to compile "all" targets
-#------------------------------------------------------------------------------
-
-if [ -n "$update" ]
-then
-    wrmdep -update
-    wrmdep -old
-    wmakeLnIncludeAll -update $parOpt
-    wclean empty
-    export WM_UPDATE_DEPENDENCIES=yes
 fi
 
 
@@ -297,7 +224,7 @@ if [ "$all" = "all" ]
 then
     if [ -e Allwmake ]
     then
-        ./Allwmake -fromWmake $targetType
+        ./Allwmake
         exit $?
     else
         # Have to keep track of the main exit code for the call to "make"
@@ -315,7 +242,7 @@ then
             # Compile all applications in sub-directories
             $make ${WM_CONTINUE_ON_ERROR:+-k} \
                   -f $WM_DIR/makefiles/apps \
-                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS"
+                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS" $quiet
             makeExitCode=$?
         fi
         # If the current directory contains a 'Make' directory continue
@@ -332,31 +259,61 @@ fi
 
 
 #------------------------------------------------------------------------------
-# Recurse the source tree to compile "all" targets using wmakeCollect
+# Search up the directory tree for the Make sub-directory,
+# check the existance of the 'files' file and build there if present
 #------------------------------------------------------------------------------
 
-if [ "$all" = "queue" ]
+unset dir
+
+expandPath()
+{
+    dir=$(dirname $1)
+    cwd=$PWD
+    cd $dir
+    exPath=$PWD
+    cd $cwd
+}
+
+findTarget()
+{
+    expandPath $1
+
+    if [ "$exPath" = "$WM_PROJECT_DIR" \
+                   -o "$exPath" = "$HOME" \
+                   -o "$exPath" = "/" \
+       ]
+    then
+        echo "$Script error: could not find Make directory" 1>&2
+    elif [ -d "$1/Make" ]; then
+        echo "    Found target directory " $1
+        dir=$1
+    else
+        findTarget "$1/.."
+    fi
+}
+
+if [ ! -d $MakeDir ]
 then
-    [ -n "$update" ] || wmakeLnIncludeAll $parOpt
-
-    (
-        export WM_COLLECT_DIR=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}/${PWD////_}
-        export WM_SCHEDULER=wmakeCollect
-        trap '$WM_SCHEDULER -kill' TERM INT
-        $WM_SCHEDULER -clean                                                   \
-     && wmake -all objects                                                     \
-     && $WM_SCHEDULER
-    ) && wmake -all
-    exit $?
-fi
+    echo "$Script: '$MakeDir' directory does not exist in $PWD" 1>&2
+    echo "    Searching up directories tree for Make directory"
 
+    findTarget .
+    targetType=
+
+    if [ "$dir" ]
+    then
+        cd $dir 2>/dev/null || {
+            echo "$Script error: could not change to directory '$dir'" 1>&2
+            exit 1
+        }
+    fi
+fi
 
-#------------------------------------------------------------------------------
-# Search up the directory tree for the Make sub-directory,
-# check the existence of the 'files' file and build there if present
-#------------------------------------------------------------------------------
 
-cdSource
+[ -r $MakeDir/files ] || {
+    echo "$Script error: file '$MakeDir/files' does not exist in $PWD" 1>&2
+    exit 1
+}
 
 
 #------------------------------------------------------------------------------
@@ -368,19 +325,10 @@ cdSource
 if [ "$targetType" = "" ]
 then
     unset targetType
-    if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+    if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
     then
         targetType=libso
     fi
-elif grep -e '^ *EXE *=' "$MakeDir/files" >/dev/null 2>&1
-then
-    # Application. Remove any nonsense targetType
-    case "$targetType" in
-      lib*)
-        unset targetType
-        break
-        ;;
-    esac
 fi
 
 
@@ -390,7 +338,7 @@ fi
 #------------------------------------------------------------------------------
 
 objectsDir=$MakeDir/$WM_OPTIONS
-if [ $(echo $PWD | grep "$WM_PROJECT_DIR") ]
+if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
 then
     platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
     objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
@@ -403,10 +351,10 @@ fi
     # Pre-build the $WM_OPTIONS/options file
     # which is included when building the $WM_OPTIONS/files file
     $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
-          OBJECTS_DIR=$objectsDir $objectsDir/options
+          OBJECTS_DIR=$objectsDir $quiet $objectsDir/options
 
     $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
-          OBJECTS_DIR=$objectsDir
+          OBJECTS_DIR=$objectsDir $quiet
 )
 
 
@@ -429,10 +377,10 @@ fi
 case "$targetType" in
     lib | libo | libso | dep )
         # ... but only if 'LIB' is declared in 'Make/files'
-        if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+        if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
         then
             $make -s -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-                  OBJECTS_DIR=$objectsDir lnInclude
+                  OBJECTS_DIR=$objectsDir $quiet lnInclude
         fi
         ;;
 esac
@@ -446,7 +394,7 @@ if [ -n "$WM_UPDATE_DEPENDENCIES" ]
 then
 
     $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-        OBJECTS_DIR=$objectsDir updatedep
+        OBJECTS_DIR=$objectsDir $quiet updatedep
     makeExitCode=$?
 
     if [ $makeExitCode -ne 0 ]
@@ -463,14 +411,14 @@ fi
 #------------------------------------------------------------------------------
 
 exec $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-     OBJECTS_DIR=$objectsDir $targetType
+     OBJECTS_DIR=$objectsDir $quiet $targetType
 
 
 #------------------------------------------------------------------------------
 # Cleanup local variables and functions
 #------------------------------------------------------------------------------
 
-unset Script usage useAllCores update expandPath findTarget
+unset Script usage expandPath findTarget
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wmakeCheckPwd b/wmake/wmakeCheckPwd
index 726b0038f..f10b6d233 100755
--- a/wmake/wmakeCheckPwd
+++ b/wmake/wmakeCheckPwd
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2017 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -89,7 +89,7 @@ dirName="$1"
 # Simple check against $PWD
 [ "$PWD" = "$dirName" ] && exit 0
 
-# Check existence of <dir>
+# Check existance of <dir>
 [ -d "$dirName" ] || {
     [ "$quietOpt" = true ] || {
         echo "$Script error: Directory does not exist $dirName"
diff --git a/wmake/wmakeCollect b/wmake/wmakeCollect
deleted file mode 100755
index 2aaa2c6ee..000000000
--- a/wmake/wmakeCollect
+++ /dev/null
@@ -1,172 +0,0 @@
-#!/bin/bash
-#------------------------------------------------------------------------------
-# =========                 |
-# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
-#  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2016 OpenFOAM Foundation
-#    \\/     M anipulation  |
-#-------------------------------------------------------------------------------
-# License
-#     This file is part of OpenFOAM.
-#
-#     OpenFOAM is free software: you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by
-#     the Free Software Foundation, either version 3 of the License, or
-#     (at your option) any later version.
-#
-#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
-#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-#     for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
-#
-# Script
-#     wmakeCollect
-#
-# Usage
-#     wmakeCollect [OPTION] <command>
-#
-# Description
-#     wmake scheduler for efficient parallel compilations.
-#
-#-------------------------------------------------------------------------------
-Script=${0##*/}
-
-usage() {
-    exec 1>&2
-    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
-    cat<<USAGE
-
-Usage: $Script [OPTION] <command>
-
-options:
-  -clean            Clean-up before compilation (removes old makefiles)
-  -kill             Clean-up after termination (removes makefiles)
-  -h | -help        Print the usage
-
-Collecting scheduler for fast parallel compilation of large numbers of object
-files.  Can be used in compiling OpenFOAM by setting the WM_SCHEDULER variable.
-
-When called with a compilation command it is written into a file in the
-directory $WM_COLLECT_DIR.
-
-When called without a command the files in the $WM_COLLECT_DIR directory are
-combined into a single Makefile which is passed to make to compile all of the
-object files efficiently in parallel.
-
-Typical usage for compiling OpenFOAM:
-
-  - Ensure all lnInclude directories are up-to-date:
-    wmakeLnIncludeAll
-
-  - Compile all with this scheduler:
-    wmake -queue or wmake -q
-
-USAGE
-    exit 1
-}
-
-# Set true to clean-up file if interupted
-cleanup=
-
-while [ "$#" -gt 0 ]
-do
-    case "$1" in
-    -h | -help)
-        usage
-        ;;
-    -kill | -clean)
-        cleanup="true"
-        shift
-        ;;
-    -*)
-        usage "unknown option: '$*'"
-        break
-        ;;
-    *)
-        break
-        ;;
-    esac
-done
-
-
-if [ -z "$WM_COLLECT_DIR" ]
-then
-    echo "$Script error: WM_COLLECT_DIR not set"
-    exit 1
-fi
-
-
-if [ -n "$WM_QUIET" ]
-then
-    E="@"
-fi
-
-
-# Collected makefile for this build
-makefile="$WM_COLLECT_DIR.Makefile"
-
-
-# Clean-up files and exit
-if [ -n "$cleanup" ]
-then
-    rm -rf $WM_COLLECT_DIR
-    rm -f $makefile
-    exit 0
-fi
-
-
-if [ "$#" -gt 0 ]
-then
-    # Make sure directories exist
-    mkdir -p $WM_COLLECT_DIR
-
-    # The current source file
-    source="${@: -3:1}"
-
-    # The current target
-    object="${@: -1:1}"
-
-    # Create a unique name for the makefile from the object path
-    file=$(mktemp $WM_COLLECT_DIR/XXXXXX)
-
-    # Add the current target to the list of objects
-    echo "OBJECTS += $object" >> $file
-
-    # Add the build rule for the current target
-    echo "$object: $makefile" >> $file
-    [ -z "$E" ] ||
-        echo -e "\t@echo \"    compiling: ${source##*/}\"" >> $file
-    echo -e "\t$E cd $PWD && \\" >> $file
-    echo -e "\t${@:1:($#-1)} $object" >> $file
-    echo >> $file
-else
-    if [ -d $WM_COLLECT_DIR ]
-    then
-        # Collect all the makefiles into a single makefiles for this build
-        (cd $WM_COLLECT_DIR && ls -1rt | xargs cat > $makefile)
-
-        # Add a build rule for all of the targets
-        echo 'all: $(OBJECTS)' >> $makefile
-
-        # Clear out all of the target makefiles
-        rm -rf $WM_COLLECT_DIR
-
-        # Run make on the collected makefile
-        make -j $WM_NCOMPPROCS -f $makefile all
-
-        rm -f $makefile
-    fi
-fi
-
-
-#------------------------------------------------------------------------------
-# Cleanup local variables and functions
-#------------------------------------------------------------------------------
-
-unset Script usage
-
-
-#------------------------------------------------------------------------------
diff --git a/wmake/wmakeLnInclude b/wmake/wmakeLnInclude
index 3db3802de..375328854 100755
--- a/wmake/wmakeLnInclude
+++ b/wmake/wmakeLnInclude
@@ -78,24 +78,24 @@ unset update silentOpt
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-        -h | -help)   # Provide immediate help
-            usage
-            ;;
-        -u | -update)
-            update=true
-            lnOpt="-sf"
-            shift
-            ;;
-        -s | -silent)
-            silentOpt=true
-            shift
-            ;;
-        -*)
-            usage "unknown option: '$*'"
-            ;;
-        *)
-            break
-            ;;
+    -h | -help)   # Provide immediate help
+        usage
+        ;;
+    -u | -update)
+        update=true
+        lnOpt="-sf"
+        shift
+        ;;
+    -s | -silent)
+        silentOpt=true
+        shift
+        ;;
+    -*)
+        usage "unknown option: '$*'"
+        ;;
+    *)
+        break
+        ;;
     esac
 done
 
@@ -126,7 +126,10 @@ incDir=$baseDir/lnInclude
 
 if [ -d $incDir ]
 then
-    [ "$update" = true ] || exit 0
+    [ "$update" = true ] || {
+        # echo "$Script error: include directory $incDir already exists" 1>&2
+        exit 0
+    }
 else
     mkdir $incDir
 fi
@@ -138,11 +141,14 @@ fi
 
 cd $incDir || exit 1
 
-if [ "$silentOpt" = true -o -n "$WM_QUIET" ]
+if [ "$silentOpt" != true ]
 then
-    echo "    ln: $incDir" 1>&2
-else
-    echo "$Script: linking include files to $incDir" 1>&2
+    if [ -n "$WM_QUIET_RULES" ]
+    then
+        echo "  LN	$incDir" 1>&2
+    else
+        echo "$Script: linking include files to $incDir" 1>&2
+    fi
 fi
 
 
diff --git a/wmake/wmakeLnIncludeAll b/wmake/wmakeLnIncludeAll
index 73cd5798c..12062ac59 100755
--- a/wmake/wmakeLnIncludeAll
+++ b/wmake/wmakeLnIncludeAll
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 #------------------------------------------------------------------------------
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
@@ -30,7 +30,7 @@
 #
 # Description
 #     Find directories with a 'Make/files' that contains a 'LIB =' directive
-#     and execute 'wmakeLnInclude' for each one
+#     and execute 'wmakeLnInclude -update' for each one
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
@@ -39,15 +39,10 @@ usage() {
     while [ "$#" -ge 1 ]; do echo "$1"; shift; done
     cat<<USAGE
 
-Usage: $Script [OPTION] [dir1 .. dirN]
+Usage: $Script [dir1 .. dirN]
 
-options:
-  -j                Compile using all local cores/hyperthreads
-  -jN or -j N       Compile using N cores/hyperthreads
-  -h | -help        Print the usage
-
-Find directories with a 'Make/files' that contains a 'LIB =' directive
-and execute 'wmakeLnInclude -update' for each one
+    Find directories with a 'Make/files' that contains a 'LIB =' directive
+    and execute 'wmakeLnInclude -update' for each one
 
 USAGE
     exit 1
@@ -59,61 +54,35 @@ USAGE
 #------------------------------------------------------------------------------
 
 findName=lnInclude
-nCores=0
-
-# Default 'wmakeLnInclude' option
-wmLnOpt=
 
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-        -h | -help)   # Provide immediate help
-            usage
-            ;;
-        -u | -update)
-            wmLnOpt="-update"
-            ;;
-        # Parallel execution on WM_NCOMPPROCS cores
-        -j)
-            nCores=$WM_NCOMPPROCS
-            test $# -ge 2 && expr $2 + 1 > /dev/null 2>&1 \
-                && shift && nCores=$1
-            ;;
-        # Parallel compilation on specified number of cores
-        -j*)
-            nCores=${1#-j}
-            ;;
-        -*)
-            usage "unknown option: '$*'"
-            ;;
-        *)
-            break
-            ;;
+    -h | -help)   # Provide immediate help
+        usage
+        ;;
+    -*)
+        usage "unknown option: '$*'"
+        ;;
+    *)
+        break
+        ;;
     esac
-    shift
 done
 
 
-FAIL=0
-
-if [ "$nCores" -gt 0 ]
-then
-    echo "$Script: starting wmakeLnInclude processes on $nCores cores"
-else
-    echo "$Script: running wmakeLnInclude"
-fi
-
-
-# Defaults to searching from CWD
+# Default to searching from CWD
 [ "$#" -gt 0 ] || set -- .
 
 for checkDir
 do
     if [ -d $checkDir ]
     then
-        echo "    searching $checkDir for 'Make' directories"
+        echo "Searching: $checkDir for 'Make' directories"
+        echo "---------"
     else
-        echo "    skipping non-dir $checkDir"
+        echo "Skipping non-dir: $checkDir"
+        echo "----------------"
         continue
     fi
 
@@ -122,43 +91,18 @@ do
         topDir=${MakeDir%/Make}    # trim /Make from the end
         if [ -d "$topDir" ]
         then
-            if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+            if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
             then
-                # If running in parallel start wmakeLnInclude on nCores
-                # and more as the cores become free
-                if [ "$nCores" -gt 0 ]
-                then
-                    joblist=($(jobs -p))
-                    while (( ${#joblist[*]} > $nCores ))
-                    do
-                        # When the job limit is reached wait for a job to finish
-                        wait -n
-                        joblist=($(jobs -p))
-                    done
-                    wmakeLnInclude $wmLnOpt $topDir &
-                else
-                    wmakeLnInclude $wmLnOpt $topDir
-                fi
+                wmakeLnInclude -update $topDir
             elif [ -d "$topDir/lnInclude" ]
             then
-                echo "    removing spurious $topDir/lnInclude"
+                echo "removing spurious $topDir/lnInclude"
                 rm -rf "$topDir/lnInclude"
             fi
         fi
     done
 done
 
-if [ "$nCores" -gt 0 ]
-then
-    # Wait for all of the wmakeLnInclude jobs to finish
-    wait
-
-    # Synchronize the file system to ensure that all of the links exist
-    # before compilation
-    # sync
-    sleep 2
-fi
-
 
 #------------------------------------------------------------------------------
 # Cleanup local variables and functions
diff --git a/wmake/wmakePrintBuild b/wmake/wmakePrintBuild
index 39a8f3be0..c23e63d33 100755
--- a/wmake/wmakePrintBuild
+++ b/wmake/wmakePrintBuild
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -205,11 +205,10 @@ then
         else
             echo "version changed from previous build" 1>&2
         fi
-        exit $rc
     else
         echo "no git description found" 1>&2
-        exit 0
     fi
+    exit $rc
 fi
 
 
diff --git a/wmake/wrmdep b/wmake/wrmdep
index 790d6ed90..8fab8cf80 100755
--- a/wmake/wrmdep
+++ b/wmake/wrmdep
@@ -152,7 +152,7 @@ files)
         find $objectsDir -name '*.dep' -print | xargs -t rm 2>/dev/null
     else
         echo "removing .dep files referring to $1 ..."
-        find $objectsDir -name '*.dep' -exec grep -q "$1" '{}' \; \
+        find $objectsDir -name '*.dep' -exec grep --colour=never -q "$1" '{}' \; \
              -exec rm '{}' \; -print
     fi
 
@@ -163,17 +163,15 @@ oldFolders)
     # Default is the current directory
     [ "$#" -gt 0 ] || set -- .
 
-    echo "Removing dep files that refer to sources files that no longer exist..."
-
     for checkDir
     do
         findObjectDir $checkDir
 
         if [ -d $objectsDir ]
         then
-            echo "    searching: $objectsDir"
+            echo "Searching: $objectsDir"
         else
-            echo "    skipping non-dir: $objectsDir"
+            echo "Skipping non-dir: $objectsDir"
             continue
         fi
 
@@ -184,7 +182,7 @@ oldFolders)
             # Check C++ or Flex source file exists
             if [ ! -r "$sourceFile" ];
             then
-                echo "    rm $depFile"
+                echo "rm $depFile"
                 rm -f $depFile 2>/dev/null
             fi
         done
@@ -194,23 +192,20 @@ oldFolders)
 
 updateMode)
 
-    if [ "$PWD" != "$WM_PROJECT_DIR" ]
-    then
-        echo "Cannot 'update', not in the project top-level directory"
-        exit 1
-    fi
+    [ "$PWD" = "$WM_PROJECT_DIR" ] \
+        || usage "Not in the project top-level directory"
 
-    echo "Removing dep files corresponding to source files that no longer exist..."
+    echo "Purging all dep files that relate to files that no longer exist..."
     fileNameList=$(find -L src applications -name '*.[CHL]' -type l)
 
     for filePathAndName in $fileNameList
     do
         fileName=$(basename $filePathAndName)
-        echo "    'src': $fileName"
+        echo "Purging from 'src': $fileName"
         cd src
         $Script -a $fileName
 
-        echo "    'applications': $fileName"
+        echo "Purging from 'applications': $fileName"
         cd ../applications
         $Script -a $fileName
 
